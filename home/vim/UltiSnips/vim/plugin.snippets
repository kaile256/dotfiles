snippet '(if\s*)?tap' "Dein: guard for plugin config under ftplugin/" br
`!p
path = vim.eval('expand("%:p")')
is_in_ftplugin = re.search(r'/ftplugin/', path)
should_guard = is_in_ftplugin

`if `!p

if should_guard:
  snip.rv = '!'
else :
  snip.rv = ''

`dein#tap('${1:vim-plugin}')`!p

if should_guard:
  snip.rv = ' | finish | '
else :
  indent = vim.eval('repeat(" ", &sw)')
  snip.rv = "\n" + indent + snip.v.text
`endif
endsnippet

snippet sandwich "b:sandwich_magicchar_f_patterns" w
let b:sandwich_magicchar_f_patterns =
      \ get(g:, 'sandwich#magicchar#f_patterns', [])

let b:sandwich_magicchar_f_patterns += [{
      \ 'bra'    : '${1}',
      \ 'ket'    : '${2}',
      \ 'header' : '${3:\<\%(\h\k*:\)*\h\k*}',
      \ 'footer' : '${4}',
      \ }]
endsnippet

snippet themis "[themis] Initialize" b
let g:repo_root = fnamemodify(expand('<sfile>'), ':p:h:h')

call themis#option('recursive', 1)

let s:helper = themis#helper('assert')
call themis#helper('command').with(s:helper)
endsnippet

snippet repmo "[repmo] Initialize" w
noremap <expr> $1 repmo#Key('$2', '$3')
noremap <expr> $1 repmo#Key('$3', '$2')
endsnippet
