snippet vimspector "WIP: Description" b
{
  "adapters": {
    "${1:adapter name}": {
      "command": [
        "${2:shell command}",
        "${gadgetDir}/${3:path/to/debagger}"
      ],
      "variables": {
        "${4:CapitalizedWords}": {
          "shell": [ ${5:"commands in array to get a value"} ]
        }
      }
    }
  },
  "configurations": {
    "${6:configuration name}": {
      "adapter": "$1",
      "configuration": {
        "request": ${7|launch,attach|}
        "name": "${8:Describe as you like}",
        "type"
      }
    }
  }
}
endsnippet

snippet next/babel "presets for babel with NextJS" b
{
  "presets": ["next/babel"],
  "plugins": []
}
endsnippet

priority -100

snippet '([^{}]+)' "$1: $2" br
"${1:`!p snip.rv = re.sub(r'^"', '', match.group(1))`}": ${2:`!p
try :
  default = snip.visual_content
# except AttributeError:
#   default = ''

if re.search(^',$', default):
  snip.rv = "{" + default + "}"
else :
  snip.rv =  default

`}`!p
require_comma = vim.eval("search('\%#\(\s*\n\)*\s*}', 'nW')")
if require_comma:
  snip.rv = ','
vim.command('keepjumps keeppatterns s/"$//e')
`
endsnippet
