!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
0	vim_origin/sessions/default.vim	/^normal! 0$/;"	m
ADDVAR_EXPORT	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ADDVAR_EXPORT =   1 << 0,$/;"	e	enum:__anon2	file:
ADDVAR_RESTORE	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ADDVAR_RESTORE =  1 << 2$/;"	e	enum:__anon2	file:
ADDVAR_RESTRICT	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ADDVAR_RESTRICT = 1 << 1,$/;"	e	enum:__anon2	file:
AFTERTRAPHOOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	3193;"	d
ALIASESOPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ALIASESOPT,$/;"	e	enum:__anon36
ALIASESOPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ALIASESOPT__,$/;"	e	enum:__anon12	file:
ALIASFUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ALIASFUNCDEF,$/;"	e	enum:__anon36
ALIASFUNCDEF__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ALIASFUNCDEF__,$/;"	e	enum:__anon12	file:
ALIAS_GLOBAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1218;"	d
ALIAS_SUFFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	1220;"	d
ALIGN64	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    off_t _size ALIGN64;$/;"	m	struct:gmatch	file:
ALIGN64	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    off_t data ALIGN64;		\/* Argument passed to function               *\/$/;"	m	struct:qual	file:
ALIGN64	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    off_t size ALIGN64;$/;"	m	struct:gmatch	file:
ALIGN64	zsh/.zplugin/bin/zmodules/Src/glob.c	34;"	d	file:
ALIGN64	zsh/.zplugin/bin/zmodules/Src/glob.c	36;"	d	file:
ALLEXPORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ALLEXPORT,$/;"	e	enum:__anon36
ALLEXPORT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ALLEXPORT__,$/;"	e	enum:__anon12	file:
ALLOWHIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2214;"	d
ALWAYSLASTPROMPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ALWAYSLASTPROMPT,$/;"	e	enum:__anon36
ALWAYSLASTPROMPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ALWAYSLASTPROMPT__,$/;"	e	enum:__anon12	file:
ALWAYSTOEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ALWAYSTOEND,$/;"	e	enum:__anon36
ALWAYSTOEND__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ALWAYSTOEND__,$/;"	e	enum:__anon12	file:
AMPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AMPER,		\/* 5  *\/$/;"	e	enum:lextok
AMPERBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AMPERBANG,		\/* 30 *\/$/;"	e	enum:lextok
AMPOUTANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AMPOUTANG,		\/* 20 *\/$/;"	e	enum:lextok
ANONYMOUS_FUNCTION_NAME	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static const char *const ANONYMOUS_FUNCTION_NAME = "(anon)";$/;"	v	file:
APPENDCREATE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    APPENDCREATE,$/;"	e	enum:__anon36
APPENDCREATE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    APPENDCREATE__,$/;"	e	enum:__anon12	file:
APPENDHISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    APPENDHISTORY,$/;"	e	enum:__anon36
APPENDHISTORY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    APPENDHISTORY__,$/;"	e	enum:__anon12	file:
ARENA_SIZEOF	zsh/.zplugin/bin/zmodules/Src/mem.c	125;"	d	file:
ARRPARAMDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2056;"	d
ASG_ARRAY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASG_ARRAY = 1,$/;"	e	enum:__anon22
ASG_ARRAYP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1245;"	d
ASG_KEY_VALUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASG_KEY_VALUE = 2$/;"	e	enum:__anon22
ASG_VALUEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1253;"	d
ASSIGN_MSTREAM	zsh/.zplugin/bin/zmodules/Src/builtin.c	4322;"	d	file:
ASSPM_AUGMENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_AUGMENT = 1 << 0,$/;"	e	enum:__anon33
ASSPM_ENV_IMPORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_ENV_IMPORT = 1 << 3,$/;"	e	enum:__anon33
ASSPM_KEY_VALUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_KEY_VALUE = 1 << 4$/;"	e	enum:__anon33
ASSPM_WARN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_WARN = (ASSPM_WARN_CREATE|ASSPM_WARN_NESTED),$/;"	e	enum:__anon33
ASSPM_WARN_CREATE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_WARN_CREATE = 1 << 1,$/;"	e	enum:__anon33
ASSPM_WARN_NESTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ASSPM_WARN_NESTED = 1 << 2,$/;"	e	enum:__anon33
AUTOCD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOCD,$/;"	e	enum:__anon36
AUTOCD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOCD__,$/;"	e	enum:__anon12	file:
AUTOCONTINUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOCONTINUE,$/;"	e	enum:__anon36
AUTOCONTINUE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOCONTINUE__,$/;"	e	enum:__anon12	file:
AUTOLIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOLIST,$/;"	e	enum:__anon36
AUTOLIST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOLIST__,$/;"	e	enum:__anon12	file:
AUTOMENU	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOMENU,$/;"	e	enum:__anon36
AUTOMENU__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOMENU__,$/;"	e	enum:__anon12	file:
AUTONAMEDIRS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTONAMEDIRS,$/;"	e	enum:__anon36
AUTONAMEDIRS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTONAMEDIRS__,$/;"	e	enum:__anon12	file:
AUTOPARAMKEYS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOPARAMKEYS,$/;"	e	enum:__anon36
AUTOPARAMKEYS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOPARAMKEYS__,$/;"	e	enum:__anon12	file:
AUTOPARAMSLASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOPARAMSLASH,$/;"	e	enum:__anon36
AUTOPARAMSLASH__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOPARAMSLASH__,$/;"	e	enum:__anon12	file:
AUTOPUSHD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOPUSHD,$/;"	e	enum:__anon36
AUTOPUSHD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOPUSHD__,$/;"	e	enum:__anon12	file:
AUTOREMOVESLASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTOREMOVESLASH,$/;"	e	enum:__anon36
AUTOREMOVESLASH__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTOREMOVESLASH__,$/;"	e	enum:__anon12	file:
AUTORESUME	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AUTORESUME,$/;"	e	enum:__anon36
AUTORESUME__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    AUTORESUME__,$/;"	e	enum:__anon12	file:
Add	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f
AddNodeFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void     (*AddNodeFunc)    _((HashTable, char *, void *));$/;"	t
Algo	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)$/;"	t
Alias	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct alias     *Alias;$/;"	t	typeref:struct:alias
Alt0	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Alt0$/;"	c
AltA	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltA = Alt0 + 'a' - '0' + iota$/;"	c
AltB	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltB$/;"	c
AltBS	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltBS$/;"	c
AltC	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltC$/;"	c
AltD	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltD$/;"	c
AltDown	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltDown$/;"	c
AltE	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltE$/;"	c
AltF	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltF$/;"	c
AltLeft	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltLeft$/;"	c
AltRight	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltRight$/;"	c
AltSlash	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltSlash$/;"	c
AltSpace	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltSpace$/;"	c
AltUp	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltUp$/;"	c
AltZ	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	AltZ     = AltA + 'z' - 'a'$/;"	c
AsString	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f
AsString	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f
AsUint16	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f
Asgment	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct asgment   *Asgment;$/;"	t	typeref:struct:asgment
AtomicBool	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	t
Attr	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^type Attr int$/;"	t
Attr	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t
AttrRegular	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	AttrRegular Attr = Attr(0)$/;"	c
AttrRegular	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	AttrRegular Attr = 0$/;"	c
BADPATTERN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BADPATTERN,$/;"	e	enum:__anon36
BADPATTERN__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BADPATTERN__,$/;"	e	enum:__anon12	file:
BANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BANG,	\/* !         *\/$/;"	e	enum:lextok
BANGHIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BANGHIST,$/;"	e	enum:__anon36
BANGHIST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BANGHIST__,$/;"	e	enum:__anon12	file:
BAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BAR,		\/* 25 *\/$/;"	e	enum:lextok
BARAMP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BARAMP,$/;"	e	enum:lextok
BAREGLOBQUAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BAREGLOBQUAL,$/;"	e	enum:__anon36
BAREGLOBQUAL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BAREGLOBQUAL__,$/;"	e	enum:__anon12	file:
BASHAUTOLIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BASHAUTOLIST,$/;"	e	enum:__anon36
BASHAUTOLIST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BASHAUTOLIST__,$/;"	e	enum:__anon12	file:
BASHREMATCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BASHREMATCH,$/;"	e	enum:__anon36
BASHREMATCH__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BASHREMATCH__,$/;"	e	enum:__anon12	file:
BDIGBUFSIZE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	531;"	d
BEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BEEP,$/;"	e	enum:__anon36
BEEP__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BEEP__,$/;"	e	enum:__anon12	file:
BEFORETRAPHOOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	3192;"	d
BGNICE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BGNICE,$/;"	e	enum:__anon36
BGNICE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BGNICE__,$/;"	e	enum:__anon12	file:
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY32	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARY32       := fzf-$(GOOS)_386$/;"	m
BINARY64	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BINF_ADDED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1416;"	d
BINF_ASSIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1443;"	d
BINF_AUTOALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1431;"	d
BINF_BUILTIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1420;"	d
BINF_CLEARENV	zsh/.zplugin/bin/zmodules/Src/zsh.h	1430;"	d
BINF_COMMAND	zsh/.zplugin/bin/zmodules/Src/zsh.h	1421;"	d
BINF_DASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1419;"	d
BINF_DASHDASHVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	1429;"	d
BINF_EXEC	zsh/.zplugin/bin/zmodules/Src/zsh.h	1422;"	d
BINF_HANDLES_OPTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1437;"	d
BINF_KEEPNUM	zsh/.zplugin/bin/zmodules/Src/zsh.h	1427;"	d
BINF_MAGICEQUALS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1417;"	d
BINF_NOGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	1423;"	d
BINF_PLUSOPTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1414;"	d
BINF_PREFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	1418;"	d
BINF_PRINTOPTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1415;"	d
BINF_PSPECIAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1424;"	d
BINF_SKIPDASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1428;"	d
BINF_SKIPINVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	1426;"	d
BIN_BG	zsh/.zplugin/bin/zmodules/Src/hashtable.h	35;"	d
BIN_BRACKET	zsh/.zplugin/bin/zmodules/Src/hashtable.h	55;"	d
BIN_BREAK	zsh/.zplugin/bin/zmodules/Src/hashtable.h	40;"	d
BIN_CD	zsh/.zplugin/bin/zmodules/Src/hashtable.h	44;"	d
BIN_COMMAND	zsh/.zplugin/bin/zmodules/Src/hashtable.h	61;"	d
BIN_CONTINUE	zsh/.zplugin/bin/zmodules/Src/hashtable.h	41;"	d
BIN_DISABLE	zsh/.zplugin/bin/zmodules/Src/hashtable.h	58;"	d
BIN_DISOWN	zsh/.zplugin/bin/zmodules/Src/hashtable.h	39;"	d
BIN_ECHO	zsh/.zplugin/bin/zmodules/Src/hashtable.h	57;"	d
BIN_ENABLE	zsh/.zplugin/bin/zmodules/Src/hashtable.h	59;"	d
BIN_EVAL	zsh/.zplugin/bin/zmodules/Src/hashtable.h	48;"	d
BIN_EXIT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	42;"	d
BIN_FC	zsh/.zplugin/bin/zmodules/Src/hashtable.h	50;"	d
BIN_FG	zsh/.zplugin/bin/zmodules/Src/hashtable.h	36;"	d
BIN_JOBS	zsh/.zplugin/bin/zmodules/Src/hashtable.h	37;"	d
BIN_LOGOUT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	53;"	d
BIN_POPD	zsh/.zplugin/bin/zmodules/Src/hashtable.h	45;"	d
BIN_PREFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	1409;"	d
BIN_PRINT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	47;"	d
BIN_PRINTF	zsh/.zplugin/bin/zmodules/Src/hashtable.h	60;"	d
BIN_PUSHD	zsh/.zplugin/bin/zmodules/Src/hashtable.h	46;"	d
BIN_PUSHLINE	zsh/.zplugin/bin/zmodules/Src/hashtable.h	52;"	d
BIN_R	zsh/.zplugin/bin/zmodules/Src/hashtable.h	51;"	d
BIN_READONLY	zsh/.zplugin/bin/zmodules/Src/hashtable.h	56;"	d
BIN_RETURN	zsh/.zplugin/bin/zmodules/Src/hashtable.h	43;"	d
BIN_SCHED	zsh/.zplugin/bin/zmodules/Src/hashtable.h	49;"	d
BIN_SETOPT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	68;"	d
BIN_TEST	zsh/.zplugin/bin/zmodules/Src/hashtable.h	54;"	d
BIN_TYPESET	zsh/.zplugin/bin/zmodules/Src/hashtable.h	34;"	d
BIN_UNALIAS	zsh/.zplugin/bin/zmodules/Src/hashtable.h	63;"	d
BIN_UNFUNCTION	zsh/.zplugin/bin/zmodules/Src/hashtable.h	64;"	d
BIN_UNHASH	zsh/.zplugin/bin/zmodules/Src/hashtable.h	62;"	d
BIN_UNSET	zsh/.zplugin/bin/zmodules/Src/hashtable.h	65;"	d
BIN_UNSETOPT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	69;"	d
BIN_WAIT	zsh/.zplugin/bin/zmodules/Src/hashtable.h	38;"	d
BR	zsh/.zplugin/bin/zmodules/Src/params.c	270;"	d	file:
BR	zsh/.zplugin/bin/zmodules/Src/params.c	273;"	d	file:
BR	zsh/.zplugin/bin/zmodules/Src/params.c	470;"	d	file:
BRACECCL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BRACECCL,$/;"	e	enum:__anon36
BRACECCL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BRACECCL__,$/;"	e	enum:__anon12	file:
BSDECHO	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    BSDECHO,$/;"	e	enum:__anon36
BSDECHO__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    BSDECHO__,$/;"	e	enum:__anon12	file:
BSpace	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	BSpace$/;"	c
BTab	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	BTab$/;"	c
BUILD_FLAGS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-X main.revision=$(REVISION) -w -extldflags=$(LDFLAGS)" -tags "$(TAGS)"$/;"	m
BUILTIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1407;"	d
Bang	zsh/.zplugin/bin/zmodules/Src/zsh.h	196;"	d
Bar	zsh/.zplugin/bin/zmodules/Src/zsh.h	182;"	d
Bg	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f
Bgstatus	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^typedef struct bgstatus *Bgstatus;$/;"	t	typeref:struct:bgstatus	file:
Blink	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Blink            = Attr(1 << 4)$/;"	c
Blink	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c
Blink2	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Blink2           = Attr(1 << 5)$/;"	c
Bnull	zsh/.zplugin/bin/zmodules/Src/zsh.h	208;"	d
Bnullkeep	zsh/.zplugin/bin/zmodules/Src/zsh.h	213;"	d
Bold	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Bold             = Attr(1)$/;"	c
Bold	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c
BorderAround	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	BorderAround$/;"	c
BorderHorizontal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c
BorderNone	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c
BorderShape	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type BorderShape int$/;"	t
BorderStyle	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	t
Buf_vars	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^typedef struct buf_vars *Buf_vars;$/;"	t	typeref:struct:buf_vars	file:
BuildPattern	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool, forward bool,$/;"	f
Builtin	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct builtin   *Builtin;$/;"	t	typeref:struct:builtin
ByOrder	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type ByOrder []Offset$/;"	t
ByRelevance	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type ByRelevance []Result$/;"	t
ByRelevanceTac	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t
Bytes	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f
CASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASE,	\/* case      *\/$/;"	e	enum:lextok
CASEGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASEGLOB,$/;"	e	enum:__anon36
CASEGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CASEGLOB__,$/;"	e	enum:__anon12	file:
CASEMATCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASEMATCH,$/;"	e	enum:__anon36
CASEMATCH__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CASEMATCH__,$/;"	e	enum:__anon12	file:
CASMOD_CAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASMOD_CAPS$/;"	e	enum:__anon39
CASMOD_LOWER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASMOD_LOWER,$/;"	e	enum:__anon39
CASMOD_NONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASMOD_NONE,		\/* dummy for tests *\/$/;"	e	enum:__anon39
CASMOD_UPPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CASMOD_UPPER,$/;"	e	enum:__anon39
CBASES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CBASES,$/;"	e	enum:__anon36
CBASES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CBASES__,$/;"	e	enum:__anon12	file:
CDABLEVARS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CDABLEVARS,$/;"	e	enum:__anon36
CDABLEVARS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CDABLEVARS__,$/;"	e	enum:__anon12	file:
CFill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f
CFill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f
CHARINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	1942;"	d	file:
CHARINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	2015;"	d	file:
CHARMATCH	zsh/.zplugin/bin/zmodules/Src/pattern.c	2641;"	d	file:
CHARMATCH_EXPR	zsh/.zplugin/bin/zmodules/Src/pattern.c	2652;"	d	file:
CHARNEXT	zsh/.zplugin/bin/zmodules/Src/pattern.c	1918;"	d	file:
CHARNEXT	zsh/.zplugin/bin/zmodules/Src/pattern.c	2013;"	d	file:
CHARREF	zsh/.zplugin/bin/zmodules/Src/pattern.c	1891;"	d	file:
CHARREF	zsh/.zplugin/bin/zmodules/Src/pattern.c	2011;"	d	file:
CHARREFINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	1946;"	d	file:
CHARREFINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	2017;"	d	file:
CHARSET_FAILED	zsh/.zplugin/bin/zmodules/Src/utils.c	6537;"	d	file:
CHARSUB	zsh/.zplugin/bin/zmodules/Src/pattern.c	1979;"	d	file:
CHARSUB	zsh/.zplugin/bin/zmodules/Src/pattern.c	2019;"	d	file:
CHASEDOTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CHASEDOTS,$/;"	e	enum:__anon36
CHASEDOTS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CHASEDOTS__,$/;"	e	enum:__anon12	file:
CHASELINKS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CHASELINKS,$/;"	e	enum:__anon36
CHASELINKS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CHASELINKS__,$/;"	e	enum:__anon12	file:
CHECKJOBS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CHECKJOBS,$/;"	e	enum:__anon36
CHECKJOBS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CHECKJOBS__,$/;"	e	enum:__anon12	file:
CHECKRUNNINGJOBS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CHECKRUNNINGJOBS,$/;"	e	enum:__anon36
CHECKRUNNINGJOBS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CHECKRUNNINGJOBS__,$/;"	e	enum:__anon12	file:
CLOBBER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CLOBBER,$/;"	e	enum:__anon36
CLOBBER__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CLOBBER__,$/;"	e	enum:__anon12	file:
CLOSE_CLEANLY	zsh/.zplugin/bin/zmodules/Src/builtin.c	4369;"	d	file:
CLOSE_MSTREAM	zsh/.zplugin/bin/zmodules/Src/builtin.c	4337;"	d	file:
CMDSTACKSZ	zsh/.zplugin/bin/zmodules/Src/zsh.h	2717;"	d
CMD_OR_MATH_CMD	zsh/.zplugin/bin/zmodules/Src/lex.c	/^    CMD_OR_MATH_CMD,$/;"	e	enum:__anon7	file:
CMD_OR_MATH_ERR	zsh/.zplugin/bin/zmodules/Src/lex.c	/^    CMD_OR_MATH_ERR$/;"	e	enum:__anon7	file:
CMD_OR_MATH_MATH	zsh/.zplugin/bin/zmodules/Src/lex.c	/^    CMD_OR_MATH_MATH,$/;"	e	enum:__anon7	file:
COL_SEQ_BG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2695;"	d
COL_SEQ_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2696;"	d
COL_SEQ_FG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2694;"	d
COMBININGCHARS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    COMBININGCHARS,$/;"	e	enum:__anon36
COMBININGCHARS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    COMBININGCHARS__,$/;"	e	enum:__anon12	file:
COMPLETEALIASES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    COMPLETEALIASES,$/;"	e	enum:__anon36
COMPLETEALIASES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    COMPLETEALIASES__,$/;"	e	enum:__anon12	file:
COMPLETEINWORD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    COMPLETEINWORD,$/;"	e	enum:__anon36
COMPLETEINWORD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    COMPLETEINWORD__,$/;"	e	enum:__anon12	file:
CONDDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	703;"	d
CONDF_ADDED	zsh/.zplugin/bin/zmodules/Src/zsh.h	699;"	d
CONDF_AUTOALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	701;"	d
CONDF_INFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	697;"	d
COND_AND	zsh/.zplugin/bin/zmodules/Src/zsh.h	663;"	d
COND_EF	zsh/.zplugin/bin/zmodules/Src/zsh.h	672;"	d
COND_EQ	zsh/.zplugin/bin/zmodules/Src/zsh.h	673;"	d
COND_ERROR	zsh/.zplugin/bin/zmodules/Src/parse.c	89;"	d	file:
COND_GE	zsh/.zplugin/bin/zmodules/Src/zsh.h	678;"	d
COND_GT	zsh/.zplugin/bin/zmodules/Src/zsh.h	676;"	d
COND_LE	zsh/.zplugin/bin/zmodules/Src/zsh.h	677;"	d
COND_LT	zsh/.zplugin/bin/zmodules/Src/zsh.h	675;"	d
COND_MOD	zsh/.zplugin/bin/zmodules/Src/zsh.h	680;"	d
COND_MODI	zsh/.zplugin/bin/zmodules/Src/zsh.h	681;"	d
COND_NE	zsh/.zplugin/bin/zmodules/Src/zsh.h	674;"	d
COND_NOT	zsh/.zplugin/bin/zmodules/Src/zsh.h	662;"	d
COND_NT	zsh/.zplugin/bin/zmodules/Src/zsh.h	670;"	d
COND_OR	zsh/.zplugin/bin/zmodules/Src/zsh.h	664;"	d
COND_OT	zsh/.zplugin/bin/zmodules/Src/zsh.h	671;"	d
COND_REGEX	zsh/.zplugin/bin/zmodules/Src/zsh.h	679;"	d
COND_SEP	zsh/.zplugin/bin/zmodules/Src/parse.c	2329;"	d	file:
COND_STRDEQ	zsh/.zplugin/bin/zmodules/Src/zsh.h	666;"	d
COND_STREQ	zsh/.zplugin/bin/zmodules/Src/zsh.h	665;"	d
COND_STRGTR	zsh/.zplugin/bin/zmodules/Src/zsh.h	669;"	d
COND_STRLT	zsh/.zplugin/bin/zmodules/Src/zsh.h	668;"	d
COND_STRNEQ	zsh/.zplugin/bin/zmodules/Src/zsh.h	667;"	d
CONFIG_INCS	zsh/.zplugin/bin/zmodules/Config/config.mk	/^CONFIG_INCS = \\$/;"	m
CONTINUEONERROR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CONTINUEONERROR,$/;"	e	enum:__anon36
CONTINUEONERROR__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CONTINUEONERROR__,$/;"	e	enum:__anon12	file:
COPROC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    COPROC,	\/* coproc    *\/$/;"	e	enum:lextok
CORRECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CORRECT,$/;"	e	enum:__anon36
CORRECTALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CORRECTALL,$/;"	e	enum:__anon36
CORRECTALL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CORRECTALL__,$/;"	e	enum:__anon12	file:
CORRECT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CORRECT__,$/;"	e	enum:__anon12	file:
CPRECEDENCES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CPRECEDENCES,$/;"	e	enum:__anon36
CPRECEDENCES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CPRECEDENCES__,$/;"	e	enum:__anon12	file:
CPrint	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CPrint	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, attr Attr, text string) {$/;"	f
CSHJUNKIEHISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CSHJUNKIEHISTORY,$/;"	e	enum:__anon36
CSHJUNKIEHISTORY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CSHJUNKIEHISTORY__,$/;"	e	enum:__anon12	file:
CSHJUNKIELOOPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CSHJUNKIELOOPS,$/;"	e	enum:__anon36
CSHJUNKIELOOPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CSHJUNKIELOOPS__,$/;"	e	enum:__anon12	file:
CSHJUNKIEQUOTES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CSHJUNKIEQUOTES,$/;"	e	enum:__anon36
CSHJUNKIEQUOTES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CSHJUNKIEQUOTES__,$/;"	e	enum:__anon12	file:
CSHNULLCMD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CSHNULLCMD,$/;"	e	enum:__anon36
CSHNULLCMD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CSHNULLCMD__,$/;"	e	enum:__anon12	file:
CSHNULLGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CSHNULLGLOB,$/;"	e	enum:__anon36
CSHNULLGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    CSHNULLGLOB__,$/;"	e	enum:__anon12	file:
CS_ALWAYS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2750;"	d
CS_ARRAY	zsh/.zplugin/bin/zmodules/Src/zsh.h	2739;"	d
CS_BQUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2742;"	d
CS_BRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2748;"	d
CS_BRACEPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2749;"	d
CS_CASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2735;"	d
CS_CMDAND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2731;"	d
CS_CMDOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2730;"	d
CS_CMDSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2743;"	d
CS_COND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2729;"	d
CS_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2753;"	d
CS_CURSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2738;"	d
CS_DQUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2741;"	d
CS_ELIF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2727;"	d
CS_ELIFTHEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2745;"	d
CS_ELSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2726;"	d
CS_ERRPIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2733;"	d
CS_FOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2719;"	d
CS_FOREACH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2734;"	d
CS_FUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2736;"	d
CS_HEREDOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	2746;"	d
CS_HEREDOCD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2747;"	d
CS_IF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2724;"	d
CS_IFTHEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2725;"	d
CS_MATH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2728;"	d
CS_MATHSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2744;"	d
CS_PIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2732;"	d
CS_QUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2740;"	d
CS_REPEAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2721;"	d
CS_SELECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2722;"	d
CS_SUBSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2737;"	d
CS_UNTIL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2723;"	d
CS_WHILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2720;"	d
CacheKey	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f
Case	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type Case int$/;"	t
CaseIgnore	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	CaseIgnore$/;"	c
CaseRespect	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	CaseRespect$/;"	c
CaseSmart	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c
Change	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Change$/;"	c
Chars	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^type Chars struct {$/;"	t
Chunk	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^type Chunk struct {$/;"	t
ChunkCache	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^type ChunkCache struct {$/;"	t
ChunkList	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^type ChunkList struct {$/;"	t
Clear	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()      {}$/;"	f
Clear	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f
Clear	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f
Clear	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f
Close	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()      {}$/;"	f
Close	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f
Close	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f
Close	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f
Close	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f
Cmdnam	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct cmdnam    *Cmdnam;$/;"	t	typeref:struct:cmdnam
ColBorder	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColBorder          ColorPair$/;"	v
ColCurrent	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColCurrent         ColorPair$/;"	v
ColCurrentCursor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColCurrentCursor   ColorPair$/;"	v
ColCurrentMatch	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColCurrentMatch    ColorPair$/;"	v
ColCurrentSelected	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColCurrentSelected ColorPair$/;"	v
ColCursor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColCursor          ColorPair$/;"	v
ColHeader	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColHeader          ColorPair$/;"	v
ColInfo	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColInfo            ColorPair$/;"	v
ColMatch	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColMatch           ColorPair$/;"	v
ColNormal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColNormal          ColorPair$/;"	v
ColPrompt	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColPrompt          ColorPair$/;"	v
ColSelected	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColSelected        ColorPair$/;"	v
ColSpinner	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ColSpinner         ColorPair$/;"	v
Color	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type Color int32$/;"	t
ColorPair	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	t
ColorTheme	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	t
Colors	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f
Comma	zsh/.zplugin/bin/zmodules/Src/zsh.h	194;"	d
CompareFn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*CompareFn) _((const void *, const void *));$/;"	t
CompareFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int      (*CompareFunc)    _((const char *, const char *));$/;"	t
CompctlReadFn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*CompctlReadFn) _((char *, char **, Options, char *));$/;"	t
CompletionTest	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^module CompletionTest$/;"	m	class:TestBase
Complist	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct complist  *Complist;$/;"	t	typeref:struct:complist
CondHandler	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*CondHandler) _((char **, int));$/;"	t
Conddef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct conddef   *Conddef;$/;"	t	typeref:struct:conddef
Constrain	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f
Constrain32	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f
CopyRunes	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f
CountItems	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f
CtrlA	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlA$/;"	c
CtrlAltA	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlAltA = AltZ + 1$/;"	c
CtrlAltM	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlAltM = CtrlAltA + 'm' - 'a'$/;"	c
CtrlB	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlB$/;"	c
CtrlC	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlC$/;"	c
CtrlD	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlD$/;"	c
CtrlE	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlE$/;"	c
CtrlF	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlF$/;"	c
CtrlG	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlG$/;"	c
CtrlH	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlH$/;"	c
CtrlJ	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlJ$/;"	c
CtrlK	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlK$/;"	c
CtrlL	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlL$/;"	c
CtrlM	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlM$/;"	c
CtrlN	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlN$/;"	c
CtrlO	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlO$/;"	c
CtrlP	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlP$/;"	c
CtrlQ	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlQ$/;"	c
CtrlR	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlR$/;"	c
CtrlS	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlS$/;"	c
CtrlSpace	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c
CtrlT	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlT$/;"	c
CtrlU	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlU$/;"	c
CtrlV	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlV$/;"	c
CtrlW	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlW$/;"	c
CtrlX	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlX$/;"	c
CtrlY	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlY$/;"	c
CtrlZ	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	CtrlZ$/;"	c
DAMPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DAMPER,$/;"	e	enum:lextok
DBAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DBAR,$/;"	e	enum:lextok
DEBUG	zsh/.zplugin/bin/zmodules/Src/mem.c	102;"	d	file:
DEBUG	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v
DEBUGBEFORECMD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DEBUGBEFORECMD,$/;"	e	enum:__anon36
DEBUGBEFORECMD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    DEBUGBEFORECMD__,$/;"	e	enum:__anon12	file:
DEFAULT_IFS	zsh/.zplugin/bin/zmodules/Src/zsh.h	162;"	d
DEFAULT_IFS_SH	zsh/.zplugin/bin/zmodules/Src/zsh.h	166;"	d
DEFAULT_TIMEFMT	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	449;"	d
DEFAULT_WORDCHARS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	448;"	d
DIGBUFSIZE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	530;"	d
DINANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DINANG,$/;"	e	enum:lextok
DINANGDASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DINANGDASH,$/;"	e	enum:lextok
DINBRACK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DINBRACK,	\/* [[        *\/	\/* 40 *\/$/;"	e	enum:lextok
DINPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DINPAR,$/;"	e	enum:lextok
DISABLED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1192;"	d
DOLOOP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOLOOP,	\/* do        *\/ \/* 45 *\/$/;"	e	enum:lextok
DONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DONE,	\/* done      *\/$/;"	e	enum:lextok
DOUTANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTANG,$/;"	e	enum:lextok
DOUTANGAMP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTANGAMP,$/;"	e	enum:lextok
DOUTANGAMPBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTANGAMPBANG,$/;"	e	enum:lextok
DOUTANGBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTANGBANG,$/;"	e	enum:lextok
DOUTBRACK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTBRACK,$/;"	e	enum:lextok
DOUTPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DOUTPAR,$/;"	e	enum:lextok
DPUTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2862;"	d
DPUTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2867;"	d
DPUTS1	zsh/.zplugin/bin/zmodules/Src/zsh.h	2863;"	d
DPUTS1	zsh/.zplugin/bin/zmodules/Src/zsh.h	2868;"	d
DPUTS2	zsh/.zplugin/bin/zmodules/Src/zsh.h	2864;"	d
DPUTS2	zsh/.zplugin/bin/zmodules/Src/zsh.h	2869;"	d
DPUTS3	zsh/.zplugin/bin/zmodules/Src/zsh.h	2865;"	d
DPUTS3	zsh/.zplugin/bin/zmodules/Src/zsh.h	2870;"	d
DSEMI	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DSEMI,$/;"	e	enum:lextok
DVORAK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    DVORAK,$/;"	e	enum:__anon36
DVORAK__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    DVORAK__,$/;"	e	enum:__anon12	file:
Dark256	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v
Dash	zsh/.zplugin/bin/zmodules/Src/zsh.h	195;"	d
Default16	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v
Del	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Del$/;"	c
Delimiter	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	t
Dim	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Dim              = Attr(1 << 1)$/;"	c
Dim	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c
Dirsav	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct dirsav    *Dirsav;$/;"	t	typeref:struct:dirsav
Dnull	zsh/.zplugin/bin/zmodules/Src/zsh.h	207;"	d
DoesAutoWrap	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) DoesAutoWrap() bool { return false }$/;"	f
DoesAutoWrap	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) DoesAutoWrap() bool {$/;"	f
DoesAutoWrap	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) DoesAutoWrap() bool {$/;"	f
DoubleClick	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	DoubleClick$/;"	c
Down	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Down$/;"	c
DurWithin	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func DurWithin($/;"	f
EC_DOUBLE_THRESHOLD	zsh/.zplugin/bin/zmodules/Src/parse.c	266;"	d	file:
EC_DUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	838;"	d
EC_DUPTOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	839;"	d
EC_INCREMENT	zsh/.zplugin/bin/zmodules/Src/parse.c	267;"	d	file:
EC_INIT_SIZE	zsh/.zplugin/bin/zmodules/Src/parse.c	265;"	d	file:
EC_NODUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	837;"	d
EF_HEAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	815;"	d
EF_MAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	816;"	d
EF_REAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	814;"	d
EF_RUN	zsh/.zplugin/bin/zmodules/Src/zsh.h	817;"	d
ELIF	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ELIF,	\/* elif      *\/$/;"	e	enum:lextok
ELSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ELSE,	\/* else      *\/$/;"	e	enum:lextok
EMACSMODE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EMACSMODE,$/;"	e	enum:__anon36
EMACSMODE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EMACSMODE__,$/;"	e	enum:__anon12	file:
EMULATE_CSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2287;"	d
EMULATE_FULLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	2300;"	d
EMULATE_KSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2288;"	d
EMULATE_SH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2289;"	d
EMULATE_UNUSED	zsh/.zplugin/bin/zmodules/Src/zsh.h	2304;"	d
EMULATE_ZSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2290;"	d
EMULATION	zsh/.zplugin/bin/zmodules/Src/zsh.h	2293;"	d
ENDINPUT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ENDINPUT,$/;"	e	enum:lextok
ENVARRAY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ENVARRAY,$/;"	e	enum:lextok
ENVSTRING	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ENVSTRING,		\/* 35 *\/$/;"	e	enum:lextok
EQUALS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EQUALS,$/;"	e	enum:__anon36
EQUALS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EQUALS__,$/;"	e	enum:__anon12	file:
ERRBUFSIZE	zsh/.zplugin/bin/zmodules/Src/utils.c	294;"	d	file:
ERREXIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ERREXIT,$/;"	e	enum:__anon36
ERREXIT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ERREXIT__,$/;"	e	enum:__anon12	file:
ERRFLAG_ERROR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ERRFLAG_ERROR = 1,$/;"	e	enum:errflag_bits
ERRFLAG_HARD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ERRFLAG_HARD = 4$/;"	e	enum:errflag_bits
ERRFLAG_INT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ERRFLAG_INT = 2,$/;"	e	enum:errflag_bits
ERRMSG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2861;"	d
ERRRETURN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ERRRETURN,$/;"	e	enum:__anon36
ERRRETURN__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    ERRRETURN__,$/;"	e	enum:__anon12	file:
ESAC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ESAC,	\/* esac      *\/ \/* 50 *\/$/;"	e	enum:lextok
ESC	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	ESC$/;"	c
ESRCH	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	770;"	d
ESRCH	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	771;"	d
ESUB_ASYNC	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_ASYNC = 0x01,$/;"	e	enum:__anon3	file:
ESUB_FAKE	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_FAKE = 0x08,$/;"	e	enum:__anon3	file:
ESUB_JOB_CONTROL	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_JOB_CONTROL = 0x40$/;"	e	enum:__anon3	file:
ESUB_KEEPTRAP	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_KEEPTRAP = 0x04,$/;"	e	enum:__anon3	file:
ESUB_NOMONITOR	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_NOMONITOR = 0x20,$/;"	e	enum:__anon3	file:
ESUB_PGRP	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_PGRP = 0x02,$/;"	e	enum:__anon3	file:
ESUB_REVERTPGRP	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    ESUB_REVERTPGRP = 0x10,$/;"	e	enum:__anon3	file:
EVALLINENO	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EVALLINENO,$/;"	e	enum:__anon36
EVALLINENO__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EVALLINENO__,$/;"	e	enum:__anon12	file:
EXECOPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EXECOPT,$/;"	e	enum:__anon36
EXECOPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EXECOPT__,$/;"	e	enum:__anon12	file:
EXITHOOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	3191;"	d
EXTENDEDGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EXTENDEDGLOB,$/;"	e	enum:__anon36
EXTENDEDGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EXTENDEDGLOB__,$/;"	e	enum:__anon12	file:
EXTENDEDHISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    EXTENDEDHISTORY,$/;"	e	enum:__anon36
EXTENDEDHISTORY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    EXTENDEDHISTORY__,$/;"	e	enum:__anon12	file:
Eccstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct eccstr *Eccstr;$/;"	t	typeref:struct:eccstr
EmptyMerger	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v
EmptyTheme	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f
Emulation_options	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct emulation_options *Emulation_options;$/;"	t	typeref:struct:emulation_options
Enclose	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f
Enclose	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f
End	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	End$/;"	c
Eprog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct eprog *Eprog;$/;"	t	typeref:struct:eprog
EqualMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Equals	zsh/.zplugin/bin/zmodules/Src/zsh.h	181;"	d
Erase	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f
Erase	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f
Estate	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct estate *Estate;$/;"	t	typeref:struct:estate
Event	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type Event struct {$/;"	t
EventBox	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	t
EventType	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^type EventType int$/;"	t
Events	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t
EvtClose	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c
EvtHeader	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtHeader$/;"	c
EvtReadFin	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtReadFin$/;"	c
EvtReadFin	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c
EvtReadNew	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c
EvtReadNew	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c
EvtReady	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtReady$/;"	c
EvtSearchFin	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtSearchFin$/;"	c
EvtSearchFin	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c
EvtSearchNew	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtSearchNew$/;"	c
EvtSearchNew	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c
EvtSearchProgress	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	EvtSearchProgress$/;"	c
EvtSearchProgress	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c
ExactMatchNaive	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
ExecCommand	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommand	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommandWith	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f
ExecCommandWith	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func ExecCommandWith(_shell string, command string, setpgid bool) *exec.Cmd {$/;"	f
Execcmd_params	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct execcmd_params *Execcmd_params;$/;"	t	typeref:struct:execcmd_params
F1	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F1$/;"	c
F10	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F10$/;"	c
F11	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F11$/;"	c
F12	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F12$/;"	c
F2	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F2$/;"	c
F3	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F3$/;"	c
F4	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F4$/;"	c
F5	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F5$/;"	c
F6	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F6$/;"	c
F7	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F7$/;"	c
F8	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F8$/;"	c
F9	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	F9$/;"	c
FDF_MAP	zsh/.zplugin/bin/zmodules/Src/parse.c	3025;"	d	file:
FDF_MAP	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	458;"	d	file:
FDF_OTHER	zsh/.zplugin/bin/zmodules/Src/parse.c	3026;"	d	file:
FDF_OTHER	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	459;"	d	file:
FDHF_KSHLOAD	zsh/.zplugin/bin/zmodules/Src/parse.c	3063;"	d	file:
FDHF_KSHLOAD	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	496;"	d	file:
FDHF_ZSHLOAD	zsh/.zplugin/bin/zmodules/Src/parse.c	3064;"	d	file:
FDHF_ZSHLOAD	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	497;"	d	file:
FDHead	zsh/.zplugin/bin/zmodules/Src/parse.c	/^typedef struct fdhead *FDHead;$/;"	t	typeref:struct:fdhead	file:
FDHead	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^typedef struct fdhead *FDHead;$/;"	t	typeref:struct:fdhead	file:
FDT_EXTERNAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	436;"	d
FDT_FLOCK	zsh/.zplugin/bin/zmodules/Src/zsh.h	451;"	d
FDT_FLOCK_EXEC	zsh/.zplugin/bin/zmodules/Src/zsh.h	456;"	d
FDT_INTERNAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	431;"	d
FDT_MODULE	zsh/.zplugin/bin/zmodules/Src/zsh.h	443;"	d
FDT_PROC_SUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	464;"	d
FDT_SAVED_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	475;"	d
FDT_TYPE_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	468;"	d
FDT_UNUSED	zsh/.zplugin/bin/zmodules/Src/zsh.h	426;"	d
FDT_XTRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	447;"	d
FD_EXT	zsh/.zplugin/bin/zmodules/Src/parse.c	3018;"	d	file:
FD_EXT	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	451;"	d	file:
FD_MAGIC	zsh/.zplugin/bin/zmodules/Src/parse.c	3022;"	d	file:
FD_MAGIC	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	455;"	d	file:
FD_MINMAP	zsh/.zplugin/bin/zmodules/Src/parse.c	3019;"	d	file:
FD_MINMAP	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	452;"	d	file:
FD_OMAGIC	zsh/.zplugin/bin/zmodules/Src/parse.c	3023;"	d	file:
FD_OMAGIC	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	456;"	d	file:
FD_PRELEN	zsh/.zplugin/bin/zmodules/Src/parse.c	3021;"	d	file:
FD_PRELEN	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	454;"	d	file:
FEAT_AUTOALL	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FEAT_AUTOALL = 0x0004,$/;"	e	enum:__anon8	file:
FEAT_CHECKAUTO	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FEAT_CHECKAUTO = 0x0010$/;"	e	enum:__anon8	file:
FEAT_IGNORE	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FEAT_IGNORE = 0x0001,$/;"	e	enum:__anon8	file:
FEAT_INFIX	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FEAT_INFIX = 0x0002,$/;"	e	enum:__anon8	file:
FEAT_REMOVE	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FEAT_REMOVE = 0x0008,$/;"	e	enum:__anon8	file:
FI	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FI,		\/* fi        *\/$/;"	e	enum:lextok
FINDMOD_ALIASP	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FINDMOD_ALIASP = 0x0001,$/;"	e	enum:__anon9	file:
FINDMOD_CREATE	zsh/.zplugin/bin/zmodules/Src/module.c	/^    FINDMOD_CREATE = 0x0002,$/;"	e	enum:__anon9	file:
FIRST_OPT	zsh/.zplugin/bin/zmodules/Src/options.c	285;"	d	file:
FIXED_FPATH_LEN	zsh/.zplugin/bin/zmodules/Src/init.c	891;"	d	file:
FLOWCONTROL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FLOWCONTROL,$/;"	e	enum:__anon36
FLOWCONTROL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    FLOWCONTROL__,$/;"	e	enum:__anon12	file:
FOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FOR,	\/* for       *\/$/;"	e	enum:lextok
FORCEFLOAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FORCEFLOAT,$/;"	e	enum:__anon36
FORCEFLOAT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    FORCEFLOAT__,$/;"	e	enum:__anon12	file:
FOREACH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FOREACH,	\/* foreach   *\/$/;"	e	enum:lextok
FPATH_NEEDS_INIT	zsh/.zplugin/bin/zmodules/Src/init.c	881;"	d	file:
FREE_ARG_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1077;"	d	file:
FREE_ARG_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1083;"	d	file:
FREE_DO_RET	zsh/.zplugin/bin/zmodules/Src/mem.c	1078;"	d	file:
FREE_RET_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1076;"	d	file:
FREE_RET_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1082;"	d	file:
FS_EVAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FS_EVAL$/;"	e	enum:__anon24
FS_FUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FS_FUNC,$/;"	e	enum:__anon24
FS_SOURCE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FS_SOURCE,$/;"	e	enum:__anon24
FUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FUNC,	\/* function  *\/$/;"	e	enum:lextok
FUNCTIONARGZERO	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FUNCTIONARGZERO,$/;"	e	enum:__anon36
FUNCTIONARGZERO__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    FUNCTIONARGZERO__,$/;"	e	enum:__anon12	file:
FZF	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
F_OK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	708;"	d
Feature_enables	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct feature_enables  *Feature_enables;$/;"	t	typeref:struct:feature_enables
Features	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct features  *Features;$/;"	t	typeref:struct:features
Fg	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f
Fill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f
Fill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f
FillContinue	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c
FillNextLine	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	FillNextLine$/;"	c
FillReturn	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type FillReturn int$/;"	t
FillSuspend	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	FillSuspend$/;"	c
FinishFill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f
FinishFill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f
FreeFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void (*FreeFunc) _((void *));$/;"	t
FreeNodeFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void     (*FreeNodeFunc)   _((HashNode));$/;"	t
FullscreenRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	t
FuncDump	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct funcdump *FuncDump;$/;"	t	typeref:struct:funcdump
FuncWrap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct funcwrap  *FuncWrap;$/;"	t	typeref:struct:funcwrap
Funcsave	zsh/.zplugin/bin/zmodules/Src/exec.c	/^typedef struct funcsave *Funcsave;$/;"	t	typeref:struct:funcsave	file:
Funcstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct funcstack *Funcstack;$/;"	t	typeref:struct:funcstack
FuzzyMatchV1	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
FuzzyMatchV2	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
GETHIST_DOWNWARD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2207;"	d
GETHIST_EXACT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2208;"	d
GETHIST_UPWARD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2206;"	d
GETKEYS_BINDKEY	zsh/.zplugin/bin/zmodules/Src/zsh.h	3130;"	d
GETKEYS_DOLLARS_QUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	3132;"	d
GETKEYS_ECHO	zsh/.zplugin/bin/zmodules/Src/zsh.h	3121;"	d
GETKEYS_MATH	zsh/.zplugin/bin/zmodules/Src/zsh.h	3134;"	d
GETKEYS_PRINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3128;"	d
GETKEYS_PRINTF_ARG	zsh/.zplugin/bin/zmodules/Src/zsh.h	3126;"	d
GETKEYS_PRINTF_FMT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3123;"	d
GETKEYS_SEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	3137;"	d
GETKEYS_SUFFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	3139;"	d
GETKEY_BACKSLASH_C	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_BACKSLASH_C = (1 << 3),$/;"	e	enum:__anon40
GETKEY_BACKSLASH_MINUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_BACKSLASH_MINUS = (1 << 5),$/;"	e	enum:__anon40
GETKEY_CTRL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_CTRL = (1 << 2),$/;"	e	enum:__anon40
GETKEY_DOLLAR_QUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_DOLLAR_QUOTE = (1 << 4),$/;"	e	enum:__anon40
GETKEY_EMACS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_EMACS = (1 << 1),$/;"	e	enum:__anon40
GETKEY_OCTAL_ESC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_OCTAL_ESC = (1 << 0),$/;"	e	enum:__anon40
GETKEY_PRINTF_PERCENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_PRINTF_PERCENT = (1 << 8)$/;"	e	enum:__anon40
GETKEY_SINGLE_CHAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_SINGLE_CHAR = (1 << 6),$/;"	e	enum:__anon40
GETKEY_UPDATE_OFFSET	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GETKEY_UPDATE_OFFSET = (1 << 7),$/;"	e	enum:__anon40
GETPGRP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	454;"	d
GETPGRP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	456;"	d
GET_ST_ATIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	848;"	d
GET_ST_ATIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	850;"	d
GET_ST_ATIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	852;"	d
GET_ST_CTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	862;"	d
GET_ST_CTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	864;"	d
GET_ST_CTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	866;"	d
GET_ST_MTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	855;"	d
GET_ST_MTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	857;"	d
GET_ST_MTIME_NSEC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	859;"	d
GF_BACKREF	zsh/.zplugin/bin/zmodules/Src/zsh.h	1722;"	d
GF_IGNCASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1721;"	d
GF_LCMATCHUC	zsh/.zplugin/bin/zmodules/Src/zsh.h	1720;"	d
GF_MATCHREF	zsh/.zplugin/bin/zmodules/Src/zsh.h	1723;"	d
GF_MULTIBYTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1724;"	d
GLOBALEXPORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBALEXPORT,$/;"	e	enum:__anon36
GLOBALEXPORT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBALEXPORT__,$/;"	e	enum:__anon12	file:
GLOBALRCS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBALRCS,$/;"	e	enum:__anon36
GLOBALRCS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBALRCS__,$/;"	e	enum:__anon12	file:
GLOBASSIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBASSIGN,$/;"	e	enum:__anon36
GLOBASSIGN__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBASSIGN__,$/;"	e	enum:__anon12	file:
GLOBCOMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBCOMPLETE,$/;"	e	enum:__anon36
GLOBCOMPLETE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBCOMPLETE__,$/;"	e	enum:__anon12	file:
GLOBDOTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBDOTS,$/;"	e	enum:__anon36
GLOBDOTS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBDOTS__,$/;"	e	enum:__anon12	file:
GLOBOPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBOPT,$/;"	e	enum:__anon36
GLOBOPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBOPT__,$/;"	e	enum:__anon12	file:
GLOBSTARSHORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBSTARSHORT,$/;"	e	enum:__anon36
GLOBSTARSHORT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBSTARSHORT__,$/;"	e	enum:__anon12	file:
GLOBSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GLOBSUBST,$/;"	e	enum:__anon36
GLOBSUBST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    GLOBSUBST__,$/;"	e	enum:__anon12	file:
GO	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	GOOS=darwin  make release$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	GOOS=freebsd make release$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	GOOS=linux   make release$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	GOOS=openbsd make release$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^	GOOS=windows make release$/;"	m
GOOS	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
GSU	zsh/.zplugin/bin/zmodules/Src/params.c	290;"	d	file:
GS_ATIME	zsh/.zplugin/bin/zmodules/Src/glob.c	84;"	d	file:
GS_CTIME	zsh/.zplugin/bin/zmodules/Src/glob.c	86;"	d	file:
GS_DEPTH	zsh/.zplugin/bin/zmodules/Src/glob.c	78;"	d	file:
GS_DESC	zsh/.zplugin/bin/zmodules/Src/glob.c	96;"	d	file:
GS_EXEC	zsh/.zplugin/bin/zmodules/Src/glob.c	79;"	d	file:
GS_LINKED	zsh/.zplugin/bin/zmodules/Src/glob.c	100;"	d	file:
GS_LINKS	zsh/.zplugin/bin/zmodules/Src/glob.c	87;"	d	file:
GS_MTIME	zsh/.zplugin/bin/zmodules/Src/glob.c	85;"	d	file:
GS_NAME	zsh/.zplugin/bin/zmodules/Src/glob.c	77;"	d	file:
GS_NONE	zsh/.zplugin/bin/zmodules/Src/glob.c	97;"	d	file:
GS_NORMAL	zsh/.zplugin/bin/zmodules/Src/glob.c	99;"	d	file:
GS_SHIFT	zsh/.zplugin/bin/zmodules/Src/glob.c	89;"	d	file:
GS_SHIFT_BASE	zsh/.zplugin/bin/zmodules/Src/glob.c	81;"	d	file:
GS_SIZE	zsh/.zplugin/bin/zmodules/Src/glob.c	83;"	d	file:
GS__ATIME	zsh/.zplugin/bin/zmodules/Src/glob.c	91;"	d	file:
GS__CTIME	zsh/.zplugin/bin/zmodules/Src/glob.c	93;"	d	file:
GS__LINKS	zsh/.zplugin/bin/zmodules/Src/glob.c	94;"	d	file:
GS__MTIME	zsh/.zplugin/bin/zmodules/Src/glob.c	92;"	d	file:
GS__SIZE	zsh/.zplugin/bin/zmodules/Src/glob.c	90;"	d	file:
Get	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f
Get	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f
Get	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f
GetChar	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event     { return Event{} }$/;"	f
GetChar	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f
GetChar	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f
GetNodeFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef HashNode (*GetNodeFunc)    _((HashTable, const char *));$/;"	t
Gmatch	zsh/.zplugin/bin/zmodules/Src/glob.c	/^typedef struct gmatch *Gmatch;$/;"	t	typeref:struct:gmatch	file:
Groupmap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef groupmap *Groupmap;$/;"	t
Groupset	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef groupset *Groupset;$/;"	t
GsuArray	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef const struct gsu_array *GsuArray;$/;"	t	typeref:struct:gsu_array
GsuFloat	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef const struct gsu_float *GsuFloat;$/;"	t	typeref:struct:gsu_float
GsuHash	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef const struct gsu_hash *GsuHash;$/;"	t	typeref:struct:gsu_hash
GsuInteger	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef const struct gsu_integer *GsuInteger;$/;"	t	typeref:struct:gsu_integer
GsuScalar	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef const struct gsu_scalar *GsuScalar;$/;"	t	typeref:struct:gsu_scalar
HASHCMDS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HASHCMDS,$/;"	e	enum:__anon36
HASHCMDS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HASHCMDS__,$/;"	e	enum:__anon12	file:
HASHDIRS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HASHDIRS,$/;"	e	enum:__anon36
HASHDIRS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HASHDIRS__,$/;"	e	enum:__anon12	file:
HASHED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1269;"	d
HASHEXECUTABLESONLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HASHEXECUTABLESONLY,$/;"	e	enum:__anon36
HASHEXECUTABLESONLY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HASHEXECUTABLESONLY__,$/;"	e	enum:__anon12	file:
HASHLISTALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HASHLISTALL,$/;"	e	enum:__anon36
HASHLISTALL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HASHLISTALL__,$/;"	e	enum:__anon12	file:
HASHTABLE_DEBUG_MEMBERS	zsh/.zplugin/bin/zmodules/Src/hashtable.c	33;"	d	file:
HASHTABLE_DEBUG_MEMBERS	zsh/.zplugin/bin/zmodules/Src/hashtable.c	39;"	d	file:
HASHTABLE_INTERNAL_MEMBERS	zsh/.zplugin/bin/zmodules/Src/hashtable.c	42;"	d	file:
HAS_TIO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	421;"	d
HAS_TIO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	426;"	d
HAVE_DLERROR	zsh/.zplugin/bin/zmodules/Src/module.c	1495;"	d	file:
HAVE_DLERROR	zsh/.zplugin/bin/zmodules/Src/module.c	1536;"	d	file:
HAVE_POLL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	400;"	d
HAVE_POLL_H	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	401;"	d
HAVE_SETEUID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	483;"	d
HAVE_SETEUID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	488;"	d
HAVE_SETUID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	473;"	d
HAVE_STRUCT_DIRENT_D_INO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	167;"	d
HAVE_STRUCT_DIRENT_D_INO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	170;"	d
HAVE_STRUCT_DIRENT_D_INO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	264;"	d
HAVE_STRUCT_DIRENT_D_STAT	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	168;"	d
HAVE_STRUCT_DIRENT_D_STAT	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	173;"	d
HAVE_SYS_UTSNAME_H	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	55;"	d
HAVE_TERMIOS_H	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	54;"	d
HDV_ALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_ALLOC = 0x80$/;"	e	enum:heap_debug_verbosity
HDV_CREATE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_CREATE = 0x04,$/;"	e	enum:heap_debug_verbosity
HDV_FREE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_FREE = 0x08,$/;"	e	enum:heap_debug_verbosity
HDV_NEW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_NEW = 0x10,$/;"	e	enum:heap_debug_verbosity
HDV_OLD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_OLD = 0x20,$/;"	e	enum:heap_debug_verbosity
HDV_POP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_POP = 0x02,$/;"	e	enum:heap_debug_verbosity
HDV_PUSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_PUSH = 0x01,$/;"	e	enum:heap_debug_verbosity
HDV_SWITCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HDV_SWITCH = 0x40,$/;"	e	enum:heap_debug_verbosity
HEADER_FILES	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HEAPFREE	zsh/.zplugin/bin/zmodules/Src/mem.c	122;"	d	file:
HEAPID_FMT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2775;"	d
HEAPID_PERMANENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2778;"	d
HEAPSIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	119;"	d	file:
HEAP_ARENA_SIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	121;"	d	file:
HEAP_ERROR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2808;"	d
HFILE_APPEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2221;"	d
HFILE_FAST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2225;"	d
HFILE_NO_REWRITE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2226;"	d
HFILE_SKIPDUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2223;"	d
HFILE_SKIPFOREIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2224;"	d
HFILE_SKIPOLD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2222;"	d
HFILE_USE_OPTIONS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2227;"	d
HISTALLOWCLOBBER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTALLOWCLOBBER,$/;"	e	enum:__anon36
HISTALLOWCLOBBER__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTALLOWCLOBBER__,$/;"	e	enum:__anon12	file:
HISTBEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTBEEP,$/;"	e	enum:__anon36
HISTBEEP__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTBEEP__,$/;"	e	enum:__anon12	file:
HISTEXPIREDUPSFIRST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTEXPIREDUPSFIRST,$/;"	e	enum:__anon36
HISTEXPIREDUPSFIRST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTEXPIREDUPSFIRST__,$/;"	e	enum:__anon12	file:
HISTFCNTLLOCK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTFCNTLLOCK,$/;"	e	enum:__anon36
HISTFCNTLLOCK__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTFCNTLLOCK__,$/;"	e	enum:__anon12	file:
HISTFINDNODUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTFINDNODUPS,$/;"	e	enum:__anon36
HISTFINDNODUPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTFINDNODUPS__,$/;"	e	enum:__anon12	file:
HISTFLAG_DONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2216;"	d
HISTFLAG_NOEXEC	zsh/.zplugin/bin/zmodules/Src/zsh.h	2217;"	d
HISTFLAG_RECALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2218;"	d
HISTFLAG_SETTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	2219;"	d
HISTIGNOREALLDUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTIGNOREALLDUPS,$/;"	e	enum:__anon36
HISTIGNOREALLDUPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTIGNOREALLDUPS__,$/;"	e	enum:__anon12	file:
HISTIGNOREDUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTIGNOREDUPS,$/;"	e	enum:__anon36
HISTIGNOREDUPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTIGNOREDUPS__,$/;"	e	enum:__anon12	file:
HISTIGNORESPACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTIGNORESPACE,$/;"	e	enum:__anon36
HISTIGNORESPACE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTIGNORESPACE__,$/;"	e	enum:__anon12	file:
HISTLEXWORDS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTLEXWORDS,$/;"	e	enum:__anon36
HISTLEXWORDS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTLEXWORDS__,$/;"	e	enum:__anon12	file:
HISTNOFUNCTIONS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTNOFUNCTIONS,$/;"	e	enum:__anon36
HISTNOFUNCTIONS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTNOFUNCTIONS__,$/;"	e	enum:__anon12	file:
HISTNOSTORE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTNOSTORE,$/;"	e	enum:__anon36
HISTNOSTORE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTNOSTORE__,$/;"	e	enum:__anon12	file:
HISTREDUCEBLANKS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTREDUCEBLANKS,$/;"	e	enum:__anon36
HISTREDUCEBLANKS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTREDUCEBLANKS__,$/;"	e	enum:__anon12	file:
HISTSAVEBYCOPY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTSAVEBYCOPY,$/;"	e	enum:__anon36
HISTSAVEBYCOPY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTSAVEBYCOPY__,$/;"	e	enum:__anon12	file:
HISTSAVENODUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTSAVENODUPS,$/;"	e	enum:__anon36
HISTSAVENODUPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTSAVENODUPS__,$/;"	e	enum:__anon12	file:
HISTSUBSTPATTERN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTSUBSTPATTERN,$/;"	e	enum:__anon36
HISTSUBSTPATTERN__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTSUBSTPATTERN__,$/;"	e	enum:__anon12	file:
HISTVERIFY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HISTVERIFY,$/;"	e	enum:__anon36
HISTVERIFY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HISTVERIFY__,$/;"	e	enum:__anon12	file:
HIST_DUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2201;"	d
HIST_FOREIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2202;"	d
HIST_MAKEUNIQUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2198;"	d
HIST_NOWRITE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2204;"	d
HIST_OLD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2199;"	d
HIST_READ	zsh/.zplugin/bin/zmodules/Src/zsh.h	2200;"	d
HIST_TMPSTORE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2203;"	d
HOOKDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	1551;"	d
HOOKF_ALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1549;"	d
HOOK_SUFFIX	zsh/.zplugin/bin/zmodules/Src/zsh.h	1336;"	d
HOOK_SUFFIX_LEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1338;"	d
HUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HUP,$/;"	e	enum:__anon36
HUP__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    HUP__,$/;"	e	enum:__anon12	file:
H_ISIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	118;"	d	file:
HandlerFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*HandlerFunc) _((char *, char **, Options, int));$/;"	t
HandlerFuncAssign	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*HandlerFuncAssign) _((char *, char **, LinkList, Options, int));$/;"	t
HasFullscreenRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f
HasFullscreenRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f
HashFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned (*HashFunc)       _((const char *));$/;"	t
HashNode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct hashnode  *HashNode;$/;"	t	typeref:struct:hashnode
HashTable	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct hashtable *HashTable;$/;"	t	typeref:struct:hashtable
Hat	zsh/.zplugin/bin/zmodules/Src/zsh.h	174;"	d
Heap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct heap      *Heap;$/;"	t	typeref:struct:heap
Heapid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned int Heapid;$/;"	t
Heapstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct heapstack *Heapstack;$/;"	t	typeref:struct:heapstack
Height	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f
Height	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f
HexToColor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f
Histent	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct histent   *Histent;$/;"	t	typeref:struct:histent
History	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^type History struct {$/;"	t
Home	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Home$/;"	c
Hookdef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct hookdef   *Hookdef;$/;"	t	typeref:struct:hookdef
Hookfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*Hookfn) _((Hookdef, void *));$/;"	t
IALNUM	zsh/.zplugin/bin/zmodules/Src/ztype.h	31;"	d
IALPHA	zsh/.zplugin/bin/zmodules/Src/ztype.h	36;"	d
IBLANK	zsh/.zplugin/bin/zmodules/Src/ztype.h	32;"	d
ICNTRL	zsh/.zplugin/bin/zmodules/Src/ztype.h	39;"	d
IDIGIT	zsh/.zplugin/bin/zmodules/Src/ztype.h	30;"	d
IF	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    IF,		\/* if        *\/ \/* 55 *\/$/;"	e	enum:lextok
IGNOREBRACES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    IGNOREBRACES,$/;"	e	enum:__anon36
IGNOREBRACES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    IGNOREBRACES__,$/;"	e	enum:__anon12	file:
IGNORECLOSEBRACES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    IGNORECLOSEBRACES,$/;"	e	enum:__anon36
IGNORECLOSEBRACES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    IGNORECLOSEBRACES__,$/;"	e	enum:__anon12	file:
IGNOREEOF	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    IGNOREEOF,$/;"	e	enum:__anon36
IGNOREEOF__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    IGNOREEOF__,$/;"	e	enum:__anon12	file:
IIDENT	zsh/.zplugin/bin/zmodules/Src/ztype.h	37;"	d
IMETA	zsh/.zplugin/bin/zmodules/Src/ztype.h	42;"	d
INANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INANG,$/;"	e	enum:lextok
INANGAMP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INANGAMP,$/;"	e	enum:lextok
INBLANK	zsh/.zplugin/bin/zmodules/Src/ztype.h	33;"	d
INBRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INBRACE,    \/* {         *\/$/;"	e	enum:lextok
INCAPPENDHISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INCAPPENDHISTORY,$/;"	e	enum:__anon36
INCAPPENDHISTORYTIME	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INCAPPENDHISTORYTIME,$/;"	e	enum:__anon36
INCAPPENDHISTORYTIME__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    INCAPPENDHISTORYTIME__,$/;"	e	enum:__anon12	file:
INCAPPENDHISTORY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    INCAPPENDHISTORY__,$/;"	e	enum:__anon12	file:
INOUTANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INOUTANG,		\/* 15 *\/$/;"	e	enum:lextok
INOUTPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INOUTPAR,$/;"	e	enum:lextok
INPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INPAR,$/;"	e	enum:lextok
INP_ALCONT	zsh/.zplugin/bin/zmodules/Src/zsh.h	482;"	d
INP_ALIAS	zsh/.zplugin/bin/zmodules/Src/zsh.h	479;"	d
INP_APPEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	485;"	d
INP_CONT	zsh/.zplugin/bin/zmodules/Src/zsh.h	481;"	d
INP_FREE	zsh/.zplugin/bin/zmodules/Src/zsh.h	478;"	d
INP_HIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	480;"	d
INP_HISTCONT	zsh/.zplugin/bin/zmodules/Src/zsh.h	483;"	d
INP_LINENO	zsh/.zplugin/bin/zmodules/Src/zsh.h	484;"	d
INP_RAW_KEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	486;"	d
INSTACK_EXPAND	zsh/.zplugin/bin/zmodules/Src/input.c	128;"	d	file:
INSTACK_INITIAL	zsh/.zplugin/bin/zmodules/Src/input.c	127;"	d	file:
INTERACTIVE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INTERACTIVE,$/;"	e	enum:__anon36
INTERACTIVECOMMENTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    INTERACTIVECOMMENTS,$/;"	e	enum:__anon36
INTERACTIVECOMMENTS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    INTERACTIVECOMMENTS__,$/;"	e	enum:__anon12	file:
INTERACTIVE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    INTERACTIVE__,$/;"	e	enum:__anon12	file:
INTPARAMDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2052;"	d
INULL	zsh/.zplugin/bin/zmodules/Src/ztype.h	44;"	d
IN_CMD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2270;"	d
IN_COND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2274;"	d
IN_ENV	zsh/.zplugin/bin/zmodules/Src/zsh.h	2276;"	d
IN_EVAL_TRAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2906;"	d
IN_MATH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2272;"	d
IN_NOTHING	zsh/.zplugin/bin/zmodules/Src/zsh.h	2268;"	d
IN_PAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2278;"	d
IPATTERN	zsh/.zplugin/bin/zmodules/Src/ztype.h	45;"	d
IPDEF1	zsh/.zplugin/bin/zmodules/Src/params.c	292;"	d	file:
IPDEF10	zsh/.zplugin/bin/zmodules/Src/params.c	404;"	d	file:
IPDEF2	zsh/.zplugin/bin/zmodules/Src/params.c	305;"	d	file:
IPDEF4	zsh/.zplugin/bin/zmodules/Src/params.c	340;"	d	file:
IPDEF5	zsh/.zplugin/bin/zmodules/Src/params.c	349;"	d	file:
IPDEF5U	zsh/.zplugin/bin/zmodules/Src/params.c	350;"	d	file:
IPDEF6	zsh/.zplugin/bin/zmodules/Src/params.c	358;"	d	file:
IPDEF7	zsh/.zplugin/bin/zmodules/Src/params.c	363;"	d	file:
IPDEF7R	zsh/.zplugin/bin/zmodules/Src/params.c	364;"	d	file:
IPDEF7U	zsh/.zplugin/bin/zmodules/Src/params.c	365;"	d	file:
IPDEF8	zsh/.zplugin/bin/zmodules/Src/params.c	391;"	d	file:
IPDEF9	zsh/.zplugin/bin/zmodules/Src/params.c	381;"	d	file:
IPDEF9F	zsh/.zplugin/bin/zmodules/Src/params.c	380;"	d	file:
ISDIGIT	zsh/.zplugin/bin/zmodules/Src/pattern.c	2633;"	d	file:
ISDIGIT	zsh/.zplugin/bin/zmodules/Src/pattern.c	2639;"	d	file:
ISEP	zsh/.zplugin/bin/zmodules/Src/ztype.h	35;"	d
ISLOWER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2630;"	d	file:
ISLOWER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2636;"	d	file:
ISPECIAL	zsh/.zplugin/bin/zmodules/Src/ztype.h	41;"	d
ISUPPER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2629;"	d	file:
ISUPPER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2635;"	d	file:
IS_APPEND_REDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	414;"	d
IS_BASECHAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	3282;"	d
IS_CLOBBER_REDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	415;"	d
IS_COMBINING	zsh/.zplugin/bin/zmodules/Src/zsh.h	3273;"	d
IS_DASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	255;"	d
IS_DIRSEP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	786;"	d
IS_DIRSEP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	788;"	d
IS_ERROR_REDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	416;"	d
IS_MSTREAM	zsh/.zplugin/bin/zmodules/Src/builtin.c	4364;"	d	file:
IS_READFD	zsh/.zplugin/bin/zmodules/Src/zsh.h	417;"	d
IS_REDIROP	zsh/.zplugin/bin/zmodules/Src/zsh.h	418;"	d
IS_UNSET_VALUE	zsh/.zplugin/bin/zmodules/Src/params.c	472;"	d	file:
IS_WRITE_FILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	413;"	d
ITOK	zsh/.zplugin/bin/zmodules/Src/ztype.h	34;"	d
IUSER	zsh/.zplugin/bin/zmodules/Src/ztype.h	38;"	d
IWORD	zsh/.zplugin/bin/zmodules/Src/ztype.h	40;"	d
IWSEP	zsh/.zplugin/bin/zmodules/Src/ztype.h	43;"	d
Imatchdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct imatchdata *Imatchdata;$/;"	t	typeref:struct:imatchdata
Inang	zsh/.zplugin/bin/zmodules/Src/zsh.h	188;"	d
Inbrace	zsh/.zplugin/bin/zmodules/Src/zsh.h	183;"	d
Inbrack	zsh/.zplugin/bin/zmodules/Src/zsh.h	185;"	d
Index	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f
Index	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f
Init	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()       {}$/;"	f
Init	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f
Init	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f
Inpar	zsh/.zplugin/bin/zmodules/Src/zsh.h	176;"	d
Inparmath	zsh/.zplugin/bin/zmodules/Src/zsh.h	177;"	d
Input	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) Input() []rune {$/;"	f
Invalid	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Invalid$/;"	c
IsBytes	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f
IsEmpty	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f
IsFull	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f
IsTty	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func IsTty() bool {$/;"	f
IsWindows	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f
IsWindows	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f
Italic	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Italic           = Attr(1 << 2)$/;"	c
Italic	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrNone) \/\/ Not supported$/;"	c
Item	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^type Item struct {$/;"	t
ItemBuilder	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t
JOBTEXTSIZE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1060;"	d
JOB_CONTROL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	766;"	d
Job	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct job       *Job;$/;"	t	typeref:struct:job
Jobfile	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct jobfile   *Jobfile;$/;"	t	typeref:struct:jobfile
KSHARRAYS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHARRAYS,$/;"	e	enum:__anon36
KSHARRAYS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHARRAYS__,$/;"	e	enum:__anon12	file:
KSHAUTOLOAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHAUTOLOAD,$/;"	e	enum:__anon36
KSHAUTOLOAD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHAUTOLOAD__,$/;"	e	enum:__anon12	file:
KSHGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHGLOB,$/;"	e	enum:__anon36
KSHGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHGLOB__,$/;"	e	enum:__anon12	file:
KSHOPTIONPRINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHOPTIONPRINT,$/;"	e	enum:__anon36
KSHOPTIONPRINT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHOPTIONPRINT__,$/;"	e	enum:__anon12	file:
KSHTYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHTYPESET,$/;"	e	enum:__anon36
KSHTYPESET__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHTYPESET__,$/;"	e	enum:__anon12	file:
KSHZEROSUBSCRIPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    KSHZEROSUBSCRIPT,$/;"	e	enum:__anon36
KSHZEROSUBSCRIPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    KSHZEROSUBSCRIPT__,$/;"	e	enum:__anon12	file:
KillCommand	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f
KillCommand	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f
LAST_NORMAL_TOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	201;"	d
LAST_OPT	zsh/.zplugin/bin/zmodules/Src/options.c	286;"	d	file:
LAST_OPTION	zsh/.zplugin/bin/zmodules/Src/init.c	392;"	d	file:
LCIPDEF	zsh/.zplugin/bin/zmodules/Src/params.c	320;"	d	file:
LEXERR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LEXERR,$/;"	e	enum:lextok
LEXFLAGS_ACTIVE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2239;"	d
LEXFLAGS_COMMENTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2257;"	d
LEXFLAGS_COMMENTS_KEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2249;"	d
LEXFLAGS_COMMENTS_STRIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2253;"	d
LEXFLAGS_NEWLINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2261;"	d
LEXFLAGS_ZLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2245;"	d
LEX_HEAP_SIZE	zsh/.zplugin/bin/zmodules/Src/lex.c	33;"	d	file:
LISTAMBIGUOUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LISTAMBIGUOUS,$/;"	e	enum:__anon36
LISTAMBIGUOUS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LISTAMBIGUOUS__,$/;"	e	enum:__anon12	file:
LISTBEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LISTBEEP,$/;"	e	enum:__anon36
LISTBEEP__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LISTBEEP__,$/;"	e	enum:__anon12	file:
LISTPACKED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LISTPACKED,$/;"	e	enum:__anon36
LISTPACKED__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LISTPACKED__,$/;"	e	enum:__anon12	file:
LISTROWSFIRST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LISTROWSFIRST,$/;"	e	enum:__anon36
LISTROWSFIRST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LISTROWSFIRST__,$/;"	e	enum:__anon12	file:
LISTTYPES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LISTTYPES,$/;"	e	enum:__anon36
LISTTYPES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LISTTYPES__,$/;"	e	enum:__anon12	file:
LOCALLOOPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOCALLOOPS,$/;"	e	enum:__anon36
LOCALLOOPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LOCALLOOPS__,$/;"	e	enum:__anon12	file:
LOCALOPTIONS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOCALOPTIONS,$/;"	e	enum:__anon36
LOCALOPTIONS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LOCALOPTIONS__,$/;"	e	enum:__anon12	file:
LOCALPATTERNS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOCALPATTERNS,$/;"	e	enum:__anon36
LOCALPATTERNS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LOCALPATTERNS__,$/;"	e	enum:__anon12	file:
LOCALTRAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOCALTRAPS,$/;"	e	enum:__anon36
LOCALTRAPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LOCALTRAPS__,$/;"	e	enum:__anon12	file:
LOGINSHELL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOGINSHELL,$/;"	e	enum:__anon36
LOGINSHELL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LOGINSHELL__,$/;"	e	enum:__anon12	file:
LONGLISTJOBS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LONGLISTJOBS,$/;"	e	enum:__anon36
LONGLISTJOBS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    LONGLISTJOBS__,$/;"	e	enum:__anon12	file:
LOOP_EMPTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOOP_EMPTY,$/;"	e	enum:loop_return
LOOP_ERROR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOOP_ERROR$/;"	e	enum:loop_return
LOOP_OK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LOOP_OK,$/;"	e	enum:loop_return
LX1_AMPER	zsh/.zplugin/bin/zmodules/Src/lex.c	375;"	d	file:
LX1_BAR	zsh/.zplugin/bin/zmodules/Src/lex.c	376;"	d	file:
LX1_BKSLASH	zsh/.zplugin/bin/zmodules/Src/lex.c	371;"	d	file:
LX1_COMMENT	zsh/.zplugin/bin/zmodules/Src/lex.c	372;"	d	file:
LX1_INANG	zsh/.zplugin/bin/zmodules/Src/lex.c	379;"	d	file:
LX1_INPAR	zsh/.zplugin/bin/zmodules/Src/lex.c	377;"	d	file:
LX1_NEWLIN	zsh/.zplugin/bin/zmodules/Src/lex.c	373;"	d	file:
LX1_OTHER	zsh/.zplugin/bin/zmodules/Src/lex.c	381;"	d	file:
LX1_OUTANG	zsh/.zplugin/bin/zmodules/Src/lex.c	380;"	d	file:
LX1_OUTPAR	zsh/.zplugin/bin/zmodules/Src/lex.c	378;"	d	file:
LX1_SEMI	zsh/.zplugin/bin/zmodules/Src/lex.c	374;"	d	file:
LX2_BANG	zsh/.zplugin/bin/zmodules/Src/lex.c	402;"	d	file:
LX2_BAR	zsh/.zplugin/bin/zmodules/Src/lex.c	385;"	d	file:
LX2_BKSLASH	zsh/.zplugin/bin/zmodules/Src/lex.c	396;"	d	file:
LX2_BQUOTE	zsh/.zplugin/bin/zmodules/Src/lex.c	399;"	d	file:
LX2_BREAK	zsh/.zplugin/bin/zmodules/Src/lex.c	383;"	d	file:
LX2_COMMA	zsh/.zplugin/bin/zmodules/Src/lex.c	400;"	d	file:
LX2_DASH	zsh/.zplugin/bin/zmodules/Src/lex.c	401;"	d	file:
LX2_DQUOTE	zsh/.zplugin/bin/zmodules/Src/lex.c	398;"	d	file:
LX2_EQUALS	zsh/.zplugin/bin/zmodules/Src/lex.c	395;"	d	file:
LX2_INANG	zsh/.zplugin/bin/zmodules/Src/lex.c	394;"	d	file:
LX2_INBRACE	zsh/.zplugin/bin/zmodules/Src/lex.c	391;"	d	file:
LX2_INBRACK	zsh/.zplugin/bin/zmodules/Src/lex.c	387;"	d	file:
LX2_INPAR	zsh/.zplugin/bin/zmodules/Src/lex.c	390;"	d	file:
LX2_META	zsh/.zplugin/bin/zmodules/Src/lex.c	404;"	d	file:
LX2_OTHER	zsh/.zplugin/bin/zmodules/Src/lex.c	403;"	d	file:
LX2_OUTANG	zsh/.zplugin/bin/zmodules/Src/lex.c	393;"	d	file:
LX2_OUTBRACE	zsh/.zplugin/bin/zmodules/Src/lex.c	392;"	d	file:
LX2_OUTBRACK	zsh/.zplugin/bin/zmodules/Src/lex.c	388;"	d	file:
LX2_OUTPAR	zsh/.zplugin/bin/zmodules/Src/lex.c	384;"	d	file:
LX2_QUOTE	zsh/.zplugin/bin/zmodules/Src/lex.c	397;"	d	file:
LX2_STRING	zsh/.zplugin/bin/zmodules/Src/lex.c	386;"	d	file:
LX2_TILDE	zsh/.zplugin/bin/zmodules/Src/lex.c	389;"	d	file:
Left	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f
Left	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f
Left	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Left$/;"	c
LeftClick	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	LeftClick$/;"	c
Len	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f
Len	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f
Len	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f
Len	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f
Length	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f
Length	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f
Less	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f
Less	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f
Less	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f
Less	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f
Light256	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v
LightRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	t
LightWindow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^type LightWindow struct {$/;"	t
LinkList	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef union  linkroot  *LinkList;$/;"	t	typeref:union:linkroot
LinkNode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct linknode  *LinkNode;$/;"	t	typeref:struct:linknode
Linkedmod	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct linkedmod *Linkedmod;$/;"	t	typeref:struct:linkedmod
Lookup	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f
Loop	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f
Loop	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f
MAGICEQUALSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MAGICEQUALSUBST,$/;"	e	enum:__anon36
MAGICEQUALSUBST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MAGICEQUALSUBST__,$/;"	e	enum:__anon12	file:
MAILWARNING	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MAILWARNING,$/;"	e	enum:__anon36
MAILWARNING__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MAILWARNING__,$/;"	e	enum:__anon12	file:
MAKEFILE	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MALLOC_ARG_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1080;"	d	file:
MALLOC_ARG_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1085;"	d	file:
MALLOC_RET_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1079;"	d	file:
MALLOC_RET_T	zsh/.zplugin/bin/zmodules/Src/mem.c	1084;"	d	file:
MAP_ANONYMOUS	zsh/.zplugin/bin/zmodules/Src/mem.c	89;"	d	file:
MARKDIRS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MARKDIRS,$/;"	e	enum:__anon36
MARKDIRS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MARKDIRS__,$/;"	e	enum:__anon12	file:
MAXCMDLEN	zsh/.zplugin/bin/zmodules/Src/exec.c	571;"	d	file:
MAXDEPTH	zsh/.zplugin/bin/zmodules/Src/hashtable.c	524;"	d	file:
MAXJOBS_ALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	1063;"	d
MAX_ARRLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	761;"	d
MAX_MAXJOBS	zsh/.zplugin/bin/zmodules/Src/jobs.c	1969;"	d	file:
MAX_OPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1353;"	d
MAX_PIPESTATS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1122;"	d
MAX_QUEUE_SIZE	zsh/.zplugin/bin/zmodules/Src/signals.h	83;"	d
MAX_SORTS	zsh/.zplugin/bin/zmodules/Src/glob.c	164;"	d	file:
MB_CHARINIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3216;"	d
MB_CHARINIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3295;"	d
MB_CHARLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3218;"	d
MB_CHARLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3297;"	d
MB_CHARLENCONV	zsh/.zplugin/bin/zmodules/Src/zsh.h	3217;"	d
MB_CHARLENCONV	zsh/.zplugin/bin/zmodules/Src/zsh.h	3296;"	d
MB_CUR_MAX	zsh/.zplugin/bin/zmodules/Src/zsh.h	3254;"	d
MB_INCOMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	3243;"	d
MB_INVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	3244;"	d
MB_METACHARINIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3205;"	d
MB_METACHARINIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3286;"	d
MB_METACHARLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3208;"	d
MB_METACHARLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3289;"	d
MB_METACHARLENCONV	zsh/.zplugin/bin/zmodules/Src/zsh.h	3207;"	d
MB_METACHARLENCONV	zsh/.zplugin/bin/zmodules/Src/zsh.h	3288;"	d
MB_METASTRLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3209;"	d
MB_METASTRLEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	3290;"	d
MB_METASTRLEN2	zsh/.zplugin/bin/zmodules/Src/zsh.h	3211;"	d
MB_METASTRLEN2	zsh/.zplugin/bin/zmodules/Src/zsh.h	3292;"	d
MB_METASTRLEN2END	zsh/.zplugin/bin/zmodules/Src/zsh.h	3212;"	d
MB_METASTRLEN2END	zsh/.zplugin/bin/zmodules/Src/zsh.h	3293;"	d
MB_METASTRWIDTH	zsh/.zplugin/bin/zmodules/Src/zsh.h	3210;"	d
MB_METASTRWIDTH	zsh/.zplugin/bin/zmodules/Src/zsh.h	3291;"	d
MENUCOMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MENUCOMPLETE,$/;"	e	enum:__anon36
MENUCOMPLETE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MENUCOMPLETE__,$/;"	e	enum:__anon12	file:
METACHARINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	314;"	d	file:
METACHARINC	zsh/.zplugin/bin/zmodules/Src/pattern.c	385;"	d	file:
METAINC	zsh/.zplugin/bin/zmodules/Src/glob.c	3188;"	d	file:
META_ALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	493;"	d
META_DUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	492;"	d
META_HEAPDUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	495;"	d
META_HREALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	496;"	d
META_NOALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	494;"	d
META_REALLOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	489;"	d
META_STATIC	zsh/.zplugin/bin/zmodules/Src/zsh.h	491;"	d
META_USEHEAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	490;"	d
MFF_ADDED	zsh/.zplugin/bin/zmodules/Src/zsh.h	126;"	d
MFF_AUTOALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	130;"	d
MFF_STR	zsh/.zplugin/bin/zmodules/Src/zsh.h	124;"	d
MFF_USERFUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	128;"	d
MMAP_FLAGS	zsh/.zplugin/bin/zmodules/Src/mem.c	95;"	d	file:
MN_FLOAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	104;"	d
MN_INTEGER	zsh/.zplugin/bin/zmodules/Src/zsh.h	103;"	d
MN_UNSET	zsh/.zplugin/bin/zmodules/Src/zsh.h	105;"	d
MOD_ALIAS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1489;"	d
MOD_BUSY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1473;"	d
MOD_INIT_B	zsh/.zplugin/bin/zmodules/Src/zsh.h	1487;"	d
MOD_INIT_S	zsh/.zplugin/bin/zmodules/Src/zsh.h	1485;"	d
MOD_LINKED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1483;"	d
MOD_SETUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1481;"	d
MOD_UNLOAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	1479;"	d
MONITOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MONITOR,$/;"	e	enum:__anon36
MONITOR__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MONITOR__,$/;"	e	enum:__anon12	file:
MULTIBYTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTIBYTE,$/;"	e	enum:__anon36
MULTIBYTE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MULTIBYTE__,$/;"	e	enum:__anon12	file:
MULTIFUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTIFUNCDEF,$/;"	e	enum:__anon36
MULTIFUNCDEF__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MULTIFUNCDEF__,$/;"	e	enum:__anon12	file:
MULTIOS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTIOS,$/;"	e	enum:__anon36
MULTIOS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    MULTIOS__,$/;"	e	enum:__anon12	file:
MULTIOUNIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	727;"	d
MULTSUB_PARAM_NAME	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTSUB_PARAM_NAME  = 4$/;"	e	enum:__anon32
MULTSUB_WS_AT_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTSUB_WS_AT_END   = 2,$/;"	e	enum:__anon32
MULTSUB_WS_AT_START	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MULTSUB_WS_AT_START = 1,$/;"	e	enum:__anon32
M_ALIGN	zsh/.zplugin/bin/zmodules/Src/mem.c	1118;"	d	file:
M_ALLOC	zsh/.zplugin/bin/zmodules/Src/mem.c	1142;"	d	file:
M_BSLEN	zsh/.zplugin/bin/zmodules/Src/mem.c	1180;"	d	file:
M_BSLEN	zsh/.zplugin/bin/zmodules/Src/mem.c	1185;"	d	file:
M_FREE	zsh/.zplugin/bin/zmodules/Src/mem.c	1140;"	d	file:
M_HSIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	1126;"	d	file:
M_ISIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	1128;"	d	file:
M_ISIZE	zsh/.zplugin/bin/zmodules/Src/mem.c	1130;"	d	file:
M_KEEP	zsh/.zplugin/bin/zmodules/Src/mem.c	1141;"	d	file:
M_MIN	zsh/.zplugin/bin/zmodules/Src/mem.c	1132;"	d	file:
M_NSMALL	zsh/.zplugin/bin/zmodules/Src/mem.c	1188;"	d	file:
M_SBLEN	zsh/.zplugin/bin/zmodules/Src/mem.c	1178;"	d	file:
M_SBLEN	zsh/.zplugin/bin/zmodules/Src/mem.c	1183;"	d	file:
M_SIDX	zsh/.zplugin/bin/zmodules/Src/mem.c	1173;"	d	file:
M_SLEN	zsh/.zplugin/bin/zmodules/Src/mem.c	1175;"	d	file:
M_SNUM	zsh/.zplugin/bin/zmodules/Src/mem.c	1174;"	d	file:
MakeBorderStyle	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f
MakeSlab	zsh/.zplugin/plugins/junegunn---fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f
Marker	zsh/.zplugin/bin/zmodules/Src/zsh.h	237;"	d
Match	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f
MatchItem	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]int) {$/;"	f
MatchRequest	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^type MatchRequest struct {$/;"	t
Matcher	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^type Matcher struct {$/;"	t
MathFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct mathfunc *MathFunc;$/;"	t	typeref:struct:mathfunc
Max	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f
Max16	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f
Max32	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f
MaxX	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int          { return 0 }$/;"	f
MaxX	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f
MaxX	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f
MaxY	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int          { return 0 }$/;"	f
MaxY	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f
MaxY	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f
Merge	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merge	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f
Merger	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^type Merger struct {$/;"	t
Meta	zsh/.zplugin/bin/zmodules/Src/zsh.h	157;"	d
Min	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f
Min32	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f
Module	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct module    *Module;$/;"	t	typeref:struct:module
Module_enables_func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*Module_enables_func) _((Module, int **));$/;"	t
Module_features_func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*Module_features_func) _((Module, char ***));$/;"	t
Module_generic_func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*Module_generic_func) _((void));$/;"	t
Module_void_func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*Module_void_func) _((Module));$/;"	t
Mouse	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Mouse$/;"	c
MouseEvent	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	t
Move	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f
Move	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f
MoveAndClear	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f
MoveAndClear	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f
ND_NOABBREV	zsh/.zplugin/bin/zmodules/Src/zsh.h	2105;"	d
ND_USERNAME	zsh/.zplugin/bin/zmodules/Src/zsh.h	2104;"	d
NEWHEAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2848;"	d
NEWLIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NEWLIN,$/;"	e	enum:lextok
NICECHAR_MAX	zsh/.zplugin/bin/zmodules/Src/utils.c	624;"	d	file:
NICEFLAG_HEAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NICEFLAG_HEAP = 1,		\/* Heap allocation where needed *\/$/;"	e	enum:__anon43
NICEFLAG_NODUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NICEFLAG_NODUP = 4,         \/* Leave allocated *\/$/;"	e	enum:__anon43
NICEFLAG_QUOTE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NICEFLAG_QUOTE = 2,		\/* Result will appear in $'...' *\/$/;"	e	enum:__anon43
NOCORRECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOCORRECT,	\/* nocorrect *\/$/;"	e	enum:lextok
NOERREXIT_EXIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOERREXIT_EXIT = 1,$/;"	e	enum:noerrexit_bits
NOERREXIT_RETURN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOERREXIT_RETURN = 2,$/;"	e	enum:noerrexit_bits
NOERREXIT_SIGNAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOERREXIT_SIGNAL = 8$/;"	e	enum:noerrexit_bits
NOERREXIT_UNTIL_EXEC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOERREXIT_UNTIL_EXEC = 4,$/;"	e	enum:noerrexit_bits
NOMATCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOMATCH,$/;"	e	enum:__anon36
NOMATCH__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    NOMATCH__,$/;"	e	enum:__anon12	file:
NONBLOCK	zsh/.zplugin/bin/zmodules/Src/utils.c	2569;"	d	file:
NONBLOCK	zsh/.zplugin/bin/zmodules/Src/utils.c	2603;"	d	file:
NOTIFY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NOTIFY,$/;"	e	enum:__anon36
NOTIFY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    NOTIFY__,$/;"	e	enum:__anon12	file:
NSUBEXP	zsh/.zplugin/bin/zmodules/Src/pattern.c	94;"	d	file:
NS_NONE	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^    NS_NONE,$/;"	e	enum:__anon1	file:
NS_NORMAL	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^    NS_NORMAL,$/;"	e	enum:__anon1	file:
NS_SECONDS	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^    NS_SECONDS$/;"	e	enum:__anon1	file:
NULLBINCMD	zsh/.zplugin/bin/zmodules/Src/zsh.h	1395;"	d
NULLGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NULLGLOB,$/;"	e	enum:__anon36
NULLGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    NULLGLOB__,$/;"	e	enum:__anon12	file:
NULLTOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NULLTOK,		\/* 0  *\/$/;"	e	enum:lextok
NULL_GSU	zsh/.zplugin/bin/zmodules/Src/params.c	291;"	d	file:
NUMERICGLOBSORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NUMERICGLOBSORT,$/;"	e	enum:__anon36
NUMERICGLOBSORT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    NUMERICGLOBSORT__,$/;"	e	enum:__anon12	file:
NUMMATHFUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	133;"	d
Nameddir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct nameddir  *Nameddir;$/;"	t	typeref:struct:nameddir
NewAtomicBool	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f
NewChunkCache	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f
NewChunkList	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f
NewColorPair	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color) ColorPair {$/;"	f
NewEventBox	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f
NewFullscreenRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f
NewHistory	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f
NewLightRenderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit bool, fullscreen bool, maxHeightFunc func(int) int) Renderer {$/;"	f
NewMatcher	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f
NewMerger	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f
NewReader	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool) *Reader {$/;"	f
NewTerminal	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f
NewWindow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, borderStyle BorderStyle) Window {$/;"	f
NewWindow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, borderStyle BorderStyle) Window {$/;"	f
NewWindow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, borderStyle BorderStyle) Window {$/;"	f
NilClass	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class NilClass$/;"	c
NormalizeRunes	zsh/.zplugin/plugins/junegunn---fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f
Nularg	zsh/.zplugin/bin/zmodules/Src/zsh.h	219;"	d
NumMathFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef mnumber (*NumMathFunc)(char *, int, mnumber *, int);$/;"	t
OCTALZEROES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OCTALZEROES,$/;"	e	enum:__anon36
OCTALZEROES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    OCTALZEROES__,$/;"	e	enum:__anon12	file:
OLDHEAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2849;"	d
OPEN_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	329;"	d
OPEN_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	332;"	d
OPT_ALIAS	zsh/.zplugin/bin/zmodules/Src/options.c	71;"	d	file:
OPT_ALL	zsh/.zplugin/bin/zmodules/Src/options.c	60;"	d	file:
OPT_ALLOC_CHUNK	zsh/.zplugin/bin/zmodules/Src/builtin.c	222;"	d	file:
OPT_ARG	zsh/.zplugin/bin/zmodules/Src/zsh.h	1369;"	d
OPT_ARG_SAFE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1371;"	d
OPT_BOURNE	zsh/.zplugin/bin/zmodules/Src/options.c	61;"	d	file:
OPT_BSHELL	zsh/.zplugin/bin/zmodules/Src/options.c	62;"	d	file:
OPT_CSH	zsh/.zplugin/bin/zmodules/Src/options.c	55;"	d	file:
OPT_EMULATE	zsh/.zplugin/bin/zmodules/Src/options.c	67;"	d	file:
OPT_HASARG	zsh/.zplugin/bin/zmodules/Src/zsh.h	1367;"	d
OPT_INVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OPT_INVALID,$/;"	e	enum:__anon36
OPT_INVALID__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    OPT_INVALID__,$/;"	e	enum:__anon12	file:
OPT_ISSET	zsh/.zplugin/bin/zmodules/Src/zsh.h	1365;"	d
OPT_KSH	zsh/.zplugin/bin/zmodules/Src/options.c	56;"	d	file:
OPT_MINUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1357;"	d
OPT_NONBOURNE	zsh/.zplugin/bin/zmodules/Src/options.c	63;"	d	file:
OPT_NONZSH	zsh/.zplugin/bin/zmodules/Src/options.c	64;"	d	file:
OPT_PLUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1359;"	d
OPT_SH	zsh/.zplugin/bin/zmodules/Src/options.c	57;"	d	file:
OPT_SIZE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OPT_SIZE$/;"	e	enum:__anon36
OPT_SIZE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    OPT_SIZE__$/;"	e	enum:__anon12	file:
OPT_SPECIAL	zsh/.zplugin/bin/zmodules/Src/options.c	69;"	d	file:
OPT_ZSH	zsh/.zplugin/bin/zmodules/Src/options.c	58;"	d	file:
OUTANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTANG,		\/* 10 *\/$/;"	e	enum:lextok
OUTANGAMP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTANGAMP,$/;"	e	enum:lextok
OUTANGAMPBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTANGAMPBANG,$/;"	e	enum:lextok
OUTANGBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTANGBANG,$/;"	e	enum:lextok
OUTBRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTBRACE,   \/* }         *\/$/;"	e	enum:lextok
OUTPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OUTPAR,$/;"	e	enum:lextok
OVERSTRIKE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OVERSTRIKE,$/;"	e	enum:__anon36
OVERSTRIKE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    OVERSTRIKE__,$/;"	e	enum:__anon12	file:
O_NOCTTY	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	752;"	d
Offset	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type Offset [2]int32$/;"	t
OptIndex	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned char OptIndex;$/;"	t
Options	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct options	 *Options;$/;"	t	typeref:struct:options
Options	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type Options struct {$/;"	t
Optname	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct optname   *Optname;$/;"	t	typeref:struct:optname
Outang	zsh/.zplugin/bin/zmodules/Src/zsh.h	189;"	d
OutangProc	zsh/.zplugin/bin/zmodules/Src/zsh.h	190;"	d
Outbrace	zsh/.zplugin/bin/zmodules/Src/zsh.h	184;"	d
Outbrack	zsh/.zplugin/bin/zmodules/Src/zsh.h	186;"	d
Outpar	zsh/.zplugin/bin/zmodules/Src/zsh.h	178;"	d
Outparmath	zsh/.zplugin/bin/zmodules/Src/zsh.h	179;"	d
PAD_64_BIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	91;"	d
PARAMDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2043;"	d
PARSEARGS_LOGIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PARSEARGS_LOGIN    = 0x2	\/* Shell is login shell *\/$/;"	e	enum:__anon25
PARSEARGS_TOPLEVEL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PARSEARGS_TOPLEVEL = 0x1,	\/* Call to initialise shell *\/$/;"	e	enum:__anon25
PATCHARS	zsh/.zplugin/bin/zmodules/Src/zsh.h	245;"	d
PATHDIRS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PATHDIRS,$/;"	e	enum:__anon36
PATHDIRS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PATHDIRS__,$/;"	e	enum:__anon12	file:
PATHSCRIPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PATHSCRIPT,$/;"	e	enum:__anon36
PATHSCRIPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PATHSCRIPT__,$/;"	e	enum:__anon12	file:
PATH_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	311;"	d
PATH_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	314;"	d
PATH_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	317;"	d
PATNEXT	zsh/.zplugin/bin/zmodules/Src/pattern.c	446;"	d	file:
PAT_ANY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1584;"	d
PAT_FILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1582;"	d
PAT_FILET	zsh/.zplugin/bin/zmodules/Src/zsh.h	1583;"	d
PAT_HAS_EXCLUDP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1593;"	d
PAT_HEAPDUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1581;"	d
PAT_LCMATCHUC	zsh/.zplugin/bin/zmodules/Src/zsh.h	1594;"	d
PAT_NOANCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1585;"	d
PAT_NOGLD	zsh/.zplugin/bin/zmodules/Src/zsh.h	1586;"	d
PAT_NOTEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	1592;"	d
PAT_NOTSTART	zsh/.zplugin/bin/zmodules/Src/zsh.h	1591;"	d
PAT_PURES	zsh/.zplugin/bin/zmodules/Src/zsh.h	1587;"	d
PAT_SCAN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1589;"	d
PAT_STATIC	zsh/.zplugin/bin/zmodules/Src/zsh.h	1588;"	d
PAT_ZDUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	1590;"	d
PA_NOALIGN	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    PA_NOALIGN = 1,$/;"	e	enum:__anon11	file:
PA_UNMETA	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    PA_UNMETA  = 2$/;"	e	enum:__anon11	file:
PEOF	zsh/.zplugin/bin/zmodules/Src/pattern.c	312;"	d	file:
PEOF	zsh/.zplugin/bin/zmodules/Src/pattern.c	383;"	d	file:
PIPEFAIL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PIPEFAIL,$/;"	e	enum:__anon36
PIPEFAIL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PIPEFAIL__,$/;"	e	enum:__anon12	file:
PLUGIN_TARGET	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
PMTF_TEST_LEVEL	zsh/.zplugin/bin/zmodules/Src/params.c	/^    PMTF_TEST_LEVEL	= (1<<2)$/;"	e	enum:paramtypes_flags	file:
PMTF_USE_BASE	zsh/.zplugin/bin/zmodules/Src/params.c	/^    PMTF_USE_BASE	= (1<<0),$/;"	e	enum:paramtypes_flags	file:
PMTF_USE_WIDTH	zsh/.zplugin/bin/zmodules/Src/params.c	/^    PMTF_USE_WIDTH	= (1<<1),$/;"	e	enum:paramtypes_flags	file:
PMTYPES_SIZE	zsh/.zplugin/bin/zmodules/Src/params.c	5691;"	d	file:
PM_ABSPATH_USED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1857;"	d
PM_ANONYMOUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1878;"	d
PM_ARRAY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1835;"	d
PM_AUTOALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1887;"	d
PM_AUTOLOAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	1885;"	d
PM_CUR_FPATH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1865;"	d
PM_DONTIMPORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1881;"	d
PM_DONTIMPORT_SUID	zsh/.zplugin/bin/zmodules/Src/zsh.h	1875;"	d
PM_EFLOAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1837;"	d
PM_EXPORTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1856;"	d
PM_FFLOAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1838;"	d
PM_HASHED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1839;"	d
PM_HASHELEM	zsh/.zplugin/bin/zmodules/Src/zsh.h	1891;"	d
PM_HIDE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1864;"	d
PM_HIDEVAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1866;"	d
PM_INTEGER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1836;"	d
PM_KSHSTORED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1871;"	d
PM_LEFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1844;"	d
PM_LOADDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	1876;"	d
PM_LOCAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1879;"	d
PM_LOWER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1847;"	d
PM_NAMEDDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	1892;"	d
PM_NORESTORE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1886;"	d
PM_READONLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1854;"	d
PM_REMOVABLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1884;"	d
PM_RESTRICTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1882;"	d
PM_RIGHT_B	zsh/.zplugin/bin/zmodules/Src/zsh.h	1845;"	d
PM_RIGHT_Z	zsh/.zplugin/bin/zmodules/Src/zsh.h	1846;"	d
PM_SCALAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	1834;"	d
PM_SINGLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1877;"	d
PM_SPECIAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1880;"	d
PM_TAGGED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1855;"	d
PM_TAGGED_LOCAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1869;"	d
PM_TIED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1868;"	d
PM_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1841;"	d
PM_UNALIASED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1862;"	d
PM_UNDEFINED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1852;"	d
PM_UNIQUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1861;"	d
PM_UNSET	zsh/.zplugin/bin/zmodules/Src/zsh.h	1883;"	d
PM_UPPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1851;"	d
PM_WARNNESTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1867;"	d
PM_ZSHSTORED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1872;"	d
POSIXALIASES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXALIASES,$/;"	e	enum:__anon36
POSIXALIASES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXALIASES__,$/;"	e	enum:__anon12	file:
POSIXARGZERO	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXARGZERO,$/;"	e	enum:__anon36
POSIXARGZERO__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXARGZERO__,$/;"	e	enum:__anon12	file:
POSIXBUILTINS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXBUILTINS,$/;"	e	enum:__anon36
POSIXBUILTINS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXBUILTINS__,$/;"	e	enum:__anon12	file:
POSIXCD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXCD,$/;"	e	enum:__anon36
POSIXCD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXCD__,$/;"	e	enum:__anon12	file:
POSIXIDENTIFIERS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXIDENTIFIERS,$/;"	e	enum:__anon36
POSIXIDENTIFIERS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXIDENTIFIERS__,$/;"	e	enum:__anon12	file:
POSIXJOBS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXJOBS,$/;"	e	enum:__anon36
POSIXJOBS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXJOBS__,$/;"	e	enum:__anon12	file:
POSIXSTRINGS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXSTRINGS,$/;"	e	enum:__anon36
POSIXSTRINGS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXSTRINGS__,$/;"	e	enum:__anon12	file:
POSIXTRAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    POSIXTRAPS,$/;"	e	enum:__anon36
POSIXTRAPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    POSIXTRAPS__,$/;"	e	enum:__anon12	file:
POUNDBANGLIMIT	zsh/.zplugin/bin/zmodules/Src/exec.c	461;"	d	file:
PP_ALNUM	zsh/.zplugin/bin/zmodules/Src/zsh.h	1667;"	d
PP_ALPHA	zsh/.zplugin/bin/zmodules/Src/zsh.h	1666;"	d
PP_ASCII	zsh/.zplugin/bin/zmodules/Src/zsh.h	1668;"	d
PP_BLANK	zsh/.zplugin/bin/zmodules/Src/zsh.h	1669;"	d
PP_CNTRL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1670;"	d
PP_DIGIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1671;"	d
PP_FIRST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1664;"	d
PP_GRAPH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1672;"	d
PP_IDENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1680;"	d
PP_IFS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1681;"	d
PP_IFSSPACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1682;"	d
PP_INCOMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1684;"	d
PP_INVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	1685;"	d
PP_LAST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1687;"	d
PP_LOWER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1673;"	d
PP_PRINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1674;"	d
PP_PUNCT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1675;"	d
PP_RANGE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1692;"	d
PP_SPACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1676;"	d
PP_UNKWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1690;"	d
PP_UPPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1677;"	d
PP_WORD	zsh/.zplugin/bin/zmodules/Src/zsh.h	1683;"	d
PP_XDIGIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1678;"	d
PREFORK_ASSIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_ASSIGN        = 0x02,$/;"	e	enum:__anon31
PREFORK_KEY_VALUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_KEY_VALUE     = 0x80,$/;"	e	enum:__anon31
PREFORK_NOSHWORDSPLIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_NOSHWORDSPLIT = 0x20,$/;"	e	enum:__anon31
PREFORK_NO_UNTOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_NO_UNTOK      = 0x100$/;"	e	enum:__anon31
PREFORK_SHWORDSPLIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_SHWORDSPLIT   = 0x10,$/;"	e	enum:__anon31
PREFORK_SINGLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_SINGLE        = 0x04,$/;"	e	enum:__anon31
PREFORK_SPLIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_SPLIT         = 0x08,$/;"	e	enum:__anon31
PREFORK_SUBEXP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_SUBEXP        = 0x40,$/;"	e	enum:__anon31
PREFORK_TYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PREFORK_TYPESET       = 0x01,$/;"	e	enum:__anon31
PRINTEIGHTBIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PRINTEIGHTBIT,$/;"	e	enum:__anon36
PRINTEIGHTBIT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PRINTEIGHTBIT__,$/;"	e	enum:__anon12	file:
PRINTEXITVALUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PRINTEXITVALUE,$/;"	e	enum:__anon36
PRINTEXITVALUE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PRINTEXITVALUE__,$/;"	e	enum:__anon12	file:
PRINTMOD_ALIAS	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_ALIAS = 0x0004,$/;"	e	enum:__anon10	file:
PRINTMOD_AUTO	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_AUTO = 0x0040$/;"	e	enum:__anon10	file:
PRINTMOD_DEPS	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_DEPS = 0x0008,$/;"	e	enum:__anon10	file:
PRINTMOD_EXIST	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_EXIST = 0x0002,$/;"	e	enum:__anon10	file:
PRINTMOD_FEATURES	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_FEATURES = 0x0010,$/;"	e	enum:__anon10	file:
PRINTMOD_LIST	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_LIST = 0x0001,$/;"	e	enum:__anon10	file:
PRINTMOD_LISTALL	zsh/.zplugin/bin/zmodules/Src/module.c	/^    PRINTMOD_LISTALL = 0x0020,$/;"	e	enum:__anon10	file:
PRINT_INCLUDEVALUE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2130;"	d
PRINT_KV_PAIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2129;"	d
PRINT_LINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2132;"	d
PRINT_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2128;"	d
PRINT_NAMEONLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	2126;"	d
PRINT_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2127;"	d
PRINT_TYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	2131;"	d
PRINT_WHENCE_CSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	2135;"	d
PRINT_WHENCE_FUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2138;"	d
PRINT_WHENCE_SIMPLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2137;"	d
PRINT_WHENCE_VERBOSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2136;"	d
PRINT_WHENCE_WORD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2139;"	d
PRIVILEGED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PRIVILEGED,$/;"	e	enum:__anon36
PRIVILEGED__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PRIVILEGED__,$/;"	e	enum:__anon12	file:
PROMPTBANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PROMPTBANG,$/;"	e	enum:__anon36
PROMPTBANG__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PROMPTBANG__,$/;"	e	enum:__anon12	file:
PROMPTCR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PROMPTCR,$/;"	e	enum:__anon36
PROMPTCR__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PROMPTCR__,$/;"	e	enum:__anon12	file:
PROMPTPERCENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PROMPTPERCENT,$/;"	e	enum:__anon36
PROMPTPERCENT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PROMPTPERCENT__,$/;"	e	enum:__anon12	file:
PROMPTSP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PROMPTSP,$/;"	e	enum:__anon36
PROMPTSP__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PROMPTSP__,$/;"	e	enum:__anon12	file:
PROMPTSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PROMPTSUBST,$/;"	e	enum:__anon36
PROMPTSUBST__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PROMPTSUBST__,$/;"	e	enum:__anon12	file:
PUSHDIGNOREDUPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PUSHDIGNOREDUPS,$/;"	e	enum:__anon36
PUSHDIGNOREDUPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PUSHDIGNOREDUPS__,$/;"	e	enum:__anon12	file:
PUSHDMINUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PUSHDMINUS,$/;"	e	enum:__anon36
PUSHDMINUS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PUSHDMINUS__,$/;"	e	enum:__anon12	file:
PUSHDSILENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PUSHDSILENT,$/;"	e	enum:__anon36
PUSHDSILENT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PUSHDSILENT__,$/;"	e	enum:__anon12	file:
PUSHDTOHOME	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    PUSHDTOHOME,$/;"	e	enum:__anon36
PUSHDTOHOME__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    PUSHDTOHOME__,$/;"	e	enum:__anon12	file:
P_ANY	zsh/.zplugin/bin/zmodules/Src/pattern.c	117;"	d	file:
P_ANYBUT	zsh/.zplugin/bin/zmodules/Src/pattern.c	119;"	d	file:
P_ANYOF	zsh/.zplugin/bin/zmodules/Src/pattern.c	118;"	d	file:
P_BACK	zsh/.zplugin/bin/zmodules/Src/pattern.c	100;"	d	file:
P_BRANCH	zsh/.zplugin/bin/zmodules/Src/pattern.c	111;"	d	file:
P_CLOSE	zsh/.zplugin/bin/zmodules/Src/pattern.c	127;"	d	file:
P_COUNT	zsh/.zplugin/bin/zmodules/Src/pattern.c	109;"	d	file:
P_COUNTSTART	zsh/.zplugin/bin/zmodules/Src/pattern.c	108;"	d	file:
P_CT_CURRENT	zsh/.zplugin/bin/zmodules/Src/pattern.c	209;"	d	file:
P_CT_MAX	zsh/.zplugin/bin/zmodules/Src/pattern.c	211;"	d	file:
P_CT_MIN	zsh/.zplugin/bin/zmodules/Src/pattern.c	210;"	d	file:
P_CT_OPERAND	zsh/.zplugin/bin/zmodules/Src/pattern.c	213;"	d	file:
P_CT_PTR	zsh/.zplugin/bin/zmodules/Src/pattern.c	212;"	d	file:
P_DEF_ALLOC	zsh/.zplugin/bin/zmodules/Src/pattern.c	292;"	d	file:
P_END	zsh/.zplugin/bin/zmodules/Src/pattern.c	97;"	d	file:
P_EXACTLY	zsh/.zplugin/bin/zmodules/Src/pattern.c	101;"	d	file:
P_EXCEND	zsh/.zplugin/bin/zmodules/Src/pattern.c	99;"	d	file:
P_EXCLUDE	zsh/.zplugin/bin/zmodules/Src/pattern.c	114;"	d	file:
P_EXCLUDP	zsh/.zplugin/bin/zmodules/Src/pattern.c	115;"	d	file:
P_EXCSYNC	zsh/.zplugin/bin/zmodules/Src/pattern.c	98;"	d	file:
P_GFLAGS	zsh/.zplugin/bin/zmodules/Src/pattern.c	105;"	d	file:
P_HSTART	zsh/.zplugin/bin/zmodules/Src/pattern.c	217;"	d	file:
P_ISBRANCH	zsh/.zplugin/bin/zmodules/Src/pattern.c	200;"	d	file:
P_ISEND	zsh/.zplugin/bin/zmodules/Src/pattern.c	107;"	d	file:
P_ISEXCLUDE	zsh/.zplugin/bin/zmodules/Src/pattern.c	201;"	d	file:
P_ISSTART	zsh/.zplugin/bin/zmodules/Src/pattern.c	106;"	d	file:
P_LS_LEN	zsh/.zplugin/bin/zmodules/Src/pattern.c	205;"	d	file:
P_LS_STR	zsh/.zplugin/bin/zmodules/Src/pattern.c	206;"	d	file:
P_NEXT	zsh/.zplugin/bin/zmodules/Src/pattern.c	198;"	d	file:
P_NOTDOT	zsh/.zplugin/bin/zmodules/Src/pattern.c	202;"	d	file:
P_NOTHING	zsh/.zplugin/bin/zmodules/Src/pattern.c	102;"	d	file:
P_NUMANY	zsh/.zplugin/bin/zmodules/Src/pattern.c	124;"	d	file:
P_NUMFROM	zsh/.zplugin/bin/zmodules/Src/pattern.c	122;"	d	file:
P_NUMRNG	zsh/.zplugin/bin/zmodules/Src/pattern.c	121;"	d	file:
P_NUMTO	zsh/.zplugin/bin/zmodules/Src/pattern.c	123;"	d	file:
P_ONEHASH	zsh/.zplugin/bin/zmodules/Src/pattern.c	103;"	d	file:
P_OP	zsh/.zplugin/bin/zmodules/Src/pattern.c	197;"	d	file:
P_OPEN	zsh/.zplugin/bin/zmodules/Src/pattern.c	126;"	d	file:
P_OPERAND	zsh/.zplugin/bin/zmodules/Src/pattern.c	199;"	d	file:
P_PURESTR	zsh/.zplugin/bin/zmodules/Src/pattern.c	218;"	d	file:
P_SIMPLE	zsh/.zplugin/bin/zmodules/Src/pattern.c	216;"	d	file:
P_STAR	zsh/.zplugin/bin/zmodules/Src/pattern.c	120;"	d	file:
P_TWOHASH	zsh/.zplugin/bin/zmodules/Src/pattern.c	104;"	d	file:
P_WBRANCH	zsh/.zplugin/bin/zmodules/Src/pattern.c	112;"	d	file:
Param	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct param     *Param;$/;"	t	typeref:struct:param
Paramdef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct paramdef  *Paramdef;$/;"	t	typeref:struct:paramdef
ParseOptions	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f
ParseRange	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f
PassMerger	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f
Patprog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct patprog   *Patprog;$/;"	t	typeref:struct:patprog
Patstralloc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct patstralloc  *Patstralloc;$/;"	t	typeref:struct:patstralloc
Pattern	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^type Pattern struct {$/;"	t
Pause	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)  {}$/;"	f
Pause	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f
Pause	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f
Peek	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f
PgDn	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	PgDn$/;"	c
PgUp	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	PgUp$/;"	c
Pound	zsh/.zplugin/bin/zmodules/Src/zsh.h	172;"	d
PrefixMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Prepend	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f
Prepromptfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct prepromptfn *Prepromptfn;$/;"	t	typeref:struct:prepromptfn
Print	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f
Print	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f
PrintTableStats	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void (*PrintTableStats) _((HashTable));$/;"	t
Process	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct process   *Process;$/;"	t	typeref:struct:process
Push	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f
QS_CAST_SIZE	zsh/.zplugin/bin/zmodules/Src/glob.c	3770;"	d	file:
QS_CAST_SIZE	zsh/.zplugin/bin/zmodules/Src/glob.c	3805;"	d	file:
QT_BACKSLASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_BACKSLASH,$/;"	e	enum:__anon15
QT_BACKSLASH_PATTERN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_BACKSLASH_PATTERN,$/;"	e	enum:__anon15
QT_BACKSLASH_SHOWNULL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_BACKSLASH_SHOWNULL,$/;"	e	enum:__anon15
QT_BACKTICK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_BACKTICK,$/;"	e	enum:__anon15
QT_DOLLARS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_DOLLARS,$/;"	e	enum:__anon15
QT_DOUBLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_DOUBLE,$/;"	e	enum:__anon15
QT_IS_SINGLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	307;"	d
QT_NONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_NONE,$/;"	e	enum:__anon15
QT_QUOTEDZPUTS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_QUOTEDZPUTS$/;"	e	enum:__anon15
QT_SINGLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_SINGLE,$/;"	e	enum:__anon15
QT_SINGLE_OPTIONAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    QT_SINGLE_OPTIONAL,$/;"	e	enum:__anon15
Qstring	zsh/.zplugin/bin/zmodules/Src/zsh.h	180;"	d
Qtick	zsh/.zplugin/bin/zmodules/Src/zsh.h	193;"	d
Quest	zsh/.zplugin/bin/zmodules/Src/zsh.h	191;"	d
RCEXPANDPARAM	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RCEXPANDPARAM,$/;"	e	enum:__anon36
RCEXPANDPARAM__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RCEXPANDPARAM__,$/;"	e	enum:__anon12	file:
RCQUOTES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RCQUOTES,$/;"	e	enum:__anon36
RCQUOTES__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RCQUOTES__,$/;"	e	enum:__anon12	file:
RCS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RCS,$/;"	e	enum:__anon36
RCS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RCS__,$/;"	e	enum:__anon12	file:
READ_MSTREAM	zsh/.zplugin/bin/zmodules/Src/builtin.c	4335;"	d	file:
RECEXACT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RECEXACT,$/;"	e	enum:__anon36
RECEXACT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RECEXACT__,$/;"	e	enum:__anon12	file:
REDIRF_FROM_HEREDOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIRF_FROM_HEREDOC = 1$/;"	e	enum:__anon18
REDIR_APP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_APP,		\/* >> *\/$/;"	e	enum:__anon16
REDIR_APPNOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_APPNOW,		\/* >>| *\/$/;"	e	enum:__anon16
REDIR_CLOSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_CLOSE,		\/* >&-, <&- *\/$/;"	e	enum:__anon16
REDIR_ERRAPP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_ERRAPP,		\/* >>& *\/$/;"	e	enum:__anon16
REDIR_ERRAPPNOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_ERRAPPNOW,		\/* >>&| *\/$/;"	e	enum:__anon16
REDIR_ERRWRITE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_ERRWRITE,		\/* &>, >& *\/$/;"	e	enum:__anon16
REDIR_ERRWRITENOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_ERRWRITENOW,	\/* >&| *\/$/;"	e	enum:__anon16
REDIR_FROM_HEREDOC_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	411;"	d
REDIR_HEREDOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_HEREDOC,		\/* << *\/$/;"	e	enum:__anon16
REDIR_HEREDOCDASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_HEREDOCDASH,	\/* <<- *\/$/;"	e	enum:__anon16
REDIR_HERESTR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_HERESTR,		\/* <<< *\/$/;"	e	enum:__anon16
REDIR_INPIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_INPIPE,		\/* < <(...) *\/$/;"	e	enum:__anon16
REDIR_MERGEIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_MERGEIN,		\/* <&n *\/$/;"	e	enum:__anon16
REDIR_MERGEOUT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_MERGEOUT,		\/* >&n *\/$/;"	e	enum:__anon16
REDIR_OUTPIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_OUTPIPE		\/* > >(...) *\/$/;"	e	enum:__anon16
REDIR_READ	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_READ,		\/* < *\/$/;"	e	enum:__anon16
REDIR_READWRITE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_READWRITE,		\/* <> *\/$/;"	e	enum:__anon16
REDIR_TYPE_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	407;"	d
REDIR_VARID_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	409;"	d
REDIR_WRITE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_WRITE,		\/* > *\/$/;"	e	enum:__anon16
REDIR_WRITENOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REDIR_WRITENOW,		\/* >| *\/$/;"	e	enum:__anon16
RELEASE32	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASE32      := fzf-$(VERSION)-$(GOOS)_386$/;"	m
RELEASE64	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASE64      := fzf-$(VERSION)-$(GOOS)_amd64$/;"	m
RELEASEARM5	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASEARM5    := fzf-$(VERSION)-$(GOOS)_arm5$/;"	m
RELEASEARM6	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASEARM6    := fzf-$(VERSION)-$(GOOS)_arm6$/;"	m
RELEASEARM7	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASEARM7    := fzf-$(VERSION)-$(GOOS)_arm7$/;"	m
RELEASEARM8	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASEARM8    := fzf-$(VERSION)-$(GOOS)_arm8$/;"	m
RELEASEPPC64LE	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^RELEASEPPC64LE := fzf-$(VERSION)-$(GOOS)_ppc64le$/;"	m
REMATCHPCRE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REMATCHPCRE,$/;"	e	enum:__anon36
REMATCHPCRE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    REMATCHPCRE__,$/;"	e	enum:__anon12	file:
REPEAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    REPEAT,	\/* repeat    *\/$/;"	e	enum:lextok
RESTRICTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RESTRICTED,$/;"	e	enum:__anon36
RESTRICTED__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RESTRICTED__,$/;"	e	enum:__anon12	file:
RET_IF_COM	zsh/.zplugin/bin/zmodules/Src/exec.c	807;"	d	file:
REVISION	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES))$/;"	m
RLIMIT_CORE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	504;"	d
RLIMIT_CPU	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	500;"	d
RLIMIT_DATA	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	502;"	d
RLIMIT_FSIZE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	501;"	d
RLIMIT_NOFILE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	506;"	d
RLIMIT_NOFILE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	515;"	d
RLIMIT_OPEN_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	507;"	d
RLIMIT_RSS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	505;"	d
RLIMIT_STACK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	503;"	d
RLIMIT_VMEM	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	518;"	d
RLIM_INFINITY	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	509;"	d
RLIM_NLIMITS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	508;"	d
RMSTARSILENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RMSTARSILENT,$/;"	e	enum:__anon36
RMSTARSILENT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RMSTARSILENT__,$/;"	e	enum:__anon12	file:
RMSTARWAIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RMSTARWAIT,$/;"	e	enum:__anon36
RMSTARWAIT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    RMSTARWAIT__,$/;"	e	enum:__anon12	file:
ROOT_DIR	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
RTLD_GLOBAL	zsh/.zplugin/bin/zmodules/Src/module.c	1511;"	d	file:
RTLD_GLOBAL	zsh/.zplugin/bin/zmodules/Src/module.c	1568;"	d	file:
RTLD_LAZY	zsh/.zplugin/bin/zmodules/Src/module.c	1510;"	d	file:
RTLD_LAZY	zsh/.zplugin/bin/zmodules/Src/module.c	1565;"	d	file:
R_OK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	711;"	d
Range	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^type Range struct {$/;"	t
Read	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f
Read	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f
ReadSource	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f
Reader	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^type Reader struct {$/;"	t
Redir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct redir     *Redir;$/;"	t	typeref:struct:redir
Refresh	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()    {}$/;"	f
Refresh	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f
Refresh	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f
Refresh	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f
Refresh	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f
RefreshWindows	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f
RefreshWindows	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f
RefreshWindows	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f
RemoveNodeFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef HashNode (*RemoveNodeFunc) _((HashTable, const char *));$/;"	t
Renderer	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type Renderer interface {$/;"	t
Repldata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct repldata *Repldata;$/;"	t	typeref:struct:repldata
Reset	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool) {$/;"	f
Resize	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Resize$/;"	c
Result	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^type Result struct {$/;"	t
Result	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type Result struct {$/;"	t
Resume	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool) {}$/;"	f
Resume	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool) {$/;"	f
Resume	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool) {$/;"	f
Reswd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct reswd     *Reswd;$/;"	t	typeref:struct:reswd
Reverse	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Reverse          = Attr(1 << 6)$/;"	c
Reverse	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c
Right	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Right$/;"	c
RightClick	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	RightClick$/;"	c
Rstring	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *rstring, *Rstring;$/;"	m	struct:buf_vars	file:
Run	zsh/.zplugin/plugins/junegunn---fzf/src/core.go	/^func Run(opts *Options, revision string) {$/;"	f
Rune	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Rune = iota$/;"	c
RuneWidth	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^func RuneWidth(r rune, prefixWidth int, tabstop int) int {$/;"	f
RunesToChars	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f
SCANPM_ARRONLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1913;"	d
SCANPM_ASSIGNING	zsh/.zplugin/bin/zmodules/Src/zsh.h	1907;"	d
SCANPM_CHECKING	zsh/.zplugin/bin/zmodules/Src/zsh.h	1917;"	d
SCANPM_DQUOTED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1909;"	d
SCANPM_ISVAR_AT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1921;"	d
SCANPM_KEYMATCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1908;"	d
SCANPM_MATCHKEY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1904;"	d
SCANPM_MATCHMANY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1906;"	d
SCANPM_MATCHVAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1905;"	d
SCANPM_WANTINDEX	zsh/.zplugin/bin/zmodules/Src/zsh.h	1903;"	d
SCANPM_WANTKEYS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1902;"	d
SCANPM_WANTVALS	zsh/.zplugin/bin/zmodules/Src/zsh.h	1901;"	d
SDown	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	SDown$/;"	c
SELECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SELECT,	\/* select    *\/$/;"	e	enum:lextok
SELECT_ARG_2_T	zsh/.zplugin/bin/zmodules/Src/prototypes.h	67;"	d
SELECT_ARG_2_T	zsh/.zplugin/bin/zmodules/Src/prototypes.h	69;"	d
SEMI	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SEMI,$/;"	e	enum:lextok
SEMIAMP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SEMIAMP,$/;"	e	enum:lextok
SEMIBAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SEMIBAR,$/;"	e	enum:lextok
SEPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SEPER,$/;"	e	enum:lextok
SETPARBEGIN	zsh/.zplugin/bin/zmodules/Src/lex.c	468;"	d	file:
SETPAREND	zsh/.zplugin/bin/zmodules/Src/lex.c	473;"	d	file:
SEventNode	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^typedef struct zp_sevent_node *SEventNode;$/;"	t	typeref:struct:zp_sevent_node	file:
SFC_COMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1291;"	d
SFC_CWIDGET	zsh/.zplugin/bin/zmodules/Src/zsh.h	1292;"	d
SFC_DIRECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1287;"	d
SFC_HOOK	zsh/.zplugin/bin/zmodules/Src/zsh.h	1289;"	d
SFC_NONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1286;"	d
SFC_SIGNAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1288;"	d
SFC_SUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1293;"	d
SFC_WIDGET	zsh/.zplugin/bin/zmodules/Src/zsh.h	1290;"	d
SGTABTYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2560;"	d
SGTABTYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2563;"	d
SGTABTYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2566;"	d
SGTTYFLAG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2555;"	d
SGTTYFLAG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2557;"	d
SHAREHISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHAREHISTORY,$/;"	e	enum:__anon36
SHAREHISTORY__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHAREHISTORY__,$/;"	e	enum:__anon12	file:
SHELL_EMULATION	zsh/.zplugin/bin/zmodules/Src/zsh.h	2296;"	d
SHFILEEXPANSION	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHFILEEXPANSION,$/;"	e	enum:__anon36
SHFILEEXPANSION__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHFILEEXPANSION__,$/;"	e	enum:__anon12	file:
SHGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHGLOB,$/;"	e	enum:__anon36
SHGLOB__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHGLOB__,$/;"	e	enum:__anon12	file:
SHIN	zsh/.zplugin/bin/zmodules/Src/input.c	/^int SHIN;$/;"	v
SHINSTDIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHINSTDIN,$/;"	e	enum:__anon36
SHINSTDIN__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHINSTDIN__,$/;"	e	enum:__anon12	file:
SHNULLCMD	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHNULLCMD,$/;"	e	enum:__anon36
SHNULLCMD__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHNULLCMD__,$/;"	e	enum:__anon12	file:
SHOPTIONLETTERS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHOPTIONLETTERS,$/;"	e	enum:__anon36
SHOPTIONLETTERS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHOPTIONLETTERS__,$/;"	e	enum:__anon12	file:
SHORTLOOPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHORTLOOPS,$/;"	e	enum:__anon36
SHORTLOOPS__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHORTLOOPS__,$/;"	e	enum:__anon12	file:
SHTTY	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int SHTTY;$/;"	v
SHWORDSPLIT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SHWORDSPLIT,$/;"	e	enum:__anon36
SHWORDSPLIT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SHWORDSPLIT__,$/;"	e	enum:__anon12	file:
SIGDEBUG	zsh/.zplugin/bin/zmodules/Src/signals.h	37;"	d
SIGEXIT	zsh/.zplugin/bin/zmodules/Src/signals.h	39;"	d
SIGNAL_HANDTYPE	zsh/.zplugin/bin/zmodules/Src/signals.h	30;"	d
SIGZERR	zsh/.zplugin/bin/zmodules/Src/signals.h	36;"	d
SINGLECOMMAND	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SINGLECOMMAND,$/;"	e	enum:__anon36
SINGLECOMMAND__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SINGLECOMMAND__,$/;"	e	enum:__anon12	file:
SINGLELINEZLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SINGLELINEZLE,$/;"	e	enum:__anon36
SINGLELINEZLE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SINGLELINEZLE__,$/;"	e	enum:__anon12	file:
SITE_FPATH_LEN	zsh/.zplugin/bin/zmodules/Src/init.c	896;"	d	file:
SLeft	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	SLeft$/;"	c
SORTIT_ANYOLDHOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_ANYOLDHOW = 0,	\/* Defaults *\/$/;"	e	enum:__anon38
SORTIT_BACKWARDS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_BACKWARDS = 4,$/;"	e	enum:__anon38
SORTIT_IGNORING_BACKSLASHES	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_IGNORING_BACKSLASHES = 8,$/;"	e	enum:__anon38
SORTIT_IGNORING_CASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_IGNORING_CASE = 1,$/;"	e	enum:__anon38
SORTIT_NUMERICALLY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_NUMERICALLY = 2,$/;"	e	enum:__anon38
SORTIT_SOMEHOW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SORTIT_SOMEHOW = 16,$/;"	e	enum:__anon38
SOURCES	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SOURCETRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SOURCETRACE,$/;"	e	enum:__anon36
SOURCETRACE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SOURCETRACE__,$/;"	e	enum:__anon12	file:
SOURCE_ERROR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SOURCE_ERROR = 2$/;"	e	enum:source_return
SOURCE_NOT_FOUND	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SOURCE_NOT_FOUND = 1,$/;"	e	enum:source_return
SOURCE_OK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SOURCE_OK = 0,$/;"	e	enum:source_return
SPECCHARS	zsh/.zplugin/bin/zmodules/Src/zsh.h	241;"	d
SPECIALPMDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2070;"	d
SP_RUNNING	zsh/.zplugin/bin/zmodules/Src/zsh.h	1053;"	d
SRC_DIR	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/Makefile	/^SRC_DIR    := .\/src$/;"	m
SRC_FILES	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
SRight	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	SRight$/;"	c
STAT_ATTACH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1045;"	d
STAT_BUILTIN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1048;"	d
STAT_CHANGED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1029;"	d
STAT_CURSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1042;"	d
STAT_DISOWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1051;"	d
STAT_DONE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1032;"	d
STAT_INUSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	1037;"	d
STAT_LOCKED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1033;"	d
STAT_NOPRINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	1035;"	d
STAT_NOSTTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	1043;"	d
STAT_STOPPED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1030;"	d
STAT_SUBJOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	1039;"	d
STAT_SUBJOB_ORPHANED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1049;"	d
STAT_SUBLEADER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1046;"	d
STAT_SUPERJOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	1038;"	d
STAT_TIMED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1031;"	d
STAT_WASSUPER	zsh/.zplugin/bin/zmodules/Src/zsh.h	1040;"	d
STOPHIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	2213;"	d
STOUC	zsh/.zplugin/bin/zmodules/Src/zsh.h	146;"	d
STOUC	zsh/.zplugin/bin/zmodules/Src/zsh.h	148;"	d
STRING	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    STRING,$/;"	e	enum:lextok
STRINGIFY	zsh/.zplugin/bin/zmodules/Src/zsh.h	2860;"	d
STRINGIFY_LITERAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2859;"	d
STRMATHFUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	135;"	d
STRPARAMDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2054;"	d
STR_BOOT	zsh/.zplugin/bin/zmodules/Src/module.c	1549;"	d	file:
STR_BOOT	zsh/.zplugin/bin/zmodules/Src/module.c	1556;"	d	file:
STR_CLEANUP	zsh/.zplugin/bin/zmodules/Src/module.c	1550;"	d	file:
STR_CLEANUP	zsh/.zplugin/bin/zmodules/Src/module.c	1557;"	d	file:
STR_ENABLES	zsh/.zplugin/bin/zmodules/Src/module.c	1548;"	d	file:
STR_ENABLES	zsh/.zplugin/bin/zmodules/Src/module.c	1555;"	d	file:
STR_FEATURES	zsh/.zplugin/bin/zmodules/Src/module.c	1547;"	d	file:
STR_FEATURES	zsh/.zplugin/bin/zmodules/Src/module.c	1554;"	d	file:
STR_FINISH	zsh/.zplugin/bin/zmodules/Src/module.c	1551;"	d	file:
STR_FINISH	zsh/.zplugin/bin/zmodules/Src/module.c	1558;"	d	file:
STR_SETUP	zsh/.zplugin/bin/zmodules/Src/module.c	1546;"	d	file:
STR_SETUP	zsh/.zplugin/bin/zmodules/Src/module.c	1553;"	d	file:
STTYval	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static char *STTYval;$/;"	v	file:
SUB_ALL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1937;"	d
SUB_BIND	zsh/.zplugin/bin/zmodules/Src/zsh.h	1934;"	d
SUB_DOSUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1939;"	d
SUB_EIND	zsh/.zplugin/bin/zmodules/Src/zsh.h	1935;"	d
SUB_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	1929;"	d
SUB_GLOBAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1938;"	d
SUB_LEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	1936;"	d
SUB_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1943;"	d
SUB_LONG	zsh/.zplugin/bin/zmodules/Src/zsh.h	1930;"	d
SUB_MATCH	zsh/.zplugin/bin/zmodules/Src/zsh.h	1932;"	d
SUB_REST	zsh/.zplugin/bin/zmodules/Src/zsh.h	1933;"	d
SUB_RETFAIL	zsh/.zplugin/bin/zmodules/Src/zsh.h	1940;"	d
SUB_START	zsh/.zplugin/bin/zmodules/Src/zsh.h	1941;"	d
SUB_SUBSTR	zsh/.zplugin/bin/zmodules/Src/zsh.h	1931;"	d
SUNKEYBOARDHACK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    SUNKEYBOARDHACK,$/;"	e	enum:__anon36
SUNKEYBOARDHACK__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    SUNKEYBOARDHACK__,$/;"	e	enum:__anon12	file:
SUp	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	SUp$/;"	c
SV_INTERRUPT	zsh/.zplugin/bin/zmodules/Src/signals.h	42;"	d
SWITCHBACKHEAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2852;"	d
SWITCHHEAPS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2851;"	d
S_IFMT	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	556;"	d
S_IRGRP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	662;"	d
S_IROTH	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	671;"	d
S_IRUGO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	689;"	d
S_IRUSR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	653;"	d
S_IRWXG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	683;"	d
S_IRWXO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	686;"	d
S_IRWXU	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	680;"	d
S_ISBLK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	537;"	d
S_ISBLK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	560;"	d
S_ISBLK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	602;"	d
S_ISCHR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	538;"	d
S_ISCHR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	563;"	d
S_ISCHR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	605;"	d
S_ISDIR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	539;"	d
S_ISDIR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	566;"	d
S_ISDIR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	608;"	d
S_ISDOOR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	540;"	d
S_ISDOOR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	569;"	d
S_ISDOOR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	611;"	d
S_ISFIFO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	541;"	d
S_ISFIFO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	572;"	d
S_ISFIFO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	614;"	d
S_ISGID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	647;"	d
S_ISLNK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	542;"	d
S_ISLNK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	575;"	d
S_ISLNK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	617;"	d
S_ISMPB	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	543;"	d
S_ISMPB	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	578;"	d
S_ISMPB	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	620;"	d
S_ISMPC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	544;"	d
S_ISMPC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	581;"	d
S_ISMPC	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	623;"	d
S_ISNWK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	545;"	d
S_ISNWK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	584;"	d
S_ISNWK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	626;"	d
S_ISOFD	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	546;"	d
S_ISOFD	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	587;"	d
S_ISOFD	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	629;"	d
S_ISOFL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	547;"	d
S_ISOFL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	590;"	d
S_ISOFL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	632;"	d
S_ISREG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	548;"	d
S_ISREG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	593;"	d
S_ISREG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	635;"	d
S_ISSOCK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	549;"	d
S_ISSOCK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	596;"	d
S_ISSOCK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	638;"	d
S_ISUID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	644;"	d
S_ISVTX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	650;"	d
S_IWGRP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	665;"	d
S_IWOTH	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	674;"	d
S_IWUGO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	692;"	d
S_IWUSR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	656;"	d
S_IXGRP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	668;"	d
S_IXOTH	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	677;"	d
S_IXUGO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	695;"	d
S_IXUSR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	659;"	d
ScanFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void     (*ScanFunc)       _((HashNode, int));$/;"	t
ScanStatus	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^typedef struct scanstatus *ScanStatus;$/;"	t	typeref:struct:scanstatus	file:
ScanTabFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void     (*ScanTabFunc)    _((HashTable, ScanFunc, int));$/;"	t
Search	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f
SessionLoad	nvim/sessions/default.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	vim_origin/sessions/default.vim	/^let SessionLoad = 1$/;"	v
Set	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f
Set	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f
SetNonblock	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f
SetNonblock	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f
Shell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class Shell$/;"	c
Shfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct shfunc    *Shfunc;$/;"	t	typeref:struct:shfunc
Slab	zsh/.zplugin/plugins/junegunn---fzf/src/util/slab.go	/^type Slab struct {$/;"	t
Snapshot	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f
Snull	zsh/.zplugin/bin/zmodules/Src/zsh.h	206;"	d
SolveTabComplex	nvim/init.vim	/^augroup SolveTabComplex$/;"	a
SortElt	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct sortelt *SortElt;$/;"	t	typeref:struct:sortelt
Star	zsh/.zplugin/bin/zmodules/Src/zsh.h	175;"	d
Statptr	zsh/.zplugin/bin/zmodules/Src/glob.c	/^typedef struct stat *Statptr;	 \/* This makes the Ultrix compiler happy.  Go figure. *\/$/;"	t	typeref:struct:stat	file:
StrMathFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef mnumber (*StrMathFunc)(char *, char *, int);$/;"	t
String	zsh/.zplugin/bin/zmodules/Src/zsh.h	173;"	d
String	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (t term) String() string {$/;"	f
String	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f
String	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f
String	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f
Style	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f
SuffixMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int) {$/;"	f
Swap	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f
Swap	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f
Swap	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f
Swap	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f
TCALLATTRSOFF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2603;"	d
TCBACKSPACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2613;"	d
TCBGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2615;"	d
TCBOLDFACEBEG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2600;"	d
TCBUFSIZE	zsh/.zplugin/bin/zmodules/Src/exec.c	2142;"	d	file:
TCCLEAREOD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2595;"	d
TCCLEAREOL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2596;"	d
TCCLEARSCREEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2582;"	d
TCDEL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2591;"	d
TCDELLINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2598;"	d
TCDOWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2589;"	d
TCDOWNCURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2608;"	d
TCFGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2614;"	d
TCHORIZPOS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2606;"	d
TCINS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2593;"	d
TCINSLINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2597;"	d
TCLEFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2583;"	d
TCLEFTCURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2609;"	d
TCMULTDEL	zsh/.zplugin/bin/zmodules/Src/zsh.h	2592;"	d
TCMULTDOWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2590;"	d
TCMULTINS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2594;"	d
TCMULTLEFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2584;"	d
TCMULTRIGHT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2586;"	d
TCMULTUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2588;"	d
TCNEXTTAB	zsh/.zplugin/bin/zmodules/Src/zsh.h	2599;"	d
TCRESTRCURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2612;"	d
TCRIGHT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2585;"	d
TCRIGHTCURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2610;"	d
TCSADRAIN	zsh/.zplugin/bin/zmodules/Src/utils.c	1824;"	d	file:
TCSAVECURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2611;"	d
TCSTANDOUTBEG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2601;"	d
TCSTANDOUTEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2604;"	d
TCUNDERLINEBEG	zsh/.zplugin/bin/zmodules/Src/zsh.h	2602;"	d
TCUNDERLINEEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	2605;"	d
TCUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2587;"	d
TCUPCURSOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2607;"	d
TC_COL_BG_DEFAULT	zsh/.zplugin/bin/zmodules/Src/prompt.c	1833;"	d	file:
TC_COL_BG_END	zsh/.zplugin/bin/zmodules/Src/prompt.c	1831;"	d	file:
TC_COL_BG_START	zsh/.zplugin/bin/zmodules/Src/prompt.c	1829;"	d	file:
TC_COL_FG_DEFAULT	zsh/.zplugin/bin/zmodules/Src/prompt.c	1826;"	d	file:
TC_COL_FG_END	zsh/.zplugin/bin/zmodules/Src/prompt.c	1824;"	d	file:
TC_COL_FG_START	zsh/.zplugin/bin/zmodules/Src/prompt.c	1822;"	d	file:
TC_CONST	zsh/.zplugin/bin/zmodules/Src/prototypes.h	44;"	d
TC_CONST	zsh/.zplugin/bin/zmodules/Src/prototypes.h	46;"	d
TC_CONST	zsh/.zplugin/bin/zmodules/Src/prototypes.h	53;"	d
TC_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2616;"	d
TERM_BAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	2574;"	d
TERM_NARROW	zsh/.zplugin/bin/zmodules/Src/zsh.h	2578;"	d
TERM_NOUP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2576;"	d
TERM_SHORT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2577;"	d
TERM_UNKNOWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	2575;"	d
THEN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    THEN,	\/* then      *\/$/;"	e	enum:lextok
TIME	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TIME,	\/* time      *\/ \/* 60 *\/$/;"	e	enum:lextok
TOLOWER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2632;"	d	file:
TOLOWER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2638;"	d	file:
TOUPPER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2631;"	d	file:
TOUPPER	zsh/.zplugin/bin/zmodules/Src/pattern.c	2637;"	d	file:
TRANSIENTRPROMPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRANSIENTRPROMPT,$/;"	e	enum:__anon36
TRANSIENTRPROMPT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    TRANSIENTRPROMPT__,$/;"	e	enum:__anon12	file:
TRAPSASYNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRAPSASYNC,$/;"	e	enum:__anon36
TRAPSASYNC__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    TRAPSASYNC__,$/;"	e	enum:__anon12	file:
TRAP_STATE_FORCE_RETURN	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRAP_STATE_FORCE_RETURN$/;"	e	enum:trap_state
TRAP_STATE_INACTIVE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRAP_STATE_INACTIVE,$/;"	e	enum:trap_state
TRAP_STATE_PRIMED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRAP_STATE_PRIMED,$/;"	e	enum:trap_state
TRINANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TRINANG,$/;"	e	enum:lextok
TSC_DIRTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TSC_DIRTY = 0x0004$/;"	e	enum:__anon37
TSC_OUTPUT_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TSC_OUTPUT_MASK = 0x0003,$/;"	e	enum:__anon37
TSC_PROMPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TSC_PROMPT = 0x0002,$/;"	e	enum:__anon37
TSC_RAW	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TSC_RAW = 0x0001,$/;"	e	enum:__anon37
TT_BYTES	zsh/.zplugin/bin/zmodules/Src/glob.c	128;"	d	file:
TT_DAYS	zsh/.zplugin/bin/zmodules/Src/glob.c	121;"	d	file:
TT_GIGABYTES	zsh/.zplugin/bin/zmodules/Src/glob.c	132;"	d	file:
TT_HOURS	zsh/.zplugin/bin/zmodules/Src/glob.c	122;"	d	file:
TT_KILOBYTES	zsh/.zplugin/bin/zmodules/Src/glob.c	130;"	d	file:
TT_MEGABYTES	zsh/.zplugin/bin/zmodules/Src/glob.c	131;"	d	file:
TT_MINS	zsh/.zplugin/bin/zmodules/Src/glob.c	123;"	d	file:
TT_MONTHS	zsh/.zplugin/bin/zmodules/Src/glob.c	125;"	d	file:
TT_POSIX_BLOCKS	zsh/.zplugin/bin/zmodules/Src/glob.c	129;"	d	file:
TT_SECONDS	zsh/.zplugin/bin/zmodules/Src/glob.c	126;"	d	file:
TT_TERABYTES	zsh/.zplugin/bin/zmodules/Src/glob.c	133;"	d	file:
TT_WEEKS	zsh/.zplugin/bin/zmodules/Src/glob.c	124;"	d	file:
TXTBGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2628;"	d
TXTBOLDFACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2624;"	d
TXTFGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2627;"	d
TXTNOBGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2640;"	d
TXTNOBOLDFACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2636;"	d
TXTNOFGCOLOUR	zsh/.zplugin/bin/zmodules/Src/zsh.h	2639;"	d
TXTNOSTANDOUT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2637;"	d
TXTNOUNDERLINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2638;"	d
TXTSTANDOUT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2625;"	d
TXTUNDERLINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	2626;"	d
TXT_ATTR_BG_COL_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2660;"	d
TXT_ATTR_BG_COL_SHIFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2662;"	d
TXT_ATTR_BG_ON_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2679;"	d
TXT_ATTR_BG_TERMCAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2667;"	d
TXT_ATTR_COLOUR_ON_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2683;"	d
TXT_ATTR_FG_COL_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2656;"	d
TXT_ATTR_FG_COL_SHIFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2658;"	d
TXT_ATTR_FG_ON_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2675;"	d
TXT_ATTR_FG_TERMCAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	2665;"	d
TXT_ATTR_OFF_FROM_ON	zsh/.zplugin/bin/zmodules/Src/zsh.h	2645;"	d
TXT_ATTR_OFF_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2642;"	d
TXT_ATTR_OFF_ON_SHIFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2644;"	d
TXT_ATTR_ON_FROM_OFF	zsh/.zplugin/bin/zmodules/Src/zsh.h	2647;"	d
TXT_ATTR_ON_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2630;"	d
TXT_ATTR_ON_VALUES_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2670;"	d
TXT_MULTIWORD_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2653;"	d
TYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TYPESET     \/* typeset or similar *\/$/;"	e	enum:lextok
TYPESETSILENT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TYPESETSILENT,$/;"	e	enum:__anon36
TYPESETSILENT__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    TYPESETSILENT__,$/;"	e	enum:__anon12	file:
TYPESET_OPTNUM	zsh/.zplugin/bin/zmodules/Src/zsh.h	1898;"	d
TYPESET_OPTSTR	zsh/.zplugin/bin/zmodules/Src/zsh.h	1895;"	d
Tab	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Tab$/;"	c
TableFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void     (*TableFunc)      _((HashTable));$/;"	t
TcellWindow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	t
Terminal	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type Terminal struct {$/;"	t
TerminalSession	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^class TerminalSession$/;"	c
TestAdditiveExpect	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f
TestAnsiCodeStringConversion	zsh/.zplugin/plugins/junegunn---fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f
TestAtomicBool	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f
TestBase	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c	class:TestBase
TestBind	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f
TestCacheKey	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f
TestCacheable	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f
TestCaseSensitivity	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f
TestCharsLength	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f
TestCharsToString	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f
TestChunkCache	zsh/.zplugin/plugins/junegunn---fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f
TestChunkList	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f
TestColorOffset	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f
TestColorSpec	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f
TestContrain	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f
TestDefaultCtrlNP	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f
TestDelimiterRegex	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f
TestDelimiterRegexRegex	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f
TestDelimiterRegexString	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f
TestEmptyMerger	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f
TestEmptyPattern	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f
TestEqual	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEventBox	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f
TestExact	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f
TestExactMatchNaive	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f
TestExactMatchNaiveBackward	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f
TestExtractColor	zsh/.zplugin/plugins/junegunn---fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f
TestFish	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c	class:TestBase
TestFuzzyMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f
TestFuzzyMatchBackward	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f
TestGoFZF	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c	class:TestBase
TestHexToColor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f
TestHistory	zsh/.zplugin/plugins/junegunn---fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f
TestIrrelevantNth	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f
TestLongString	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f
TestMatchFunc	zsh/.zplugin/bin/zmodules/Src/glob.c	/^typedef int (*TestMatchFunc) _((char *, struct stat *, off_t, char *));$/;"	t	file:
TestMax	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f
TestMergerSorted	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f
TestMergerUnsorted	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f
TestNormalize	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f
TestOffsetSort	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f
TestOrigTextAndTransformed	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f
TestParseKeys	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f
TestParseKeysWithComma	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f
TestParseNilTheme	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestParseNilTheme(t *testing.T) {$/;"	f
TestParseRange	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f
TestParseTermsEmpty	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f
TestParseTermsExtended	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f
TestParseTermsExtendedExact	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f
TestPrefixMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f
TestPreviewOpts	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f
TestQuoteEntryCmd	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_test.go	/^func TestQuoteEntryCmd(t *testing.T) {$/;"	f
TestRankComparison	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f
TestReadFromCommand	zsh/.zplugin/plugins/junegunn---fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f
TestReplacePlaceholder	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f
TestResultRank	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f
TestShell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^module TestShell$/;"	m	class:TestBase
TestSplitNth	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f
TestStringPtr	zsh/.zplugin/plugins/junegunn---fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f
TestSuffixMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f
TestToCharsAscii	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f
TestToggle	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f
TestTokenize	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f
TestTransform	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f
TestTransformIndexOutOfBounds	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f
TestTrimLength	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f
TestZsh	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c	class:TestBase
Tick	zsh/.zplugin/bin/zmodules/Src/zsh.h	187;"	d
Tilde	zsh/.zplugin/bin/zmodules/Src/zsh.h	192;"	d
Timedfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct timedfn   *Timedfn;$/;"	t	typeref:struct:timedfn
Tmux	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^class Tmux$/;"	c
ToChars	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f
ToRunes	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f
ToString	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f
ToString	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f
Token	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^type Token struct {$/;"	t
Tokenize	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f
Top	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f
Top	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f
TrailingWhitespaces	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f
Transform	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f
TrimLength	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f
TrimLength	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f
UNAME_M	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNMETA	zsh/.zplugin/bin/zmodules/Src/pattern.c	393;"	d	file:
UNSET	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    UNSET,$/;"	e	enum:__anon36
UNSET__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    UNSET__,$/;"	e	enum:__anon12	file:
UNTIL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    UNTIL,	\/* until     *\/$/;"	e	enum:lextok
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_dirs(UNUSED(char *name), char **argv, Options ops, UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_eval(UNUSED(char *nam), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_false(UNUSED(char *name), UNUSED(char **argv), UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_getopts(UNUSED(char *name), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_let(UNUSED(char *name), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_pwd(UNUSED(char *name), UNUSED(char **argv), Options ops, UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_times(UNUSED(char *name), UNUSED(char **argv), UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_true(UNUSED(char *name), UNUSED(char **argv), UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_ttyctl(UNUSED(char *name), UNUSED(char **argv), Options ops, UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualdev(UNUSED(char *name), struct stat *buf, off_t dv, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualgid(UNUSED(char *name), struct stat *buf, off_t gid, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisblk(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualischr(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualiscom(UNUSED(char *name), struct stat *buf, UNUSED(off_t mod), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisdev(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisdir(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisfifo(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualislnk(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisreg(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualissock(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualmodeflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualnlink(UNUSED(char *name), struct stat *buf, off_t ct, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualsize(UNUSED(char *name), struct stat *buf, off_t size, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualtime(UNUSED(char *name), struct stat *buf, off_t days, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualuid(UNUSED(char *name), struct stat *buf, off_t uid, UNUSED(char *dummy))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^bin_hashinfo(UNUSED(char *nam), UNUSED(char **args), UNUSED(Options ops), UNUSED(int func))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^fillcmdnamtable(UNUSED(HashTable ht))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/init.c	/^noop_function_int(UNUSED(int nothing))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^boot_(UNUSED(Module m))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^cleanup_(UNUSED(Module m))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^enables_(UNUSED(Module m), UNUSED(int **enables))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^features_(UNUSED(Module m), UNUSED(char ***features))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^finish_(UNUSED(Module m))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/module.c	/^setup_(UNUSED(Module m))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/options.c	/^dashgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^argzerogetfn(UNUSED(Param pm))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^egidgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^errnogetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^euidgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^floatsecondsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^gidgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^histcharsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^histsizegetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^homegetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^ifsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^intsecondsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^keyboardhackgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^nullintsetfn(UNUSED(Param pm), UNUSED(zlong x))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^nullunsetfn(UNUSED(Param pm), UNUSED(int exp))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^pipestatgetfn(UNUSED(Param pm))$/;"	f	file:
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^poundgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^randomgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^savehistsizegetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^termgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^terminfodirsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^terminfogetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^ttyidlegetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^uidgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^underscoregetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^usernamegetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/params.c	/^wordcharsgetfn(UNUSED(Param pm))$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^finish_( UNUSED( Module m ) )$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^setup_( UNUSED( Module m ) )$/;"	f
UNUSED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	793;"	d
UNUSED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	795;"	d
USES_TERMCAP_H	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	874;"	d
USES_TERM_H	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	871;"	d
USEZLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    USEZLE,$/;"	e	enum:__anon36
USEZLE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    USEZLE__,$/;"	e	enum:__anon12	file:
USE_GETGRGID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	828;"	d
USE_GETGRNAM	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	832;"	d
USE_GETPWENT	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	836;"	d
USE_GETPWNAM	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	840;"	d
USE_GETPWUID	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	844;"	d
USE_INITGROUPS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	824;"	d
USE_LOCALE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	775;"	d
USE_LOCALE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	777;"	d
USE_MMAP	zsh/.zplugin/bin/zmodules/Src/mem.c	94;"	d	file:
USE_MMAP	zsh/.zplugin/bin/zmodules/Src/parse.c	3550;"	d	file:
USE_MMAP	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	878;"	d	file:
USE_SET_UNSET_ENV	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	740;"	d
Underline	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^	Underline        = Attr(1 << 3)$/;"	c
Underline	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c
Unwatch	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f
Up	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	Up$/;"	c
Upat	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^typedef union upat *Upat;$/;"	t	typeref:union:upat	file:
UpdateCount	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, success bool) {$/;"	f
UpdateHeader	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f
UpdateList	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger) {$/;"	f
UpdateProgress	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f
VALFLAG_EMPTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    VALFLAG_EMPTY =	0x0002,	\/* Subscripted range is empty *\/$/;"	e	enum:__anon19
VALFLAG_INV	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    VALFLAG_INV =	0x0001,	\/* We are performing inverse subscripting *\/$/;"	e	enum:__anon19
VALFLAG_SUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    VALFLAG_SUBST =     0x0004  \/* Substitution, so apply padding, case flags *\/$/;"	e	enum:__anon19
VARARR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	299;"	d
VARARR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	301;"	d
VARARR	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	304;"	d
VA_ALIST1	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	200;"	d
VA_ALIST1	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	211;"	d
VA_ALIST2	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	201;"	d
VA_ALIST2	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	212;"	d
VA_ALIST_PROTO1	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	202;"	d
VA_ALIST_PROTO1	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	219;"	d
VA_ALIST_PROTO2	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	203;"	d
VA_ALIST_PROTO2	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	220;"	d
VA_DCL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	204;"	d
VA_DCL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	221;"	d
VA_DEF_ARG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	205;"	d
VA_DEF_ARG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	222;"	d
VA_GET_ARG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	207;"	d
VA_GET_ARG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	224;"	d
VA_START	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	206;"	d
VA_START	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	223;"	d
VDISABLEVAL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	417;"	d
VDISABLEVAL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	419;"	d
VDISABLEVAL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	425;"	d
VERBOSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    VERBOSE,$/;"	e	enum:__anon36
VERBOSE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    VERBOSE__,$/;"	e	enum:__anon12	file:
VERSION	zsh/.zplugin/bin/zmodules/Config/version.mk	/^VERSION=5.3.1-dev-0$/;"	m
VERSION	zsh/.zplugin/plugins/junegunn---fzf/Makefile	/^VERSION        := $(shell awk -F= '\/version =\/ {print $$2}' src\/constants.go | tr -d "\\" ")$/;"	m
VERSION_DATE	zsh/.zplugin/bin/zmodules/Config/version.mk	/^VERSION_DATE='December 22, 2016'$/;"	m
VFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void *(*VFunc) _((void *));$/;"	t
VIMODE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    VIMODE,$/;"	e	enum:__anon36
VIMODE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    VIMODE__,$/;"	e	enum:__anon12	file:
VSIGCOUNT	zsh/.zplugin/bin/zmodules/Src/signals.h	38;"	d
Value	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct value     *Value;$/;"	t	typeref:struct:value
WAITFLAGS	zsh/.zplugin/bin/zmodules/Src/signals.c	453;"	d	file:
WARNCREATEGLOBAL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    WARNCREATEGLOBAL,$/;"	e	enum:__anon36
WARNCREATEGLOBAL__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    WARNCREATEGLOBAL__,$/;"	e	enum:__anon12	file:
WARNNESTEDVAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    WARNNESTEDVAR,$/;"	e	enum:__anon36
WARNNESTEDVAR__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    WARNNESTEDVAR__,$/;"	e	enum:__anon12	file:
WARN_OPTION	zsh/.zplugin/bin/zmodules/Src/init.c	385;"	d	file:
WCB_ARITH	zsh/.zplugin/bin/zmodules/Src/zsh.h	992;"	d
WCB_ASSIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	924;"	d
WCB_AUTOFN	zsh/.zplugin/bin/zmodules/Src/zsh.h	994;"	d
WCB_CASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	978;"	d
WCB_COND	zsh/.zplugin/bin/zmodules/Src/zsh.h	990;"	d
WCB_CURSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	936;"	d
WCB_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	874;"	d
WCB_FOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	951;"	d
WCB_FUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	944;"	d
WCB_IF	zsh/.zplugin/bin/zmodules/Src/zsh.h	986;"	d
WCB_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	881;"	d
WCB_PIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	900;"	d
WCB_REDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	905;"	d
WCB_REPEAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	966;"	d
WCB_SELECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	957;"	d
WCB_SIMPLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	927;"	d
WCB_SUBLIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	893;"	d
WCB_SUBSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	933;"	d
WCB_TIMED	zsh/.zplugin/bin/zmodules/Src/zsh.h	941;"	d
WCB_TRY	zsh/.zplugin/bin/zmodules/Src/zsh.h	969;"	d
WCB_TYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	930;"	d
WCB_WHILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	963;"	d
WCFunc	zsh/.zplugin/bin/zmodules/Src/parse.c	/^typedef struct wcfunc *WCFunc;$/;"	t	typeref:struct:wcfunc	file:
WCHAR_INVALID	zsh/.zplugin/bin/zmodules/Src/pattern.c	241;"	d	file:
WCOREDUMP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	359;"	d
WCOREDUMP	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	378;"	d
WCWIDTH	zsh/.zplugin/bin/zmodules/Src/zsh.h	3228;"	d
WCWIDTH	zsh/.zplugin/bin/zmodules/Src/zsh.h	3230;"	d
WCWIDTH9_ARRAY_SIZE	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	1260;"	d
WCWIDTH9_H	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	2;"	d
WCWIDTH_WINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3241;"	d
WCWIDTH_WINT	zsh/.zplugin/bin/zmodules/Src/zsh.h	3299;"	d
WC_ARITH	zsh/.zplugin/bin/zmodules/Src/zsh.h	867;"	d
WC_ASSIGN	zsh/.zplugin/bin/zmodules/Src/zsh.h	853;"	d
WC_ASSIGN_ARRAY	zsh/.zplugin/bin/zmodules/Src/zsh.h	914;"	d
WC_ASSIGN_INC	zsh/.zplugin/bin/zmodules/Src/zsh.h	922;"	d
WC_ASSIGN_NEW	zsh/.zplugin/bin/zmodules/Src/zsh.h	915;"	d
WC_ASSIGN_NUM	zsh/.zplugin/bin/zmodules/Src/zsh.h	923;"	d
WC_ASSIGN_SCALAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	913;"	d
WC_ASSIGN_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	911;"	d
WC_ASSIGN_TYPE2	zsh/.zplugin/bin/zmodules/Src/zsh.h	912;"	d
WC_AUTOFN	zsh/.zplugin/bin/zmodules/Src/zsh.h	868;"	d
WC_CASE	zsh/.zplugin/bin/zmodules/Src/zsh.h	864;"	d
WC_CASE_AND	zsh/.zplugin/bin/zmodules/Src/zsh.h	974;"	d
WC_CASE_FREE	zsh/.zplugin/bin/zmodules/Src/zsh.h	976;"	d
WC_CASE_HEAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	972;"	d
WC_CASE_OR	zsh/.zplugin/bin/zmodules/Src/zsh.h	973;"	d
WC_CASE_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	977;"	d
WC_CASE_TESTAND	zsh/.zplugin/bin/zmodules/Src/zsh.h	975;"	d
WC_CASE_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	971;"	d
WC_CODEBITS	zsh/.zplugin/bin/zmodules/Src/zsh.h	841;"	d
WC_COND	zsh/.zplugin/bin/zmodules/Src/zsh.h	866;"	d
WC_COND_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	989;"	d
WC_COND_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	988;"	d
WC_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	872;"	d
WC_CURSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	857;"	d
WC_CURSH_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	935;"	d
WC_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	848;"	d
WC_FOR	zsh/.zplugin/bin/zmodules/Src/zsh.h	860;"	d
WC_FOR_COND	zsh/.zplugin/bin/zmodules/Src/zsh.h	949;"	d
WC_FOR_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	948;"	d
WC_FOR_PPARAM	zsh/.zplugin/bin/zmodules/Src/zsh.h	947;"	d
WC_FOR_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	950;"	d
WC_FOR_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	946;"	d
WC_FUNCDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	859;"	d
WC_FUNCDEF_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	943;"	d
WC_IF	zsh/.zplugin/bin/zmodules/Src/zsh.h	865;"	d
WC_IF_ELIF	zsh/.zplugin/bin/zmodules/Src/zsh.h	983;"	d
WC_IF_ELSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	984;"	d
WC_IF_HEAD	zsh/.zplugin/bin/zmodules/Src/zsh.h	981;"	d
WC_IF_IF	zsh/.zplugin/bin/zmodules/Src/zsh.h	982;"	d
WC_IF_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	985;"	d
WC_IF_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	980;"	d
WC_ISPRINT	zsh/.zplugin/bin/zmodules/Src/ztype.h	76;"	d
WC_ISPRINT	zsh/.zplugin/bin/zmodules/Src/ztype.h	78;"	d
WC_ISPRINT	zsh/.zplugin/bin/zmodules/Src/ztype.h	82;"	d
WC_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	849;"	d
WC_LIST_FREE	zsh/.zplugin/bin/zmodules/Src/zsh.h	879;"	d
WC_LIST_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	880;"	d
WC_LIST_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	876;"	d
WC_PIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	851;"	d
WC_PIPE_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	897;"	d
WC_PIPE_LINENO	zsh/.zplugin/bin/zmodules/Src/zsh.h	899;"	d
WC_PIPE_MID	zsh/.zplugin/bin/zmodules/Src/zsh.h	898;"	d
WC_PIPE_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	896;"	d
WC_REDIR	zsh/.zplugin/bin/zmodules/Src/zsh.h	852;"	d
WC_REDIR_FROM_HEREDOC	zsh/.zplugin/bin/zmodules/Src/zsh.h	904;"	d
WC_REDIR_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	902;"	d
WC_REDIR_VARID	zsh/.zplugin/bin/zmodules/Src/zsh.h	903;"	d
WC_REDIR_WORDS	zsh/.zplugin/bin/zmodules/Src/zsh.h	907;"	d
WC_REPEAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	863;"	d
WC_REPEAT_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	965;"	d
WC_SELECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	861;"	d
WC_SELECT_LIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	955;"	d
WC_SELECT_PPARAM	zsh/.zplugin/bin/zmodules/Src/zsh.h	954;"	d
WC_SELECT_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	956;"	d
WC_SELECT_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	953;"	d
WC_SIMPLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	854;"	d
WC_SIMPLE_ARGC	zsh/.zplugin/bin/zmodules/Src/zsh.h	926;"	d
WC_SUBLIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	850;"	d
WC_SUBLIST_AND	zsh/.zplugin/bin/zmodules/Src/zsh.h	885;"	d
WC_SUBLIST_COPROC	zsh/.zplugin/bin/zmodules/Src/zsh.h	888;"	d
WC_SUBLIST_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	884;"	d
WC_SUBLIST_FLAGS	zsh/.zplugin/bin/zmodules/Src/zsh.h	887;"	d
WC_SUBLIST_FREE	zsh/.zplugin/bin/zmodules/Src/zsh.h	891;"	d
WC_SUBLIST_NOT	zsh/.zplugin/bin/zmodules/Src/zsh.h	889;"	d
WC_SUBLIST_OR	zsh/.zplugin/bin/zmodules/Src/zsh.h	886;"	d
WC_SUBLIST_SIMPLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	890;"	d
WC_SUBLIST_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	892;"	d
WC_SUBLIST_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	883;"	d
WC_SUBSH	zsh/.zplugin/bin/zmodules/Src/zsh.h	856;"	d
WC_SUBSH_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	932;"	d
WC_TIMED	zsh/.zplugin/bin/zmodules/Src/zsh.h	858;"	d
WC_TIMED_EMPTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	939;"	d
WC_TIMED_PIPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	940;"	d
WC_TIMED_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	938;"	d
WC_TRY	zsh/.zplugin/bin/zmodules/Src/zsh.h	869;"	d
WC_TRY_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	968;"	d
WC_TYPESET	zsh/.zplugin/bin/zmodules/Src/zsh.h	855;"	d
WC_TYPESET_ARGC	zsh/.zplugin/bin/zmodules/Src/zsh.h	929;"	d
WC_WHILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	862;"	d
WC_WHILE_SKIP	zsh/.zplugin/bin/zmodules/Src/zsh.h	962;"	d
WC_WHILE_TYPE	zsh/.zplugin/bin/zmodules/Src/zsh.h	959;"	d
WC_WHILE_UNTIL	zsh/.zplugin/bin/zmodules/Src/zsh.h	961;"	d
WC_WHILE_WHILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	960;"	d
WC_ZISTYPE	zsh/.zplugin/bin/zmodules/Src/ztype.h	74;"	d
WC_ZISTYPE	zsh/.zplugin/bin/zmodules/Src/ztype.h	81;"	d
WEXITSTATUS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	356;"	d
WEXITSTATUS	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	369;"	d
WHILE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    WHILE,	\/* while     *\/$/;"	e	enum:lextok
WIFEXITED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	355;"	d
WIFEXITED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	366;"	d
WIFSIGNALED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	357;"	d
WIFSIGNALED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	372;"	d
WIFSTOPPED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	360;"	d
WIFSTOPPED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	381;"	d
WRAPDEF	zsh/.zplugin/bin/zmodules/Src/zsh.h	1328;"	d
WRAPF_ADDED	zsh/.zplugin/bin/zmodules/Src/zsh.h	1326;"	d
WSTOPSIG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	361;"	d
WSTOPSIG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	384;"	d
WTERMSIG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	358;"	d
WTERMSIG	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	375;"	d
W_OK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	710;"	d
Wait	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f
WaitFor	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f
Watch	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f
Widechar_array	zsh/.zplugin/bin/zmodules/Src/utils.c	/^typedef struct widechar_array *Widechar_array;$/;"	t	typeref:struct:widechar_array	file:
Width	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f
Width	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f
Window	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^type Window interface {$/;"	t
Wordcode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef wordcode *Wordcode;$/;"	t
WrapFunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int (*WrapFunc) _((Eprog, FuncWrap, char *));$/;"	t
X	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f
X	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f
XTRACE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    XTRACE,$/;"	e	enum:__anon36
XTRACE__	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    XTRACE__,$/;"	e	enum:__anon12	file:
X_OK	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	709;"	d
Y	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f
Y	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f
YYERROR	zsh/.zplugin/bin/zmodules/Src/parse.c	87;"	d	file:
YYERRORV	zsh/.zplugin/bin/zmodules/Src/parse.c	88;"	d	file:
ZCONTEXT_HIST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZCONTEXT_HIST       = (1<<0),$/;"	e	enum:__anon17
ZCONTEXT_LEX	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZCONTEXT_LEX        = (1<<1),$/;"	e	enum:__anon17
ZCONTEXT_PARSE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZCONTEXT_PARSE      = (1<<2)$/;"	e	enum:__anon17
ZEND	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZEND,	\/* end       *\/$/;"	e	enum:lextok
ZISPRINT	zsh/.zplugin/bin/zmodules/Src/ztype.h	86;"	d
ZISPRINT	zsh/.zplugin/bin/zmodules/Src/ztype.h	88;"	d
ZLCON_LINE_CONT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLCON_LINE_CONT,		\/* Command line at PS2 *\/$/;"	e	enum:__anon41
ZLCON_LINE_START	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLCON_LINE_START,		\/* Command line at PS1 *\/$/;"	e	enum:__anon41
ZLCON_SELECT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLCON_SELECT,		\/* Select loop *\/$/;"	e	enum:__anon41
ZLCON_VARED	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLCON_VARED			\/* Vared command *\/$/;"	e	enum:__anon41
ZLE_CMD_ADD_TO_LINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_ADD_TO_LINE,$/;"	e	enum:__anon42
ZLE_CMD_GET_KEY	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_GET_KEY,$/;"	e	enum:__anon42
ZLE_CMD_GET_LINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_GET_LINE,$/;"	e	enum:__anon42
ZLE_CMD_READ	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_READ,$/;"	e	enum:__anon42
ZLE_CMD_REFRESH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_REFRESH,$/;"	e	enum:__anon42
ZLE_CMD_RESET_PROMPT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_RESET_PROMPT,$/;"	e	enum:__anon42
ZLE_CMD_SET_HIST_LINE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_SET_HIST_LINE$/;"	e	enum:__anon42
ZLE_CMD_SET_KEYMAP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_SET_KEYMAP,$/;"	e	enum:__anon42
ZLE_CMD_TRASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZLE_CMD_TRASH,$/;"	e	enum:__anon42
ZLONG_CONST	zsh/.zplugin/bin/zmodules/Src/zsh.h	68;"	d
ZLONG_CONST	zsh/.zplugin/bin/zmodules/Src/zsh.h	72;"	d
ZLONG_CONST	zsh/.zplugin/bin/zmodules/Src/zsh.h	78;"	d
ZLONG_CONST	zsh/.zplugin/bin/zmodules/Src/zsh.h	83;"	d
ZLONG_MAX	zsh/.zplugin/bin/zmodules/Src/zsh.h	40;"	d
ZLONG_MAX	zsh/.zplugin/bin/zmodules/Src/zsh.h	43;"	d
ZLONG_MAX	zsh/.zplugin/bin/zmodules/Src/zsh.h	46;"	d
ZLONG_MAX	zsh/.zplugin/bin/zmodules/Src/zsh.h	57;"	d
ZLRF_HISTORY	zsh/.zplugin/bin/zmodules/Src/zsh.h	3146;"	d
ZLRF_IGNOREEOF	zsh/.zplugin/bin/zmodules/Src/zsh.h	3148;"	d
ZLRF_NOSETTY	zsh/.zplugin/bin/zmodules/Src/zsh.h	3147;"	d
ZMB_INCOMPLETE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZMB_INCOMPLETE,$/;"	e	enum:__anon27
ZMB_INVALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZMB_INVALID$/;"	e	enum:__anon27
ZMB_VALID	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZMB_VALID,$/;"	e	enum:__anon27
ZPC_BAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_BAR,			\/* | for "or" *\/$/;"	e	enum:zpc_chars
ZPC_BNULLKEEP	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_BNULLKEEP,		\/* Special backslashed null not removed *\/$/;"	e	enum:zpc_chars
ZPC_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_COUNT			\/* Number of special chararacters *\/$/;"	e	enum:zpc_chars
ZPC_HASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_HASH,			\/* # for repetition (extended glob) *\/$/;"	e	enum:zpc_chars
ZPC_HAT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_HAT,			\/* ^ for exclusion (extended glob) *\/$/;"	e	enum:zpc_chars
ZPC_INANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_INANG,			\/* < for numeric glob *\/$/;"	e	enum:zpc_chars
ZPC_INBRACK	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_INBRACK,		\/* [ for character class *\/$/;"	e	enum:zpc_chars
ZPC_INPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_INPAR = ZPC_SEG_COUNT,  \/* ( for grouping *\/$/;"	e	enum:zpc_chars
ZPC_KSH_AT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_AT,                 \/* @ for @(...) in KSH_GLOB *\/$/;"	e	enum:zpc_chars
ZPC_KSH_BANG	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_BANG,               \/* ! for !(...) in KSH_GLOB *\/$/;"	e	enum:zpc_chars
ZPC_KSH_BANG2	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_BANG2,              \/* ! for !(...) in KSH_GLOB, untokenised *\/$/;"	e	enum:zpc_chars
ZPC_KSH_PLUS	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_PLUS,               \/* + for +(...) in KSH_GLOB *\/$/;"	e	enum:zpc_chars
ZPC_KSH_QUEST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_QUEST = ZPC_NO_KSH_GLOB, \/* ? for ?(...) in KSH_GLOB *\/$/;"	e	enum:zpc_chars
ZPC_KSH_STAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_KSH_STAR,               \/* * for *(...) in KSH_GLOB *\/$/;"	e	enum:zpc_chars
ZPC_NO_KSH_GLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_NO_KSH_GLOB,$/;"	e	enum:zpc_chars
ZPC_NULL	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_NULL,			\/* \\0 as string terminator *\/$/;"	e	enum:zpc_chars
ZPC_OUTPAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_OUTPAR,			\/* ) for grouping *\/$/;"	e	enum:zpc_chars
ZPC_QUEST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_QUEST,			\/* ? as wildcard *\/$/;"	e	enum:zpc_chars
ZPC_SEG_COUNT	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_SEG_COUNT,              \/* No. of the above characters *\/$/;"	e	enum:zpc_chars
ZPC_SLASH	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_SLASH,			\/* \/ active as file separator *\/$/;"	e	enum:zpc_chars
ZPC_STAR	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_STAR,			\/* * as wildcard *\/$/;"	e	enum:zpc_chars
ZPC_TILDE	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZPC_TILDE,			\/* ~ for exclusion (extended glob) *\/$/;"	e	enum:zpc_chars
ZRANGE_MAX	zsh/.zplugin/bin/zmodules/Src/pattern.c	223;"	d	file:
ZRANGE_MAX	zsh/.zplugin/bin/zmodules/Src/pattern.c	226;"	d	file:
ZRANGE_T_IS_SIGNED	zsh/.zplugin/bin/zmodules/Src/pattern.c	222;"	d	file:
ZSHTOK_SHGLOB	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZSHTOK_SHGLOB = 0x0002$/;"	e	enum:__anon30
ZSHTOK_SUBST	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ZSHTOK_SUBST = 0x0001,$/;"	e	enum:__anon30
ZSH_INITIAL_OPEN_MAX	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	326;"	d
ZSH_PATCHLEVEL	zsh/.zplugin/bin/zmodules/Src/params.c	35;"	d	file:
ZSH_PATCHLEVEL	zsh/.zplugin/bin/zmodules/Src/params.c	43;"	d	file:
ZSIG_ALIAS	zsh/.zplugin/bin/zmodules/Src/zsh.h	2885;"	d
ZSIG_FUNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	2881;"	d
ZSIG_IGNORED	zsh/.zplugin/bin/zmodules/Src/zsh.h	2880;"	d
ZSIG_MASK	zsh/.zplugin/bin/zmodules/Src/zsh.h	2883;"	d
ZSIG_SHIFT	zsh/.zplugin/bin/zmodules/Src/zsh.h	2886;"	d
ZSIG_TRAPPED	zsh/.zplugin/bin/zmodules/Src/zsh.h	2879;"	d
ZTF_BANGCHAR	zsh/.zplugin/bin/zmodules/Src/ztype.h	71;"	d
ZTF_INIT	zsh/.zplugin/bin/zmodules/Src/ztype.h	68;"	d
ZTF_INTERACT	zsh/.zplugin/bin/zmodules/Src/ztype.h	69;"	d
ZTF_SP_COMMA	zsh/.zplugin/bin/zmodules/Src/ztype.h	70;"	d
ZTST_cleanup	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_cleanup() {$/;"	f
ZTST_diff	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_diff() {$/;"	f
ZTST_execchunk	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_execchunk() {$/;"	f
ZTST_getchunk	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_getchunk() {$/;"	f
ZTST_getline	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_getline() {$/;"	f
ZTST_getredir	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_getredir() {$/;"	f
ZTST_getsect	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_getsect() {$/;"	f
ZTST_hashmark	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_hashmark() {$/;"	f
ZTST_prepclean	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_prepclean() {$/;"	f
ZTST_test	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_test() {$/;"	f
ZTST_testfailed	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_testfailed() {$/;"	f
ZTST_verbose	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^ZTST_verbose() {$/;"	f
ZWC	zsh/.zplugin/bin/zmodules/Src/zsh.h	3258;"	d
ZWC	zsh/.zplugin/bin/zmodules/Src/zsh.h	3302;"	d
ZWS	zsh/.zplugin/bin/zmodules/Src/zsh.h	3259;"	d
ZWS	zsh/.zplugin/bin/zmodules/Src/zsh.h	3303;"	d
Z_ASYNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	649;"	d
Z_DISOWN	zsh/.zplugin/bin/zmodules/Src/zsh.h	650;"	d
Z_END	zsh/.zplugin/bin/zmodules/Src/zsh.h	877;"	d
Z_SIMPLE	zsh/.zplugin/bin/zmodules/Src/zsh.h	878;"	d
Z_SYNC	zsh/.zplugin/bin/zmodules/Src/zsh.h	648;"	d
Z_TIMED	zsh/.zplugin/bin/zmodules/Src/zsh.h	647;"	d
ZleEntryPoint	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef char * (*ZleEntryPoint)(int cmd, va_list ap);$/;"	t
Zpc_disables_save	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct zpc_disables_save *Zpc_disables_save;$/;"	t	typeref:struct:zpc_disables_save
_	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	86;"	d
_	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	88;"	d
_GNU_SOURCE	zsh/.zplugin/bin/zmodules/Src/builtin.c	31;"	d	file:
_GNU_SOURCE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	45;"	d
_INCLUDE__STDC_A1_SOURCE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	810;"	d
_POSIX_C_SOURCE	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	48;"	d
_STRPTIME_DONTZERO	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	83;"	d
_XOPEN_SOURCE_EXTENDED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	60;"	d
_XOPEN_SOURCE_EXTENDED	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	68;"	d
__MALLOC_0_RETURNS_NULL	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	181;"	d
__fsel	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_generic_path_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzf_history__() ($/;"	f
__fzf_orig_completion_filter	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^__fzf_orig_completion_filter() {$/;"	f
__fzf_select__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzf_select_tmux__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzf_select_tmux__() {$/;"	f
__fzf_use_tmux__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzf_use_tmux__() {$/;"	f
__fzf_use_tmux__	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.zsh	/^__fzf_use_tmux__() {$/;"	f
__fzfcmd	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	zsh/.zplugin/plugins/junegunn---fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__fzfcmd_complete	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^__fzfcmd_complete() {$/;"	f
__fzfcmd_complete	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^__fzfcmd_complete() {$/;"	f
_ansec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _ansec;$/;"	m	struct:gmatch	file:
_atime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _atime;$/;"	m	struct:gmatch	file:
_cache	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v
_cnsec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _cnsec;$/;"	m	struct:gmatch	file:
_colorToAttribute	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v
_ctime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _ctime;$/;"	m	struct:gmatch	file:
_fzf_compgen_dir	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_export() {$/;"	f
_fzf_complete_export	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_ssh	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_ssh	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_telnet	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unalias	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_complete_unset() {$/;"	f
_fzf_complete_unset	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_defc	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_defc() {$/;"	f
_fzf_dir_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_opts_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	zsh/.zplugin/plugins/junegunn---fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_links	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _links;$/;"	m	struct:gmatch	file:
_mnsec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _mnsec;$/;"	m	struct:gmatch	file:
_mtime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long _mtime;$/;"	m	struct:gmatch	file:
_patternCache	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v
_runeWidths	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^var _runeWidths = make(map[rune]int)$/;"	v
_screen	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^	_screen tcell.Screen$/;"	v
_spinner	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^var _spinner = []string{`-`, `\\`, `|`, `\/`, `-`, `\\`, `|`, `\/`}$/;"	v
_splitRegex	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v
_zsh_autosuggest_accept	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_async_request	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_response	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_bind_widget	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_clear	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_disable	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_enable	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_escape_command	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/util.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_execute	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_fetch	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch_suggestion	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/fetch.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_fetch_suggestion	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_incr_bind_count	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_modify	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_partial_accept	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_start	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_strategy_history	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/strategies/history.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_history	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_suggest	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_toggle	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_highlight	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight_apply_zle_highlight	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_bind_widgets	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_buffer_modified	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_call_widget	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_cursor_moved	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_preexec_hook	zsh/.zplugin/plugins/zdharma---fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
a	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	GsuArray a;$/;"	m	union:param::__anon29
a:temps	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let a:temps.shellscript = shellscript$/;"	v
ac_fn_c_check_decl	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	zsh/.zplugin/bin/zmodules/configure	/^ac_fn_c_try_run ()$/;"	f
acquire_pgrp	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^acquire_pgrp(void)$/;"	f
actAbort	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actAbort$/;"	c
actAccept	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actAccept$/;"	c
actAcceptNonEmpty	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c
actBackwardChar	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actBackwardChar$/;"	c
actBackwardDeleteChar	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c
actBackwardKillWord	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c
actBackwardWord	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actBackwardWord$/;"	c
actBeginningOfLine	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c
actCancel	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actCancel$/;"	c
actClearScreen	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actClearScreen$/;"	c
actDeleteChar	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actDeleteChar$/;"	c
actDeleteCharEOF	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c
actDeselectAll	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actDeselectAll$/;"	c
actDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actDown$/;"	c
actEndOfLine	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actEndOfLine$/;"	c
actExecute	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actExecute$/;"	c
actExecuteMulti	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c
actExecuteSilent	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actExecuteSilent$/;"	c
actForwardChar	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actForwardChar$/;"	c
actForwardWord	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actForwardWord$/;"	c
actHalfPageDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actHalfPageDown$/;"	c
actHalfPageUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actHalfPageUp$/;"	c
actIgnore	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c
actInvalid	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actInvalid$/;"	c
actJump	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actJump$/;"	c
actJumpAccept	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actJumpAccept$/;"	c
actKillLine	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actKillLine$/;"	c
actKillWord	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actKillWord$/;"	c
actMouse	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actMouse$/;"	c
actNextHistory	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actNextHistory$/;"	c
actPageDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPageDown$/;"	c
actPageUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPageUp$/;"	c
actPreviewDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPreviewDown$/;"	c
actPreviewPageDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c
actPreviewPageUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c
actPreviewUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPreviewUp$/;"	c
actPreviousHistory	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPreviousHistory$/;"	c
actPrintQuery	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actPrintQuery$/;"	c
actReplaceQuery	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actReplaceQuery$/;"	c
actRune	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actRune$/;"	c
actSelectAll	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actSelectAll$/;"	c
actSigStop	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actSigStop$/;"	c
actToggle	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggle$/;"	c
actToggleAll	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleAll$/;"	c
actToggleDown	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleDown$/;"	c
actToggleIn	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleIn$/;"	c
actToggleOut	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleOut$/;"	c
actTogglePreview	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actTogglePreview$/;"	c
actTogglePreviewWrap	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c
actToggleSort	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleSort$/;"	c
actToggleUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actToggleUp$/;"	c
actTop	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actTop$/;"	c
actUnixLineDiscard	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c
actUnixWordRubout	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c
actUp	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actUp$/;"	c
actYank	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	actYank$/;"	c
action	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type action struct {$/;"	t
actionType	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type actionType int$/;"	t
add	zsh/.zplugin/bin/zmodules/Src/lex.c	/^add(int c)$/;"	f
add_autobin	zsh/.zplugin/bin/zmodules/Src/module.c	/^add_autobin(const char *module, const char *bnam, int flags)$/;"	f	file:
add_autocond	zsh/.zplugin/bin/zmodules/Src/module.c	/^add_autocond(const char *module, const char *cnam, int flags)$/;"	f	file:
add_autoload_function	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^add_autoload_function(Shfunc shf, char *funcname)$/;"	f	file:
add_automathfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^add_automathfunc(const char *module, const char *fnam, int flags)$/;"	f	file:
add_autoparam	zsh/.zplugin/bin/zmodules/Src/module.c	/^add_autoparam(const char *module, const char *pnam, int flags)$/;"	f	file:
add_dep	zsh/.zplugin/bin/zmodules/Src/module.c	/^add_dep(const char *name, char *from)$/;"	f
addbgstatus	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^addbgstatus(pid_t pid, int status)$/;"	f
addbufspc	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^addbufspc(int need)$/;"	f	file:
addbuiltin	zsh/.zplugin/bin/zmodules/Src/module.c	/^addbuiltin(Builtin b)$/;"	f	file:
addbuiltins	zsh/.zplugin/bin/zmodules/Src/module.c	/^addbuiltins(char const *nam, Builtin binl, int size)$/;"	f
addconddef	zsh/.zplugin/bin/zmodules/Src/module.c	/^addconddef(Conddef c)$/;"	f	file:
addedx	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int addedx;$/;"	v
addenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^addenv(Param pm, char *value)$/;"	f
addfd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^addfd(int forked, int *save, struct multio **mfds, int fd1, int fd2, int rflag,$/;"	f	file:
addfilelist	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^addfilelist(const char *name, int fd)$/;"	f
addhashnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^addhashnode(HashTable ht, char *nam, void *nodeptr)$/;"	f
addhashnode2	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^addhashnode2(HashTable ht, char *nam, void *nodeptr)$/;"	f
addhistnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^addhistnode(HashTable ht, char *nam, void *nodeptr)$/;"	f
addhookdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^addhookdef(Hookdef h)$/;"	f
addhookdeffunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^addhookdeffunc(Hookdef h, Hookfn f)$/;"	f
addhookdefs	zsh/.zplugin/bin/zmodules/Src/module.c	/^addhookdefs(Module m, Hookdef h, int size)$/;"	f
addhookfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^addhookfunc(char *n, Hookfn f)$/;"	f
addlinknode	zsh/.zplugin/bin/zmodules/Src/zsh.h	582;"	d
addlockfd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^addlockfd(int fd, int cloexec)$/;"	f
addmathfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^addmathfunc(MathFunc f)$/;"	f	file:
addmodulefd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^addmodulefd(int fd, int fdt)$/;"	f
addnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    AddNodeFunc addnode;	\/* pointer to function to add new node        *\/$/;"	m	struct:hashtable
addparamdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^addparamdef(Paramdef d)$/;"	f
addpath	zsh/.zplugin/bin/zmodules/Src/glob.c	/^addpath(char *s, int l)$/;"	f	file:
addprepromptfn	zsh/.zplugin/bin/zmodules/Src/utils.c	/^addprepromptfn(voidvoidfnptr_t func)$/;"	f
addproc	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^addproc(pid_t pid, char *text, int aux, struct timeval *bgtime)$/;"	f
addr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode addr;		\/* mapped region *\/$/;"	m	struct:funcdump
addtimedfn	zsh/.zplugin/bin/zmodules/Src/utils.c	/^addtimedfn(voidvoidfnptr_t func, time_t when)$/;"	f
addtoline	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*addtoline) _((int));$/;"	m	struct:hist_stack
addunprintable	zsh/.zplugin/bin/zmodules/Src/utils.c	/^addunprintable(char *v, const char *u, const char *uend)$/;"	f	file:
adduserdir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^adduserdir(char *s, char *t, int flags, int always)$/;"	f
addvars	zsh/.zplugin/bin/zmodules/Src/exec.c	/^addvars(Estate state, Wordcode pc, int addflags)$/;"	f	file:
addwrapper	zsh/.zplugin/bin/zmodules/Src/module.c	/^addwrapper(Module m, FuncWrap w)$/;"	f
adjustcolumns	zsh/.zplugin/bin/zmodules/Src/utils.c	/^adjustcolumns(int signalled)$/;"	f	file:
adjustlines	zsh/.zplugin/bin/zmodules/Src/utils.c	/^adjustlines(int signalled)$/;"	f	file:
adjustwinsize	zsh/.zplugin/bin/zmodules/Src/utils.c	/^adjustwinsize(int from)$/;"	f
algo	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^package algo$/;"	p
algo	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	zsh/.zplugin/plugins/junegunn---fzf/src/algo/normalize.go	/^package algo$/;"	p
alias	zsh/.zplugin/bin/zmodules/Src/input.c	/^    Alias alias;$/;"	m	struct:instacks	file:
alias	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char *alias;$/;"	m	union:module::__anon26
alias	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct alias {$/;"	s
aliasspaceflag	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int aliasspaceflag;$/;"	v
aliasspaceflag	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int aliasspaceflag;$/;"	m	struct:parse_stack
aliastab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export HashTable aliastab;$/;"	v
alloc16	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f
alloc32	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f
alloca	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	92;"	d
alloca	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	95;"	d
allocate_colour_buffer	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^allocate_colour_buffer(void)$/;"	f
alloced	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *alloced;		\/* Allocated string, may be NULL *\/$/;"	m	struct:patstralloc
alt_sigs	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^} alt_sigs[] = {$/;"	v	typeref:struct:__anon6	file:
amc	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int amc;			\/* Flag for which time to test (a, m, c)     *\/$/;"	m	struct:qual	file:
ansec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long ansec;$/;"	m	struct:gmatch	file:
ansiOffset	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^type ansiOffset struct {$/;"	t
ansiRegex	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^var ansiRegex *regexp.Regexp$/;"	v
ansiState	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^type ansiState struct {$/;"	t
ansi_colours	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static const char *ansi_colours[] = {$/;"	v	file:
any_include?	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	class:Tmux.until
aoffs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    wordcode offs, aoffs;$/;"	m	struct:eccstr
append	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f
append_line	zsh/.zplugin/plugins/junegunn---fzf/install	/^append_line() {$/;"	f
appstr	zsh/.zplugin/bin/zmodules/Src/string.c	/^appstr(char *base, char const *append)$/;"	f
arena	zsh/.zplugin/bin/zmodules/Src/zsh.h	2841;"	d
argc_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer argc_gsu =$/;"	v	typeref:struct:gsu_integer	file:
args	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_dep(UNUSED(char *nam), char **args, Options ops)$/;"	v	file:
args	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_exist(UNUSED(char *nam), char **args, Options ops)$/;"	v	file:
args	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList args;		\/* All command prefixes, arguments & options *\/$/;"	m	struct:execcmd_params
args	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char **args;$/;"	m	struct:options
argsalloc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int argscount, argsalloc;$/;"	m	struct:options
argscount	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int argscount, argsalloc;$/;"	m	struct:options
argv	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_dirs(UNUSED(char *name), char **argv, Options ops, UNUSED(int func))$/;"	v
argv	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_eval(UNUSED(char *nam), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	v
argv	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_getopts(UNUSED(char *name), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	v
argv	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_let(UNUSED(char *name), char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	v
argv0	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    char *argv0;$/;"	m	struct:funcsave	file:
argvparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^static Param argvparam;$/;"	v	file:
argvparam_pm	zsh/.zplugin/bin/zmodules/Src/params.c	/^static initparam argvparam_pm = IPDEF9F("", &pparams, NULL, \\$/;"	v	file:
argzero	zsh/.zplugin/bin/zmodules/Src/params.c	/^char *argzero,		\/* $0           *\/$/;"	v
argzero_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar argzero_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
arr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char **arr;		\/* value if declared array   (PM_ARRAY)   *\/$/;"	m	union:param::__anon28
arr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char **arr;		\/* cache for hash turned into array *\/$/;"	m	struct:value
array	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	LinkList array;$/;"	m	union:asgment::__anon21
array	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Groupmap array;$/;"	m	struct:__anon35
arrayuniq	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrayuniq(char **x, int freeok)$/;"	f	file:
arrayuniq_freenode	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrayuniq_freenode(HashNode hn)$/;"	f	file:
arrdup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrdup(char **s)$/;"	f
arrdup_max	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrdup_max(char **s, unsigned max)$/;"	f
arrfixenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrfixenv(char *s, char **t)$/;"	f
arrgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrgetfn(Param pm)$/;"	f
arrhashsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrhashsetfn(Param pm, char **val, int flags)$/;"	f	file:
arrlen	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrlen(char **s)$/;"	f
arrlen_ge	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrlen_ge(char **s, unsigned lower_bound)$/;"	f
arrlen_gt	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrlen_gt(char **s, unsigned lower_bound)$/;"	f
arrlen_le	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrlen_le(char **s, unsigned upper_bound)$/;"	f
arrlen_lt	zsh/.zplugin/bin/zmodules/Src/utils.c	/^arrlen_lt(char **s, unsigned upper_bound)$/;"	f
arrptr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char ***arrptr;		\/* pointer to corresponding array *\/$/;"	m	struct:tieddata
arrsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrsetfn(Param pm, char **x)$/;"	f
arrvargetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrvargetfn(Param pm)$/;"	f
arrvarsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^arrvarsetfn(Param pm, char **x)$/;"	f
as_fn_append	zsh/.zplugin/bin/zmodules/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	zsh/.zplugin/bin/zmodules/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	zsh/.zplugin/bin/zmodules/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	zsh/.zplugin/bin/zmodules/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	zsh/.zplugin/bin/zmodules/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	zsh/.zplugin/bin/zmodules/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	zsh/.zplugin/bin/zmodules/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	zsh/.zplugin/bin/zmodules/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	zsh/.zplugin/bin/zmodules/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	zsh/.zplugin/bin/zmodules/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	zsh/.zplugin/bin/zmodules/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	zsh/.zplugin/bin/zmodules/configure	/^as_fn_unset ()$/;"	f
asciiFuzzyIndex	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f
asgment	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct asgment {$/;"	s
ask	zsh/.zplugin/plugins/junegunn---fzf/install	/^ask() {$/;"	f
ask	zsh/.zplugin/plugins/junegunn---fzf/uninstall	/^ask() {$/;"	f
assert	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f
assertMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
assertMatch2	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern string, sidx int, eidx int, score int) {$/;"	f
assignaparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^assignaparam(char *s, char **val, int flags)$/;"	f
assigngetset	zsh/.zplugin/bin/zmodules/Src/params.c	/^assigngetset(Param pm)$/;"	f
assigniparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^assigniparam(char *s, zlong val, int flags)$/;"	f
assignnparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^assignnparam(char *s, mnumber val, int flags)$/;"	f
assignsparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^assignsparam(char *s, char *val, int flags)$/;"	f
assignspc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode assignspc;		\/* The code for assignment parsed as typeset *\/$/;"	m	struct:execcmd_params
assignstrvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^assignstrvalue(Value v, char *val, int flags)$/;"	f
atime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long atime;$/;"	m	struct:gmatch	file:
atof	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func atof(str string) float64 {$/;"	f
atoi	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func atoi(str string) int {$/;"	f
atoi	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f
attach!	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def attach!$/;"	f	class:TerminalSession
attachtty	zsh/.zplugin/bin/zmodules/Src/utils.c	/^attachtty(pid_t pgrp)$/;"	f
attrCodes	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f
attrFor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func attrFor(color ColorPair, attr Attr) Attr {$/;"	f
autofeaturefn_t	zsh/.zplugin/bin/zmodules/Src/module.c	/^typedef int (*autofeaturefn_t)(const char *module, const char *feature,$/;"	t	file:
autofeatures	zsh/.zplugin/bin/zmodules/Src/module.c	/^autofeatures(const char *cmdnam, const char *module, char **features,$/;"	f
autoloads	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList autoloads;$/;"	m	struct:module
autoloadscan	zsh/.zplugin/bin/zmodules/Src/module.c	/^autoloadscan(HashNode hn, int printflags)$/;"	f	file:
auxprocs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct process *auxprocs;	\/* auxiliary processes e.g multios   *\/$/;"	m	struct:job	typeref:struct:job::process
awkBlack	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^	awkBlack$/;"	c
awkNil	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c
awkTokenizer	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f
awkWhite	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^	awkWhite$/;"	c
b	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int b, e;			\/* beginning and end of chunk to replace *\/$/;"	m	struct:repldata
badcshglob	zsh/.zplugin/bin/zmodules/Src/glob.c	/^int badcshglob;$/;"	v
badcshglob	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int badcshglob;$/;"	m	struct:execstack
bangchar	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export unsigned char bangchar;$/;"	v
base	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int base;			\/* output base                           *\/$/;"	m	struct:iparam	file:
base	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int base;			\/* output base or floating point prec    *\/$/;"	m	struct:param
bash	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^    def bash$/;"	f	class:Shell
basicMatch	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f
beg	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode beg;		\/* The code at the start of the command *\/$/;"	m	struct:execcmd_params
best	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static char *guess, *best;$/;"	v	file:
bgstatus	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^struct bgstatus {$/;"	s	file:
bgstatus_count	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static long bgstatus_count;$/;"	v	file:
bgstatus_list	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static LinkList bgstatus_list;$/;"	v	file:
bgtime	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct timeval bgtime;	\/* time job was spawned             *\/$/;"	m	struct:process	typeref:struct:process::timeval
bicat	zsh/.zplugin/bin/zmodules/Src/string.c	/^bicat(const char *s1, const char *s2)$/;"	f
bin_alias	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_alias(char *name, char **argv, Options ops, UNUSED(int func))$/;"	f
bin_break	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_break(char *name, char **argv, UNUSED(Options ops), int func)$/;"	f
bin_cd	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_cd(char *nam, char **argv, Options ops, int func)$/;"	f
bin_custom_dot	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^bin_custom_dot(char *name, char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_dot	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_dot(char *name, char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_emulate	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_emulate(char *nam, char **argv, Options ops, UNUSED(int func))$/;"	f
bin_enable	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_enable(char *name, char **argv, Options ops, int func)$/;"	f
bin_fc	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_fc(char *nam, char **argv, Options ops, int func)$/;"	f
bin_fg	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^bin_fg(char *name, char **argv, Options ops, int func)$/;"	f
bin_functions	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_functions(char *name, char **argv, Options ops, int func)$/;"	f
bin_hash	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_hash(char *name, char **argv, Options ops, UNUSED(int func))$/;"	f
bin_kill	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^bin_kill(char *nam, char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_mem	zsh/.zplugin/bin/zmodules/Src/mem.c	/^bin_mem(char *name, char **argv, Options ops, int func)$/;"	f
bin_notavail	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_notavail(char *nam, UNUSED(char **argv), UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_print	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_print(char *name, char **args, Options ops, int func)$/;"	f
bin_read	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_read(char *name, char **args, Options ops, UNUSED(int func))$/;"	f
bin_readarray	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^int bin_readarray( char *nam, char **argv, UNUSED( Options ops ), UNUSED( int func ) ) {$/;"	f
bin_set	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_set(char *nam, char **args, UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_setopt	zsh/.zplugin/bin/zmodules/Src/options.c	/^bin_setopt(char *nam, char **args, UNUSED(Options ops), int isun)$/;"	f
bin_shift	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_shift(char *name, char **argv, Options ops, UNUSED(int func))$/;"	f
bin_suspend	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^bin_suspend(char *name, UNUSED(char **argv), Options ops, UNUSED(int func))$/;"	f
bin_test	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_test(char *name, char **argv, UNUSED(Options ops), int func)$/;"	f
bin_trap	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_trap(char *name, char **argv, UNUSED(Options ops), UNUSED(int func))$/;"	f
bin_typeset	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_typeset(char *name, char **argv, LinkList assigns, Options ops, int func)$/;"	f
bin_umask	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_umask(char *nam, char **args, Options ops, UNUSED(int func))$/;"	f
bin_unhash	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_unhash(char *name, char **argv, Options ops, int func)$/;"	f
bin_unset	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_unset(char *name, char **argv, Options ops, int func)$/;"	f
bin_whence	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_whence(char *nam, char **argv, Options ops, int func)$/;"	f
bin_zcompile	zsh/.zplugin/bin/zmodules/Src/parse.c	/^bin_zcompile(char *nam, char **args, Options ops, UNUSED(int func))$/;"	f
bin_zmodload	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload(char *nam, char **args, Options ops, UNUSED(int func))$/;"	f
bin_zmodload_alias	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_alias(char *nam, char **args, Options ops)$/;"	f	file:
bin_zmodload_auto	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_auto(char *nam, char **args, Options ops)$/;"	f	file:
bin_zmodload_features	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_features(const char *nam, char **args, Options ops)$/;"	f	file:
bin_zmodload_load	zsh/.zplugin/bin/zmodules/Src/module.c	/^bin_zmodload_load(char *nam, char **args, Options ops)$/;"	f	file:
bin_zpmod	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^bin_zpmod( char *nam, char **argv, UNUSED( Options ops ), UNUSED( int func ) ) {$/;"	f	file:
binflag	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int binflag;	\/* The relevant PM_FLAG(S) *\/$/;"	m	struct:paramtypes	file:
bintab	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static struct builtin bintab[] =$/;"	v	typeref:struct:builtin	file:
blank_env	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static char *blank_env[] = { NULL };$/;"	v	file:
bld_eprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^bld_eprog(int heap)$/;"	f	file:
blocked_set	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static sigset_t blocked_set;$/;"	v	file:
bn_list	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Builtin bn_list;$/;"	m	struct:features
bn_size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int bn_size;$/;"	m	struct:features
bnam	zsh/.zplugin/bin/zmodules/Src/module.c	/^del_autobin(UNUSED(const char *module), const char *bnam, int flags)$/;"	v	file:
bonusAt	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f
bonusBoundary	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c
bonusCamel123	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtention$/;"	c
bonusConsecutive	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtention)$/;"	c
bonusFirstCharMultiplier	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c
bonusFor	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f
bonusNonWord	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c
boot	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_void_func boot;$/;"	m	struct:linkedmod
boot_	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^boot_( Module m )$/;"	f
boot_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^boot_module(Module m)$/;"	f	file:
bp	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *bp;$/;"	m	struct:buf_vars	file:
bp1	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *bp1;$/;"	m	struct:buf_vars	file:
bracechardots	zsh/.zplugin/bin/zmodules/Src/glob.c	/^bracechardots(char *str, convchar_t *c1p, convchar_t *c2p)$/;"	f	file:
breaks	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
breaks	zsh/.zplugin/bin/zmodules/Src/loop.c	/^mod_export int breaks;$/;"	v
bshin	zsh/.zplugin/bin/zmodules/Src/input.c	/^FILE *bshin;$/;"	v
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualdev(UNUSED(char *name), struct stat *buf, off_t dv, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualgid(UNUSED(char *name), struct stat *buf, off_t gid, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisblk(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualischr(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualiscom(UNUSED(char *name), struct stat *buf, UNUSED(off_t mod), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisdev(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisdir(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisfifo(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualislnk(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualisreg(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualissock(UNUSED(char *name), struct stat *buf, UNUSED(off_t junk), UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualmodeflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualnlink(UNUSED(char *name), struct stat *buf, off_t ct, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualsize(UNUSED(char *name), struct stat *buf, off_t size, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualtime(UNUSED(char *name), struct stat *buf, off_t days, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualuid(UNUSED(char *name), struct stat *buf, off_t uid, UNUSED(char *dummy))$/;"	v	typeref:struct:stat	file:
buf	zsh/.zplugin/bin/zmodules/Src/input.c	/^    char *buf, *bufptr;$/;"	m	struct:instacks	file:
buf	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *buf;$/;"	m	struct:buf_vars	file:
buf_vars	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^struct buf_vars {$/;"	s	file:
bufct	zsh/.zplugin/bin/zmodules/Src/input.c	/^    int bufleft, bufct, flags;$/;"	m	struct:instacks	file:
bufleft	zsh/.zplugin/bin/zmodules/Src/input.c	/^    int bufleft, bufct, flags;$/;"	m	struct:instacks	file:
bufline	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *bufline;$/;"	m	struct:buf_vars	file:
bufptr	zsh/.zplugin/bin/zmodules/Src/input.c	/^    char *buf, *bufptr;$/;"	m	struct:instacks	file:
bufspc	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int bufspc;$/;"	m	struct:buf_vars	file:
bufstack	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mod_export LinkList bufstack;$/;"	v
buildCacheKey	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f
buildLists	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f
buildPlusList	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f
buildResult	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f
build_cur_dump	zsh/.zplugin/bin/zmodules/Src/parse.c	/^build_cur_dump(char *nam, char *dump, char **names, int match, int map,$/;"	f	file:
build_dump	zsh/.zplugin/bin/zmodules/Src/parse.c	/^build_dump(char *nam, char *dump, char **files, int ali, int map, int flags)$/;"	f	file:
builtin	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct builtin {$/;"	s
builtins	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static struct builtin builtins[] =$/;"	v	typeref:struct:builtin	file:
builtintab	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mod_export HashTable builtintab;$/;"	v
bv	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static Buf_vars bv;$/;"	v	file:
byBegin	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	byBegin$/;"	c
byEnd	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	byEnd$/;"	c
byLength	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	byLength$/;"	c
byScore	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	byScore criterion = iota$/;"	c
byTimeOrder	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t
cacheable	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f
cached_uid	zsh/.zplugin/bin/zmodules/Src/utils.c	/^uid_t cached_uid;$/;"	v
cached_username	zsh/.zplugin/bin/zmodules/Src/utils.c	/^char *cached_username;$/;"	v
calc_size	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
calculateScore	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx int, eidx int, withPos bool) (int, *[]int) {$/;"	f
calculateSize	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, margin int, minSize int) int {$/;"	f
callback	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
caller	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *caller;		\/* name of caller *\/$/;"	m	struct:funcstack
callhookfunc	zsh/.zplugin/bin/zmodules/Src/utils.c	/^callhookfunc(char *name, LinkList lnklst, int arrayp, int *retval)$/;"	f
calloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^calloc(MALLOC_ARG_T n, MALLOC_ARG_T size)$/;"	f
cancd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^cancd(char *s)$/;"	f	file:
cancd2	zsh/.zplugin/bin/zmodules/Src/exec.c	/^cancd2(char *s)$/;"	f	file:
cancelPreview	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f
capture	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def capture(pane = 0)$/;"	f	class:Tmux
category	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int category;$/;"	m	struct:localename	file:
cd_able_vars	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^cd_able_vars(char *s)$/;"	f
cd_do_chdir	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^cd_do_chdir(char *cnam, char *dest, int hard)$/;"	f	file:
cd_get_dest	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^cd_get_dest(char *nam, char **argv, int hard, int func)$/;"	f	file:
cd_list	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Conddef cd_list;$/;"	m	struct:features
cd_new_pwd	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^cd_new_pwd(int func, LinkNode dir, int quiet)$/;"	f	file:
cd_size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int cd_size;$/;"	m	struct:features
cd_try_chdir	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^cd_try_chdir(char *pfix, char *dest, int hard)$/;"	f	file:
cdpath	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **cdpath,		\/* $cdpath      *\/$/;"	v
charClass	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^type charClass int$/;"	t
charClassOf	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f
charClassOfAscii	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f
charClassOfNonAscii	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f
charLetter	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	charLetter$/;"	c
charLower	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	charLower$/;"	c
charNonWord	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c
charNumber	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	charNumber$/;"	c
charUpper	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	charUpper$/;"	c
charlenconv	zsh/.zplugin/bin/zmodules/Src/utils.c	/^charlenconv(const char *x, int len, int *c)$/;"	f
charnext	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^charnext(char *x, char *y)$/;"	f	file:
charref	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^charref(char *x, char *y, int *zmb_ind)$/;"	f	file:
charrefinc	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^charrefinc(char **x, char *y, int *z)$/;"	f	file:
chars	zsh/.zplugin/bin/zmodules/Src/utils.c	/^    wchar_t *chars;$/;"	m	struct:widechar_array	file:
charsub	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^charsub(char *x, char *y)$/;"	f	file:
chasinglinks	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static int chasinglinks;$/;"	v	file:
checkAscii	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f
check_autoload	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^check_autoload(Shfunc shf, char *name, Options ops, int func)$/;"	f	file:
check_binary	zsh/.zplugin/plugins/junegunn---fzf/install	/^check_binary() {$/;"	f
check_cond	zsh/.zplugin/bin/zmodules/Src/parse.c	/^static int check_cond(const char *input, const char *cond)$/;"	f	file:
check_cursh_sig	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^check_cursh_sig(int sig)$/;"	f
check_dump_file	zsh/.zplugin/bin/zmodules/Src/parse.c	/^check_dump_file(char *file, struct stat *sbuf, char *name, int *ksh,$/;"	f	file:
check_fd_table	zsh/.zplugin/bin/zmodules/Src/utils.c	/^check_fd_table(int fd)$/;"	f	file:
check_for_signals	zsh/.zplugin/bin/zmodules/Src/pattern.c	2688;"	d	file:
check_warn_pm	zsh/.zplugin/bin/zmodules/Src/params.c	/^check_warn_pm(Param pm, const char *pmtype, int created,$/;"	f	file:
checkaddparam	zsh/.zplugin/bin/zmodules/Src/module.c	/^checkaddparam(const char *nam, int opt_i)$/;"	f	file:
checkalias	zsh/.zplugin/bin/zmodules/Src/lex.c	/^checkalias(void)$/;"	f	file:
checkclobberparam	zsh/.zplugin/bin/zmodules/Src/exec.c	/^checkclobberparam(struct redir *f)$/;"	f	file:
checkglobqual	zsh/.zplugin/bin/zmodules/Src/glob.c	/^checkglobqual(char *str, int sl, int nobareglob, char **sp)$/;"	f
checkjobs	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^checkjobs(void)$/;"	f	file:
checkmailpath	zsh/.zplugin/bin/zmodules/Src/utils.c	/^checkmailpath(char **s)$/;"	f	file:
checkrmall	zsh/.zplugin/bin/zmodules/Src/utils.c	/^checkrmall(char *s)$/;"	f
child_block	zsh/.zplugin/bin/zmodules/Src/signals.h	59;"	d
child_times_t	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct rusage child_times_t;$/;"	t	typeref:struct:rusage
child_times_t	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef struct timeinfo child_times_t;$/;"	t	typeref:struct:timeinfo
child_unblock	zsh/.zplugin/bin/zmodules/Src/signals.h	60;"	d
child_usage	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static struct rusage child_usage;$/;"	v	typeref:struct:rusage	file:
chuck	zsh/.zplugin/bin/zmodules/Src/utils.c	/^chuck(char *str)$/;"	f
chunkSize	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	chunkSize int = 100$/;"	c
chwordlen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int chwordlen;$/;"	m	struct:hist_stack
chwordpos	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int chwordpos;$/;"	m	struct:hist_stack
chwords	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    short *chwords;$/;"	m	struct:hist_stack
cleanse	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f
cleanup	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_void_func cleanup;$/;"	m	struct:linkedmod
cleanup	zsh/.zplugin/plugins/junegunn---fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
cleanup_	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^cleanup_( Module m )$/;"	f
cleanup_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^cleanup_module(Module m)$/;"	f	file:
clearChunkCache	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f
clearPatternCache	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f
clear_hdocs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^clear_hdocs(void)$/;"	f	file:
clear_screen	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def clear_screen$/;"	f	class:TerminalSession
clearjobtab	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^clearjobtab(int monitor)$/;"	f
clearpatterndisables	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^clearpatterndisables(void)$/;"	f
clobber_open	zsh/.zplugin/bin/zmodules/Src/exec.c	/^clobber_open(struct redir *f)$/;"	f	file:
closeallelse	zsh/.zplugin/bin/zmodules/Src/exec.c	/^closeallelse(struct multio *mn)$/;"	f	file:
closedumps	zsh/.zplugin/bin/zmodules/Src/parse.c	/^closedumps(void)$/;"	f
closem	zsh/.zplugin/bin/zmodules/Src/exec.c	/^closem(int how, int all)$/;"	f
closemn	zsh/.zplugin/bin/zmodules/Src/exec.c	/^closemn(struct multio **mfds, int fd, int type)$/;"	f	file:
closemnodes	zsh/.zplugin/bin/zmodules/Src/exec.c	/^closemnodes(struct multio **mfds)$/;"	f	file:
closure	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int closure;		\/* 1 if this is a (foo\/)# *\/$/;"	m	struct:complist	file:
cmd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char *cmd;		\/* file name for hashed commands       *\/$/;"	m	union:cmdnam::__anon23
cmd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^      let cmd = 'start \/wait cmd \/c '.command$/;"	v
cmd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
cmd	zsh/.zplugin/plugins/zsh-users---zsh-completions/src/_setup.py	/^    cmd="${${_setuppy_cmds[(r)$words[1]:*]%%:*}:-${(k)_setuppy_syns[(r)(*:|)$words[1](:*|)]}}"$/;"	v
cmd_or_math	zsh/.zplugin/bin/zmodules/Src/lex.c	/^cmd_or_math(int cs_type)$/;"	f	file:
cmd_or_math_sub	zsh/.zplugin/bin/zmodules/Src/lex.c	/^cmd_or_math_sub(void)$/;"	f	file:
cmdnam	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct cmdnam {$/;"	s
cmdnames	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static char *cmdnames[CS_COUNT] = {$/;"	v	file:
cmdnamtab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export HashTable cmdnamtab;$/;"	v
cmdoutpid	zsh/.zplugin/bin/zmodules/Src/exec.c	/^pid_t cmdoutpid;$/;"	v
cmdoutpid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t cmdoutpid;$/;"	m	struct:execstack
cmdoutval	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int cmdoutval;$/;"	v
cmdoutval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int cmdoutval;$/;"	m	struct:execstack
cmdpop	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^cmdpop(void)$/;"	f
cmdpush	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^cmdpush(int cmdtok)$/;"	f
cmdsp	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^int cmdsp;$/;"	v
cmdstack	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^unsigned char *cmdstack;$/;"	v
cmp	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    const char *cmp;$/;"	m	struct:sortelt
cmpnodes	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CompareFunc cmpnodes;	\/* pointer to function to compare two nodes     *\/$/;"	m	struct:hashtable
cnam	zsh/.zplugin/bin/zmodules/Src/module.c	/^del_autocond(UNUSED(const char *modnam), const char *cnam, int flags)$/;"	v	file:
cnsec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long cnsec;$/;"	m	struct:gmatch	file:
colBlack	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c
colBlue	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colBlue$/;"	c
colCyan	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colCyan$/;"	c
colDefault	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colDefault         = -1$/;"	c
colGreen	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colGreen$/;"	c
colMagenta	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colMagenta$/;"	c
colRed	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colRed$/;"	c
colUndefined	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c
colWhite	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colWhite$/;"	c
colYellow	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	colYellow$/;"	c
collect	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
colon_stuffs	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static const char *colon_stuffs[]  = {$/;"	v	file:
colonarr_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar colonarr_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
colonarrgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^colonarrgetfn(Param pm)$/;"	f
colonarrsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^colonarrsetfn(Param pm, char *x)$/;"	f
colonmod	zsh/.zplugin/bin/zmodules/Src/glob.c	205;"	d	file:
colonsplit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^colonsplit(char *s, int uniq)$/;"	f
colorCodes	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f
colorOffset	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^type colorOffset struct {$/;"	t
colorOffsets	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, color tui.ColorPair, attr tui.Attr, current bool) []colorOffset {$/;"	f
colored	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f
colour_sequences	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^struct colour_sequences {$/;"	s	file:
colseq_buf	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static char *colseq_buf;$/;"	v	file:
colseq_buf_allocs	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static int colseq_buf_allocs;$/;"	v	file:
command	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^      let command = a:command$/;"	v
command	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^      let command = fzf.temps.batchfile$/;"	v
command	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let command .= s:term_marker$/;"	v
command	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let command = 'cmd.exe \/C '.fzf#shellescape('set "TERM=" & start \/WAIT sh -c '.shellscript)$/;"	v
commandbn	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static struct builtin commandbn =$/;"	v	typeref:struct:builtin	file:
commandnotfound	zsh/.zplugin/bin/zmodules/Src/exec.c	/^commandnotfound(char *arg0, LinkList args)$/;"	f	file:
common_sink	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
compareRanks	zsh/.zplugin/plugins/junegunn---fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f
compareRanks	zsh/.zplugin/plugins/junegunn---fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f
compctlreadptr	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export CompctlReadFn compctlreadptr = fallback_compctlread;$/;"	v
compgetmatch	zsh/.zplugin/bin/zmodules/Src/glob.c	/^compgetmatch(char *pat, int *flp, char **replstrp)$/;"	f	file:
complist	zsh/.zplugin/bin/zmodules/Src/glob.c	/^struct complist {$/;"	s	file:
conddef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct conddef {$/;"	s
condid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int condid;			\/* for overloading handler functions  *\/$/;"	m	struct:conddef
condlex	zsh/.zplugin/bin/zmodules/Src/parse.c	/^void (*condlex) _((void)) = zshlex;$/;"	v
condtab	zsh/.zplugin/bin/zmodules/Src/module.c	/^mod_export Conddef condtab;$/;"	v
consoleDevice	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c
constrain	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f
content	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def content(esc_seqs: false)$/;"	f	class:TerminalSession
contflag	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
contflag	zsh/.zplugin/bin/zmodules/Src/loop.c	/^mod_export int contflag;$/;"	v
convbase	zsh/.zplugin/bin/zmodules/Src/params.c	/^convbase(char *s, zlong v, int base)$/;"	f
convbase_ptr	zsh/.zplugin/bin/zmodules/Src/params.c	/^convbase_ptr(char *s, zlong v, int base, int *ndigits)$/;"	f
convbase_underscore	zsh/.zplugin/bin/zmodules/Src/params.c	/^convbase_underscore(char *s, zlong v, int base, int underscore)$/;"	f
convchar_t	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef int convchar_t;$/;"	t
convchar_t	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef wint_t convchar_t;$/;"	t
convfloat	zsh/.zplugin/bin/zmodules/Src/params.c	/^convfloat(double dval, int digits, int flags, FILE *fout)$/;"	f
convfloat_underscore	zsh/.zplugin/bin/zmodules/Src/params.c	/^char *convfloat_underscore(double dval, int underscore)$/;"	f
coordinatorDelayMax	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c
coordinatorDelayStep	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c
coprocin	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int coprocin;$/;"	v
coprocout	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int coprocout;$/;"	v
copySlice	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f
copy_ecstr	zsh/.zplugin/bin/zmodules/Src/parse.c	/^copy_ecstr(Eccstr s, char *p)$/;"	f	file:
copyenvstr	zsh/.zplugin/bin/zmodules/Src/params.c	/^copyenvstr(char *s, char *value, int flags)$/;"	f	file:
copyparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^copyparam(Param tpm, Param pm, int fakecopy)$/;"	f
copyparamtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^copyparamtable(HashTable ht, char *name)$/;"	f
count	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int count;			\/* reference count *\/$/;"	m	struct:funcdump
countprompt	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^countprompt(char *str, int *wp, int *hp, int overf)$/;"	f
counts	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^          def counts$/;"	f	class:Tmux.until
cprint2	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f
create_file	zsh/.zplugin/plugins/junegunn---fzf/install	/^create_file() {$/;"	f
createaliasnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createaliasnode(char *txt, int flags)$/;"	f
createaliastable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createaliastable(HashTable ht)$/;"	f
createaliastables	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createaliastables(void)$/;"	f
createbuiltintable	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^createbuiltintable(void)$/;"	f
createcmdnamtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createcmdnamtable(void)$/;"	f
createhisttable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createhisttable(void)$/;"	f
createoptiontable	zsh/.zplugin/bin/zmodules/Src/options.c	/^createoptiontable(void)$/;"	f
createparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^createparam(char *name, int flags)$/;"	f
createparamtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^createparamtable(void)$/;"	f
createreswdtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createreswdtable(void)$/;"	f
createshfunctable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^createshfunctable(void)$/;"	f
createspecialhash	zsh/.zplugin/bin/zmodules/Src/params.c	/^createspecialhash(char *name, GetNodeFunc get, ScanTabFunc scan, int flags)$/;"	f
criterion	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type criterion int$/;"	t
csi	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f
csi	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f
csiColor	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f
csp	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int csp;$/;"	m	struct:hist_stack
cstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    unsigned char *cstack;$/;"	m	struct:hist_stack
ct	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualnlink(UNUSED(char *name), struct stat *buf, off_t ct, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
ct	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^	    int ct;$/;"	m	struct:scanstatus::__anon4::__anon5	file:
ct	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ct;			\/* # of redirections on this fd                 *\/$/;"	m	struct:multio
ct	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ct;			\/* number of elements                         *\/$/;"	m	struct:hashtable
ctime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long ctime;$/;"	m	struct:gmatch	file:
ctxtlex	zsh/.zplugin/bin/zmodules/Src/lex.c	/^ctxtlex(void)$/;"	f
cur_add_func	zsh/.zplugin/bin/zmodules/Src/parse.c	/^cur_add_func(char *nam, Shfunc shf, LinkList names, LinkList progs,$/;"	f	file:
curcontext	zsh/.zplugin/plugins/zsh-users---zsh-completions/src/_setup.py	/^      curcontext="${curcontext%:*:*}:setuppy-${cmd}:"$/;"	v
curglobdata	zsh/.zplugin/bin/zmodules/Src/glob.c	/^static struct globdata curglobdata;$/;"	v	typeref:struct:globdata	file:
curjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int curjob;$/;"	v
current	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func (h *History) current() string {$/;"	f
currentItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f
current_limits	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export struct rlimit current_limits[RLIM_NLIMITS], limits[RLIM_NLIMITS];$/;"	v	typeref:struct:rlimit
cursor	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def cursor$/;"	f	class:TerminalSession
curtestarg	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^char **testargs, **curtestarg;$/;"	v
custom_check_dump_file	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_check_dump_file(char *file, struct stat *sbuf, char *name, int *ksh,$/;"	f	file:
custom_dump_find_func	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_dump_find_func(Wordcode h, char *name)$/;"	f	file:
custom_load_dump_file	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_load_dump_file(char *dump, struct stat *sbuf, int other, int len)$/;"	f	file:
custom_load_dump_header	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_load_dump_header(char *nam, char *name, int err)$/;"	f	file:
custom_source	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_source(char *s)$/;"	f
custom_try_source_file	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_try_source_file(char *file)$/;"	f
custom_zwcstat	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^custom_zwcstat(char *filename, struct stat *buf)$/;"	f	file:
custom_zwcstat	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	974;"	d	file:
d	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    double d;$/;"	m	union:mem_align	file:
d	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static int d;$/;"	v	file:
d	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	double d;$/;"	m	union:__anon13::__anon14
d_ino	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	263;"	d
dash_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar dash_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
dat	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void *dat;$/;"	m	struct:linknode
data	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	void *data;		\/* used by special parameter functions    *\/$/;"	m	union:param::__anon28
days	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualtime(UNUSED(char *name), struct stat *buf, off_t days, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
dbparens	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static int dbparens;$/;"	v	file:
dbparens	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int dbparens;$/;"	m	struct:lex_stack
debugV2	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f
decnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	595;"	d
decrdumpcount	zsh/.zplugin/bin/zmodules/Src/parse.c	/^decrdumpcount(FuncDump f)$/;"	f
def	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *def;			\/* Code to reset default colour *\/$/;"	m	struct:colour_sequences	file:
def	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Hookfn def;$/;"	m	struct:hookdef
defaultCommand	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^var defaultCommand string$/;"	v
defaultEscDelay	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c
defaultHeight	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c
defaultHistoryMax	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c
defaultJumpLabels	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,<.>\/?'\\"!@#$%^&*()[{]}-_=+"$/;"	c
defaultKeymap	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func defaultKeymap() map[int][]action {$/;"	f
defaultMargin	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f
defaultOptions	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f
defaultTheme	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f
defaultTheme	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f
defaultWidth	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c
defaults	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
defev	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong defev;$/;"	m	struct:hist_stack
defopts	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *defopts;		\/* options set by default for overloaded handlerfuncs *\/$/;"	m	struct:builtin
defset	zsh/.zplugin/bin/zmodules/Src/options.c	73;"	d	file:
delChar	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f
delenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^delenv(Param pm)$/;"	f
delenvvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^delenvvalue(char *x)$/;"	f
delete_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^delete_module(Module m)$/;"	f	file:
deletebuiltin	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletebuiltin(const char *nam)$/;"	f
deleteconddef	zsh/.zplugin/bin/zmodules/Src/module.c	/^deleteconddef(Conddef c)$/;"	f
deletefilelist	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^deletefilelist(LinkList file_list, int disowning)$/;"	f
deletehashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^deletehashtable(HashTable ht)$/;"	f
deletehookdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletehookdef(Hookdef h)$/;"	f
deletehookdeffunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletehookdeffunc(Hookdef h, Hookfn f)$/;"	f
deletehookfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletehookfunc(char *n, Hookfn f)$/;"	f
deletejob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^deletejob(Job jn, int disowning)$/;"	f
deletemathfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletemathfunc(MathFunc f)$/;"	f
deleteparamdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^deleteparamdef(Paramdef d)$/;"	f
deleteparamtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^deleteparamtable(HashTable t)$/;"	f
deletewrapper	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletewrapper(Module m, FuncWrap w)$/;"	f
delimiterRegexp	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f
delprepromptfn	zsh/.zplugin/bin/zmodules/Src/utils.c	/^delprepromptfn(voidvoidfnptr_t func)$/;"	f
deltimedfn	zsh/.zplugin/bin/zmodules/Src/utils.c	/^deltimedfn(voidvoidfnptr_t func)$/;"	f
delunset	zsh/.zplugin/bin/zmodules/Src/params.c	/^static int delunset;$/;"	v	file:
deps	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList deps;$/;"	m	struct:module
deselectItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f
destroy	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def destroy$/;"	f	class:TerminalSession
dev	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    dev_t dev;			\/* device *\/$/;"	m	struct:funcdump
dev	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    dev_t dev;$/;"	m	struct:dirsav
devPrefixes	zsh/.zplugin/plugins/junegunn---fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v
diff	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int diff;			\/* strlen(.dir) - strlen(.nam)      *\/$/;"	m	struct:nameddir
difftime	zsh/.zplugin/bin/zmodules/Src/compat.c	/^difftime(time_t t2, time_t t1)$/;"	f
dir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *dir;			\/* the directory in full            *\/$/;"	m	struct:nameddir
dir_path	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    char *dir_path;$/;"	m	struct:source_event	file:
dircache	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static struct dircache_entry *dircache, *dircache_lastentry;$/;"	v	typeref:struct:dircache_entry	file:
dircache_entry	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^struct dircache_entry$/;"	s	file:
dircache_lastentry	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static struct dircache_entry *dircache, *dircache_lastentry;$/;"	v	typeref:struct:	file:
dircache_set	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^dircache_set(char **name, char *value)$/;"	f
dircache_size	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static int dircache_size;$/;"	v	file:
dircmp	zsh/.zplugin/bin/zmodules/Src/utils.c	/^dircmp(char *s, char *t)$/;"	f	file:
dirent	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	166;"	d
dirfd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int dirfd, level;$/;"	m	struct:dirsav
dirname	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *dirname;$/;"	m	struct:dirsav
dirsav	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct dirsav {$/;"	s
dirstack	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mod_export LinkList dirstack;$/;"	v
disablehashnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^disablehashnode(HashNode hn, UNUSED(int flags))$/;"	f
disablenode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ScanFunc disablenode;	\/* pointer to function to disable a node      *\/$/;"	m	struct:hashtable
disables	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    unsigned int disables;$/;"	m	struct:zpc_disables_save
disableshfuncnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^disableshfuncnode(HashNode hn, UNUSED(int flags))$/;"	f	file:
displayWidth	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f
displayWidthWithLimit	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f
dlclose	zsh/.zplugin/bin/zmodules/Src/module.c	1492;"	d	file:
dlclose	zsh/.zplugin/bin/zmodules/Src/module.c	1522;"	d	file:
dlclose	zsh/.zplugin/bin/zmodules/Src/module.c	1540;"	d	file:
dlerror	zsh/.zplugin/bin/zmodules/Src/module.c	1493;"	d	file:
dlerrstr	zsh/.zplugin/bin/zmodules/Src/module.c	/^static char *dlerrstr[256];$/;"	v	file:
dlopen	zsh/.zplugin/bin/zmodules/Src/module.c	1491;"	d	file:
dlopen	zsh/.zplugin/bin/zmodules/Src/module.c	1521;"	d	file:
dlsym	zsh/.zplugin/bin/zmodules/Src/module.c	1534;"	d	file:
do_boot_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^do_boot_module(Module m, Feature_enables enablesarr, int silent)$/;"	f	file:
do_cleanup_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^do_cleanup_module(Module m)$/;"	f	file:
do_load_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^do_load_module(char const *name, int silent)$/;"	f	file:
do_module_features	zsh/.zplugin/bin/zmodules/Src/module.c	/^do_module_features(Module m, Feature_enables enablesarr, int flags)$/;"	f	file:
doneps4	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int doneps4;$/;"	v	file:
dont_queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	105;"	d
dont_queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	125;"	d
dontcount	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int dontcount;$/;"	m	struct:buf_vars	file:
dontimport	zsh/.zplugin/bin/zmodules/Src/params.c	/^static int dontimport(int flags)$/;"	f	file:
dontsavetrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static int dontsavetrap;$/;"	v	file:
dopopd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
doprintdir	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^int doprintdir = 0;		\/* set in exec.c (for autocd) *\/$/;"	v
dosavetrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^dosavetrap(int sig, int level)$/;"	f	file:
dosetopt	zsh/.zplugin/bin/zmodules/Src/options.c	/^dosetopt(int optno, int value, int force, char *new_opts)$/;"	f
doshfunc	zsh/.zplugin/bin/zmodules/Src/exec.c	/^doshfunc(Shfunc shfunc, LinkList doshargs, int noreturnval)$/;"	f
dotrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^dotrap(int sig)$/;"	f
dotrapargs	zsh/.zplugin/bin/zmodules/Src/signals.c	/^dotrapargs(int sig, int *sigtr, void *sigfn)$/;"	f	file:
doubleClickDuration	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c
down	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Histent down;		\/* next line (moving downward)      *\/$/;"	m	struct:histent
download	zsh/.zplugin/plugins/junegunn---fzf/install	/^download() {$/;"	f
dquote_parse	zsh/.zplugin/bin/zmodules/Src/lex.c	/^dquote_parse(char endchar, int sub)$/;"	f	file:
dquotedztrdup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^dquotedztrdup(char const *s)$/;"	f
drawBorder	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f
drawBorder	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f
drawBorderAround	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f
drawBorderHorizontal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal() {$/;"	f
dtime	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^dtime(struct timeval *dt, struct timeval *t1, struct timeval *t2)$/;"	f	file:
dummy	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    struct m_shdr *dummy;$/;"	m	struct:m_shdr	typeref:struct:m_shdr::m_shdr	file:
dummy1	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    zlong dummy1;$/;"	m	struct:m_hdr	file:
dummy2	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    zlong dummy2;$/;"	m	struct:m_hdr	file:
dummy_eprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^mod_export struct eprog dummy_eprog;$/;"	v	typeref:struct:eprog
dummy_eprog_code	zsh/.zplugin/bin/zmodules/Src/parse.c	/^static wordcode dummy_eprog_code;$/;"	v	file:
dummy_patprog1	zsh/.zplugin/bin/zmodules/Src/zsh.h	1738;"	d
dummy_patprog2	zsh/.zplugin/bin/zmodules/Src/zsh.h	1739;"	d
dump	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FuncDump dump;		\/* dump file this is in *\/$/;"	m	struct:eprog
dump_autoload	zsh/.zplugin/bin/zmodules/Src/parse.c	/^dump_autoload(char *nam, char *file, int on, Options ops, int func)$/;"	f
dump_find_func	zsh/.zplugin/bin/zmodules/Src/parse.c	/^dump_find_func(Wordcode h, char *name)$/;"	f	file:
dumps	zsh/.zplugin/bin/zmodules/Src/parse.c	/^static FuncDump dumps;$/;"	v	file:
dumps	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static FuncDump dumps;$/;"	v	file:
dumptime	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^dumptime(Job jn)$/;"	f	file:
dup_qual_list	zsh/.zplugin/bin/zmodules/Src/glob.c	/^static struct qual *dup_qual_list(struct qual *orig, struct qual **lastp)$/;"	f	file:
dupeTheme	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f
dupeprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^dupeprog(Eprog p, int heap)$/;"	f
dupstring	zsh/.zplugin/bin/zmodules/Src/string.c	/^dupstring(const char *s)$/;"	f
dupstring_glen	zsh/.zplugin/bin/zmodules/Src/string.c	/^dupstring_glen(const char *s, unsigned *len_ret)$/;"	f
dupstring_wlen	zsh/.zplugin/bin/zmodules/Src/string.c	/^dupstring_wlen(const char *s, unsigned len)$/;"	f
dupstrpfx	zsh/.zplugin/bin/zmodules/Src/string.c	/^dupstrpfx(const char *s, int len)$/;"	f
duration	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    double duration;$/;"	m	struct:source_event	file:
dv	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualdev(UNUSED(char *name), struct stat *buf, off_t dv, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
dval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	double dval;		\/* value if declared float$/;"	m	union:param::__anon28
dyn_boot_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_boot_module(Module m)$/;"	f	file:
dyn_cleanup_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_cleanup_module(Module m)$/;"	f	file:
dyn_enables_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_enables_module(Module m, int **enables)$/;"	f	file:
dyn_features_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_features_module(Module m, char ***features)$/;"	f	file:
dyn_finish_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_finish_module(Module m)$/;"	f	file:
dyn_setup_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^dyn_setup_module(Module m)$/;"	f	file:
dyncat	zsh/.zplugin/bin/zmodules/Src/string.c	/^dyncat(const char *s1, const char *s2)$/;"	f
e	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int b, e;			\/* beginning and end of chunk to replace *\/$/;"	m	struct:repldata
ecadd	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecadd(wordcode c)$/;"	f	file:
ecadjusthere	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecadjusthere(int p, int d)$/;"	f	file:
ecbuf	zsh/.zplugin/bin/zmodules/Src/parse.c	/^Wordcode ecbuf;$/;"	v
ecbuf	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode ecbuf;$/;"	m	struct:parse_stack
eccopyredirs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^eccopyredirs(Estate s)$/;"	f
eccstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct eccstr {$/;"	s
ecdel	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecdel(int p)$/;"	f	file:
ecgetarr	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecgetarr(Estate s, int num, int dup, int *tokflag)$/;"	f
ecgetlist	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecgetlist(Estate s, int num, int dup, int *tokflag)$/;"	f
ecgetredirs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecgetredirs(Estate s)$/;"	f
ecgetstr	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecgetstr(Estate s, int dup, int *tokflag)$/;"	f
ecispace	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecispace(int p, int n)$/;"	f	file:
eclen	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int eclen, ecused, ecnpats;$/;"	v
eclen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int eclen, ecused, ecnpats;$/;"	m	struct:parse_stack
ecnfunc	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int ecsoffs, ecssub, ecnfunc;$/;"	v
ecnfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ecsoffs, ecssub, ecnfunc;$/;"	m	struct:parse_stack
ecnpats	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int eclen, ecused, ecnpats;$/;"	v
ecnpats	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int eclen, ecused, ecnpats;$/;"	m	struct:parse_stack
ecrawstr	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecrawstr(Eprog p, Wordcode pc, int *tokflag)$/;"	f
ecsoffs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int ecsoffs, ecssub, ecnfunc;$/;"	v
ecsoffs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ecsoffs, ecssub, ecnfunc;$/;"	m	struct:parse_stack
ecssub	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int ecsoffs, ecssub, ecnfunc;$/;"	v
ecssub	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ecsoffs, ecssub, ecnfunc;$/;"	m	struct:parse_stack
ecstr	zsh/.zplugin/bin/zmodules/Src/parse.c	441;"	d	file:
ecstrcode	zsh/.zplugin/bin/zmodules/Src/parse.c	/^ecstrcode(char *s)$/;"	f	file:
ecstrs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^Eccstr ecstrs;$/;"	v
ecstrs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eccstr ecstrs;$/;"	m	struct:parse_stack
ecused	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int eclen, ecused, ecnpats;$/;"	v
ecused	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int eclen, ecused, ecnpats;$/;"	m	struct:parse_stack
egid_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer egid_gsu =$/;"	v	typeref:struct:gsu_integer	file:
empty	zsh/.zplugin/bin/zmodules/Src/zsh.h	585;"	d
emptyLine	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v
empty_eprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^empty_eprog(Eprog p)$/;"	f
emptycmdnamtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^emptycmdnamtable(HashTable ht)$/;"	f	file:
emptyhashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^emptyhashtable(HashTable ht)$/;"	f
emptyhisttable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^emptyhisttable(HashTable ht)$/;"	f
emptytable	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TableFunc emptytable;	\/* pointer to function to empty table         *\/$/;"	m	struct:hashtable
emulate	zsh/.zplugin/bin/zmodules/Src/options.c	/^emulate(const char *zsh_name, int fully, int *new_emulation, char *new_opts)$/;"	f
emulation	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
emulation	zsh/.zplugin/bin/zmodules/Src/options.c	/^mod_export int emulation;$/;"	v
emulation	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int emulation;$/;"	m	struct:emulation_options
emulation_options	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct emulation_options {$/;"	s
enablehashnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^enablehashnode(HashNode hn, UNUSED(int flags))$/;"	f
enablenode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ScanFunc enablenode;	\/* pointer to function to enable a node       *\/$/;"	m	struct:hashtable
enables	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_enables_func enables;$/;"	m	struct:linkedmod
enables_	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^enables_( Module m, int **enables )$/;"	f
enables_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^enables_module(Module m, int **enables)$/;"	f	file:
enableshfuncnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^enableshfuncnode(HashNode hn, UNUSED(int flags))$/;"	f	file:
ename	zsh/.zplugin/bin/zmodules/Src/params.c	/^    char *ename;		\/* name of corresponding environment var *\/$/;"	m	struct:iparam	file:
ename	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *ename;		\/* name of corresponding environment var *\/$/;"	m	struct:param
end	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *end;			\/* Escape sequence terminator *\/$/;"	m	struct:colour_sequences	file:
end	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int end;		\/* 1-rel last element of array slice, or -1 *\/$/;"	m	struct:value
end_with?	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def end_with?(_str)$/;"	f	class:NilClass
endparamscope	zsh/.zplugin/bin/zmodules/Src/params.c	/^endparamscope(void)$/;"	f
endpatternscope	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^endpatternscope(void)$/;"	f
endtime	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct timeval endtime;	\/* time job exited                  *\/$/;"	m	struct:process	typeref:struct:process::timeval
endtrapscope	zsh/.zplugin/bin/zmodules/Src/signals.c	/^endtrapscope(void)$/;"	f
ensurefeature	zsh/.zplugin/bin/zmodules/Src/module.c	/^ensurefeature(const char *modname, const char *prefix, const char *feature)$/;"	f
entersubsh	zsh/.zplugin/bin/zmodules/Src/exec.c	/^entersubsh(int flags)$/;"	f	file:
enum_val	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    int enum_val;$/;"	m	struct:zp_option_name	file:
env	zsh/.zplugin/bin/zmodules/Src/params.c	/^    char *env;			\/* location in environment, if exported  *\/$/;"	m	struct:iparam	file:
env	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *env;			\/* location in environment, if exported  *\/$/;"	m	struct:param
eprog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct eprog {$/;"	s
equals	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f
equalsplit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^equalsplit(char *s, char **t)$/;"	f
errbrk_saved	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^int prev_errflag, prev_breaks, errbrk_saved;$/;"	v
errflag	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int errflag;$/;"	v
errflag_bits	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum errflag_bits {$/;"	g
errno_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer errno_gsu =$/;"	v	typeref:struct:gsu_integer	file:
error	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
errorExit	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func errorExit(msg string) {$/;"	f
errorExit	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f
errsfound	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^int errsfound;				\/* Total error count so far *\/$/;"	v
escPollInterval	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c
escSequence	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f
escape	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
escapedColon	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	escapedColon = 0$/;"	c
escapedComma	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	escapedComma = 1$/;"	c
escapedPlus	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	escapedPlus  = 2$/;"	c
esglob	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int esprefork, esglob = 1;$/;"	v	file:
esprefork	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int esprefork, esglob = 1;$/;"	v	file:
estate	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct estate {$/;"	s
euid_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer euid_gsu =$/;"	v	typeref:struct:gsu_integer	file:
eval	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^eval(char **argv)$/;"	f	file:
eval_autoload	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^eval_autoload(Shfunc shf, char *name, Options ops, int func)$/;"	f
evaluate_opts	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
event	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    struct source_event event;$/;"	m	struct:zp_sevent_node	typeref:struct:zp_sevent_node::source_event	file:
exactend	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *exactpos, *exactend;$/;"	v	file:
exactpos	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *exactpos, *exactend;$/;"	v	file:
exalias	zsh/.zplugin/bin/zmodules/Src/lex.c	/^exalias(void)$/;"	f
exec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *exec;$/;"	m	struct:globsort	file:
execarith	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execarith(Estate state, UNUSED(int do_exec))$/;"	f	file:
execautofn	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execautofn(Estate state, UNUSED(int do_exec))$/;"	f	file:
execautofn_basic	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execautofn_basic(Estate state, UNUSED(int do_exec))$/;"	f	file:
execbuiltin	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^execbuiltin(LinkList args, LinkList assigns, Builtin bn)$/;"	f
execcase	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execcase(Estate state, int do_exec)$/;"	f
execcmd_analyse	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execcmd_analyse(Estate state, Execcmd_params eparams)$/;"	f	file:
execcmd_exec	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execcmd_exec(Estate state, Execcmd_params eparams,$/;"	f	file:
execcmd_fork	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execcmd_fork(Estate state, int how, int type, Wordcode varspc,$/;"	f	file:
execcmd_getargs	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static void execcmd_getargs(LinkList preargs, LinkList args, int expand)$/;"	f	file:
execcmd_params	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct execcmd_params {$/;"	s
execcond	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execcond(Estate state, UNUSED(int do_exec))$/;"	f	file:
execcursh	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execcursh(Estate state, int do_exec)$/;"	f	file:
execerr	zsh/.zplugin/bin/zmodules/Src/exec.c	212;"	d	file:
execfor	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execfor(Estate state, int do_exec)$/;"	f
execfuncdef	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execfuncdef(Estate state, Eprog redir_prog)$/;"	f	file:
execfuncs	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int (*execfuncs[WC_COUNT-WC_CURSH]) _((Estate, int)) = {$/;"	v	file:
execif	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execif(Estate state, int do_exec)$/;"	f
execlist	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execlist(Estate state, int dont_change_job, int exiting)$/;"	f
execode	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execode(Eprog p, int dont_change_job, int exiting, char *context)$/;"	f
execpline	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execpline(Estate state, wordcode slcode, int how, int last1)$/;"	f	file:
execpline2	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execpline2(Estate state, wordcode pcode,$/;"	f	file:
execrepeat	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execrepeat(Estate state, UNUSED(int do_exec))$/;"	f
execrestore	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execrestore(void)$/;"	f
execsave	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execsave(void)$/;"	f
execselect	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execselect(Estate state, UNUSED(int do_exec))$/;"	f
execshfunc	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execshfunc(Shfunc shf, LinkList args)$/;"	f	file:
execsimple	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execsimple(Estate state)$/;"	f	file:
execstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct execstack {$/;"	s
execstring	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execstring(char *s, int dont_change_job, int exiting, char *context)$/;"	f
execsubst	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execsubst(LinkList strs)$/;"	f
exectime	zsh/.zplugin/bin/zmodules/Src/exec.c	/^exectime(Estate state, UNUSED(int do_exec))$/;"	f	file:
exectry	zsh/.zplugin/bin/zmodules/Src/loop.c	/^exectry(Estate state, int do_exec)$/;"	f
execute	zsh/.zplugin/bin/zmodules/Src/exec.c	/^execute(LinkList args, int flags, int defpath)$/;"	f	file:
execute	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
executeCommand	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f
executeRegexp	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v
execute_term	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
execute_tmux	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
execwhile	zsh/.zplugin/bin/zmodules/Src/loop.c	/^execwhile(Estate state, UNUSED(int do_exec))$/;"	f
exitCancel	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	exitCancel    = -1$/;"	c
exitError	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	exitError     = 2$/;"	c
exitInterrupt	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c
exitNoMatch	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c
exitOk	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	exitOk        = 0$/;"	c
exit_handler	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
exit_level	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^exit_level;$/;"	v
exit_pending	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^exit_pending;$/;"	v
exit_status	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let exit_status = v:shell_error$/;"	v
exit_trap_posix	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static int exit_trap_posix;$/;"	v	file:
expandhashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^expandhashtable(HashTable ht)$/;"	f	file:
expandjobtab	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^expandjobtab(void)$/;"	f
export_param	zsh/.zplugin/bin/zmodules/Src/params.c	/^export_param(Param pm)$/;"	f
exstack	zsh/.zplugin/bin/zmodules/Src/exec.c	/^struct execstack *exstack;$/;"	v	typeref:struct:execstack
extendedMatch	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]int) {$/;"	f
extractColor	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]ansiOffset, *ansiState) {$/;"	f
f	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	GsuFloat f;$/;"	m	union:param::__anon29
fail	zsh/.zplugin/plugins/junegunn---fzf/bin/fzf-tmux	/^fail() {$/;"	f
fallback_compctlread	zsh/.zplugin/bin/zmodules/Src/init.c	/^fallback_compctlread(char *name, UNUSED(char **args), UNUSED(Options ops), UNUSED(char *reply))$/;"	f
fcedit	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fcedit(char *ename, char *fn)$/;"	f	file:
fcgetcomm	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fcgetcomm(char *s)$/;"	f	file:
fclist	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fclist(FILE *f, Options ops, zlong first, zlong last,$/;"	f	file:
fcsubs	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fcsubs(char **sp, struct asgment *sub)$/;"	f	file:
fd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	int fd;	    \/* File descriptor to close *\/$/;"	m	union:jobfile::__anon20
fd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int fd;			\/* file descriptor *\/$/;"	m	struct:funcdump
fd	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) fd() int {$/;"	f
fd1	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int fd1, fd2;$/;"	m	struct:redir
fd2	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int fd1, fd2;$/;"	m	struct:redir
fdbyte	zsh/.zplugin/bin/zmodules/Src/parse.c	3044;"	d	file:
fdbyte	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	477;"	d	file:
fdflags	zsh/.zplugin/bin/zmodules/Src/parse.c	3045;"	d	file:
fdflags	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	478;"	d	file:
fdhbldflags	zsh/.zplugin/bin/zmodules/Src/parse.c	3061;"	d	file:
fdhbldflags	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	494;"	d	file:
fdhead	zsh/.zplugin/bin/zmodules/Src/parse.c	/^struct fdhead {$/;"	s	file:
fdhead	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^struct fdhead {$/;"	s	file:
fdheaderlen	zsh/.zplugin/bin/zmodules/Src/parse.c	3039;"	d	file:
fdheaderlen	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	472;"	d	file:
fdhflags	zsh/.zplugin/bin/zmodules/Src/parse.c	3059;"	d	file:
fdhflags	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	492;"	d	file:
fdhtail	zsh/.zplugin/bin/zmodules/Src/parse.c	3060;"	d	file:
fdhtail	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	493;"	d	file:
fdmagic	zsh/.zplugin/bin/zmodules/Src/parse.c	3041;"	d	file:
fdmagic	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	474;"	d	file:
fdname	zsh/.zplugin/bin/zmodules/Src/parse.c	3066;"	d	file:
fdname	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	499;"	d	file:
fdother	zsh/.zplugin/bin/zmodules/Src/parse.c	3047;"	d	file:
fdother	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	480;"	d	file:
fds	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int fds[MULTIOUNIT];	\/* list of src\/dests redirected to\/from this fd *\/$/;"	m	struct:multio
fdsetbyte	zsh/.zplugin/bin/zmodules/Src/parse.c	3042;"	d	file:
fdsetbyte	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	475;"	d	file:
fdsetflags	zsh/.zplugin/bin/zmodules/Src/parse.c	3046;"	d	file:
fdsetflags	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	479;"	d	file:
fdsetother	zsh/.zplugin/bin/zmodules/Src/parse.c	3048;"	d	file:
fdsetother	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	481;"	d	file:
fdswap	zsh/.zplugin/bin/zmodules/Src/parse.c	/^fdswap(Wordcode p, int n)$/;"	f	file:
fdtable	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export unsigned char *fdtable;$/;"	v
fdtable_flocks	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int fdtable_flocks;$/;"	v
fdtable_size	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int fdtable_size;$/;"	v
fdversion	zsh/.zplugin/bin/zmodules/Src/parse.c	3054;"	d	file:
fdversion	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	487;"	d	file:
feature_enables	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct feature_enables {$/;"	s
features	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_features_func features;$/;"	m	struct:linkedmod
features	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct features {$/;"	s
features_	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^features_( Module m, char ***features )$/;"	f
features_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^features_module(Module m, char ***features)$/;"	f	file:
feed	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f
fetchcmdnamnode	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fetchcmdnamnode(HashNode hn, UNUSED(int printflags))$/;"	f	file:
fetchvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^fetchvalue(Value v, char **pptr, int bracks, int flags)$/;"	f
fg_bg_sequences	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static struct colour_sequences fg_bg_sequences[2];$/;"	v	typeref:struct:colour_sequences	file:
fheap	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static Heap fheap;$/;"	v	file:
fignore	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **fignore;		\/* $fignore     *\/$/;"	v
file_name	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    char *file_name;$/;"	m	struct:source_event	file:
file_type	zsh/.zplugin/bin/zmodules/Src/glob.c	/^file_type(mode_t filemode)$/;"	f
filelist	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList filelist;		\/* list of files to delete when done *\/$/;"	m	struct:job
filename	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *filename;		\/* file function resides in *\/$/;"	m	struct:funcstack
filename	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *filename;             \/* Name of file located in.$/;"	m	struct:shfunc
filename	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *filename;$/;"	m	struct:funcdump
fill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f
fill	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, r rune) {$/;"	f
fillString	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair, a Attr) FillReturn {$/;"	f
filltable	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    TableFunc filltable;	\/* pointer to function to fill table          *\/$/;"	m	struct:hashtable
fin	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f
findAnsiStart	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func findAnsiStart(str string) int {$/;"	f
findFirstMatch	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f
findLastMatch	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f
findOffset	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f
find_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^find_module(const char *name, int flags, const char **namep)$/;"	f	file:
findcmd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^findcmd(char *arg0, int docopy, int default_path)$/;"	f
finddir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^finddir(char *s)$/;"	f
finddir_best	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static int finddir_best;$/;"	v	file:
finddir_full	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static char *finddir_full;$/;"	v	file:
finddir_last	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static Nameddir finddir_last;$/;"	v	file:
finddir_scan	zsh/.zplugin/bin/zmodules/Src/utils.c	/^finddir_scan(HashNode hn, UNUSED(int flags))$/;"	f	file:
findenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^findenv(char *name, int *pos)$/;"	f	file:
findjobnam	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^findjobnam(const char *s)$/;"	f
findproc	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^findproc(pid_t pid, Job *jptr, Process *pptr, int aux)$/;"	f
findpwd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^findpwd(char *s)$/;"	f
findsep	zsh/.zplugin/bin/zmodules/Src/utils.c	/^findsep(char **s, char *sep, int quote)$/;"	f	file:
findword	zsh/.zplugin/bin/zmodules/Src/utils.c	/^findword(char **s, char *sep)$/;"	f
finish	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_void_func finish;$/;"	m	struct:linkedmod
finish_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^finish_module(Module m)$/;"	f	file:
first	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^  long first;$/;"	m	struct:wcwidth9_interval
first	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkNode first;$/;"	m	struct:linklist
firstKey	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func firstKey(keymap map[int]string) int {$/;"	f
firstfdhead	zsh/.zplugin/bin/zmodules/Src/parse.c	3056;"	d	file:
firstfdhead	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	489;"	d	file:
firsthist	zsh/.zplugin/bin/zmodules/Src/zsh.h	596;"	d
firstht	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static HashTable firstht, lastht;$/;"	v	file:
firstnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	578;"	d
fish	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^    def fish$/;"	f	class:Shell
fixdir	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^fixdir(char *src)$/;"	f
fixfds	zsh/.zplugin/bin/zmodules/Src/exec.c	/^fixfds(int *save)$/;"	f	file:
flags	zsh/.zplugin/bin/zmodules/Src/input.c	/^    int bufleft, bufct, flags;$/;"	m	struct:instacks	file:
flags	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int flags;			\/* PM_* flags (defined in zsh.h)         *\/$/;"	m	struct:iparam	file:
flags	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int flags;		\/* The enum above *\/$/;"	m	struct:paramtypes	file:
flags	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    int flags;$/;"	m	struct:wcfunc	file:
flags	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode flags;		\/* flags and offset to name tail *\/$/;"	m	struct:fdhead	file:
flags	zsh/.zplugin/bin/zmodules/Src/signals.c	/^    int sig, flags, local, posix;$/;"	m	struct:savetrap	file:
flags	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode flags;		\/* flags and offset to name tail *\/$/;"	m	struct:fdhead	file:
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int			flags;	   \/* PAT_* flags *\/$/;"	m	struct:patprog
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;			\/* EF_* below *\/$/;"	m	struct:eprog
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;			\/* MFF_* flags defined below *\/$/;"	m	struct:mathfunc
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;			\/* see CONDF_* below                  *\/$/;"	m	struct:conddef
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;			\/* various flags      *\/$/;"	m	struct:hashnode
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;		\/* flags defined below                 *\/$/;"	m	struct:value
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:asgment
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:funcwrap
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:hookdef
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:imatchdata
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:linklist
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:paramdef
flags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int flags;$/;"	m	struct:redir
flineno	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong flineno;		\/* line number in file *\/$/;"	m	struct:funcstack
floatgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^floatgetfn(Param pm)$/;"	f	file:
floatseconds_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_float floatseconds_gsu =$/;"	v	typeref:struct:gsu_float	file:
floatsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^floatsetfn(Param pm, double x)$/;"	f	file:
flush	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f
fm	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *fm;$/;"	m	struct:buf_vars	file:
fnam	zsh/.zplugin/bin/zmodules/Src/module.c	/^del_automathfunc(UNUSED(const char *modnam), const char *fnam, int flags)$/;"	v	file:
follow	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int follow; 		\/* 1 to go thru symlinks *\/$/;"	m	struct:complist	file:
forceerrs	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^int forceerrs;				\/* Forced maximum error count *\/$/;"	v
forklevel	zsh/.zplugin/bin/zmodules/Src/exec.c	/^forklevel;$/;"	v
foundparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^static Param foundparam;$/;"	v	file:
fpath	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **fpath,		\/* $fpath       *\/$/;"	v
fprintdir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^fprintdir(char *s, FILE *f)$/;"	f
fred	zsh/.zplugin/bin/zmodules/configure	/^fred () { }$/;"	f
free	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    struct m_shdr *free;	\/* if block of small blocks: free list *\/$/;"	m	struct:m_hdr	typeref:struct:m_hdr::m_shdr	file:
free	zsh/.zplugin/bin/zmodules/Src/mem.c	/^free(FREE_ARG_T p)$/;"	f
free_colour_buffer	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^free_colour_buffer(void)$/;"	f
freealiasnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^freealiasnode(HashNode hn)$/;"	f	file:
freearray	zsh/.zplugin/bin/zmodules/Src/utils.c	/^freearray(char **s)$/;"	f
freebuiltinnode	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^freebuiltinnode(HashNode hn)$/;"	f	file:
freecmdnamnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^freecmdnamnode(HashNode hn)$/;"	f	file:
freedump	zsh/.zplugin/bin/zmodules/Src/parse.c	/^freedump(FuncDump f)$/;"	f	file:
freeeprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^freeeprog(Eprog p)$/;"	f
freeheap	zsh/.zplugin/bin/zmodules/Src/mem.c	/^freeheap(void)$/;"	f
freehistdata	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^freehistdata(Histent he, int unlink)$/;"	f
freehistnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^freehistnode(HashNode nodeptr)$/;"	f
freejob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^freejob(Job jn, int deleting)$/;"	f
freematchlist	zsh/.zplugin/bin/zmodules/Src/glob.c	/^freematchlist(LinkList repllist)$/;"	f
freemodulenode	zsh/.zplugin/bin/zmodules/Src/module.c	/^freemodulenode(HashNode hn)$/;"	f	file:
freenode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FreeNodeFunc freenode;	\/* pointer to function to free a node         *\/$/;"	m	struct:hashtable
freeparamnode	zsh/.zplugin/bin/zmodules/Src/params.c	/^freeparamnode(HashNode hn)$/;"	f
freepatprog	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^freepatprog(Patprog prog)$/;"	f
freerepldata	zsh/.zplugin/bin/zmodules/Src/glob.c	/^freerepldata(void *ptr)$/;"	f	file:
freeshfuncnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^freeshfuncnode(HashNode hn)$/;"	f	file:
freestr	zsh/.zplugin/bin/zmodules/Src/utils.c	/^freestr(void *a)$/;"	f
fseek	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	757;"	d
fstack	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    struct funcstack fstack;$/;"	m	struct:funcsave	typeref:struct:funcsave::funcstack	file:
ftell	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	760;"	d
ftim	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    time_t ftim;		\/* command finished time            *\/$/;"	m	struct:histent
full_path	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    char *full_path;$/;"	m	struct:source_event	file:
func	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    TestMatchFunc func;		\/* Function to call to test match            *\/$/;"	m	struct:qual	file:
func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    voidvoidfnptr_t func;$/;"	m	struct:prepromptfn
func	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    voidvoidfnptr_t func;$/;"	m	struct:timedfn
funcdef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eprog funcdef;		\/* function definition    *\/$/;"	m	struct:shfunc
funcdump	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct funcdump {$/;"	s
funcid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int funcid;			\/* xbins (see above) for overloaded handlerfuncs      *\/$/;"	m	struct:builtin
funcid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int funcid;$/;"	m	struct:mathfunc
funcs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList funcs;$/;"	m	struct:hookdef
funcsave	zsh/.zplugin/bin/zmodules/Src/exec.c	/^struct funcsave {$/;"	s	file:
funcstack	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export Funcstack funcstack;$/;"	v
funcstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct funcstack {$/;"	s
funcwrap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct funcwrap {$/;"	s
fzf	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^      let fzf.buf = term_start([&shell, &shellcmdflag, command], {'curwin': 1, 'exit_cb': function(fzf.on_exit)})$/;"	v
fzf	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^      let fzf.temps.batchfile = s:fzf_tempname().'.bat'$/;"	v
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/core.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/history_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/item_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/result_others.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf!	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#run	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#wrap	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf.on_exit	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf_call	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
fzf_exec	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_exec()$/;"	f
fzf_expand	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
fzf_fnamemodify	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
fzf_getcwd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
fzf_popd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_tempname	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
fzf_tmux	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
g:loaded_fzf	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:python3_host_prog	nvim/path.vim	/^let g:python3_host_prog = '\/home\/linuxbrew\/.linuxbrew\/bin\/python3'$/;"	v
g:python_host_prog	nvim/path.vim	/^let g:python_host_prog = '\/home\/linuxbrew\/.linuxbrew\/bin\/python'$/;"	v
g:ruby_host_prog	nvim/path.vim	/^let g:ruby_host_prog = '\/home\/linuxbrew\/.linuxbrew\/bin\/ruby'$/;"	v
g_amc	zsh/.zplugin/bin/zmodules/Src/glob.c	210;"	d	file:
g_range	zsh/.zplugin/bin/zmodules/Src/glob.c	209;"	d	file:
g_units	zsh/.zplugin/bin/zmodules/Src/glob.c	211;"	d	file:
gd_amc	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_range, gd_amc, gd_units;$/;"	m	struct:globdata	file:
gd_colonmod	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *gd_colonmod;		\/* colon modifiers in qualifier list    *\/$/;"	m	struct:globdata	file:
gd_gf_follow	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_follow, gd_gf_sorts, gd_gf_nsorts;$/;"	m	struct:globdata	file:
gd_gf_listtypes	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_nullglob, gd_gf_markdirs, gd_gf_noglobdots, gd_gf_listtypes;$/;"	m	struct:globdata	file:
gd_gf_markdirs	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_nullglob, gd_gf_markdirs, gd_gf_noglobdots, gd_gf_listtypes;$/;"	m	struct:globdata	file:
gd_gf_noglobdots	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_nullglob, gd_gf_markdirs, gd_gf_noglobdots, gd_gf_listtypes;$/;"	m	struct:globdata	file:
gd_gf_nsorts	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_follow, gd_gf_sorts, gd_gf_nsorts;$/;"	m	struct:globdata	file:
gd_gf_nullglob	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_nullglob, gd_gf_markdirs, gd_gf_noglobdots, gd_gf_listtypes;$/;"	m	struct:globdata	file:
gd_gf_numsort	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_numsort;$/;"	m	struct:globdata	file:
gd_gf_post_words	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    LinkList gd_gf_pre_words, gd_gf_post_words;$/;"	m	struct:globdata	file:
gd_gf_pre_words	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    LinkList gd_gf_pre_words, gd_gf_post_words;$/;"	m	struct:globdata	file:
gd_gf_sortlist	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    struct globsort gd_gf_sortlist[MAX_SORTS];$/;"	m	struct:globdata	typeref:struct:globdata::globsort	file:
gd_gf_sorts	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_gf_follow, gd_gf_sorts, gd_gf_nsorts;$/;"	m	struct:globdata	file:
gd_glob_pre	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *gd_glob_pre, *gd_glob_suf;$/;"	m	struct:globdata	file:
gd_glob_suf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *gd_glob_pre, *gd_glob_suf;$/;"	m	struct:globdata	file:
gd_matchbuf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    Gmatch gd_matchbuf;		\/* array of matches                     *\/$/;"	m	struct:globdata	file:
gd_matchct	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_matchct;		\/* number of matches found              *\/$/;"	m	struct:globdata	file:
gd_matchptr	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    Gmatch gd_matchptr;		\/* &matchbuf[matchct]                   *\/$/;"	m	struct:globdata	file:
gd_matchsz	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_matchsz;		\/* size of matchbuf                     *\/$/;"	m	struct:globdata	file:
gd_pathbuf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *gd_pathbuf;$/;"	m	struct:globdata	file:
gd_pathbufcwd	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_pathbufcwd;		\/* where did we chdir()'ed		*\/$/;"	m	struct:globdata	file:
gd_pathbufsz	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_pathbufsz;		\/* size of pathbuf			*\/$/;"	m	struct:globdata	file:
gd_pathpos	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_pathpos;$/;"	m	struct:globdata	file:
gd_qualct	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_qualct, gd_qualorct;$/;"	m	struct:globdata	file:
gd_qualorct	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_qualct, gd_qualorct;$/;"	m	struct:globdata	file:
gd_quals	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    struct qual *gd_quals;$/;"	m	struct:globdata	typeref:struct:globdata::qual	file:
gd_range	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_range, gd_amc, gd_units;$/;"	m	struct:globdata	file:
gd_units	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int gd_range, gd_amc, gd_units;$/;"	m	struct:globdata	file:
getBytes	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f
getBytesInternal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f
getEnv	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f
get_clktck	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^get_clktck(void)$/;"	f
get_color	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
get_cond_num	zsh/.zplugin/bin/zmodules/Src/parse.c	/^get_cond_num(char *tst)$/;"	f	file:
get_match_ret	zsh/.zplugin/bin/zmodules/Src/glob.c	/^get_match_ret(Imatchdata imd, int b, int e)$/;"	f	file:
get_usage	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^get_usage(void)$/;"	f
get_username	zsh/.zplugin/bin/zmodules/Src/utils.c	/^get_username(void)$/;"	f
getaddrdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	587;"	d
getaparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^getaparam(char *s)$/;"	f
getarg	zsh/.zplugin/bin/zmodules/Src/params.c	/^getarg(char **str, int *inv, Value v, int a2, zlong *w,$/;"	f	file:
getarrvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^getarrvalue(Value v)$/;"	f
getasg	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^getasg(char ***argvp, LinkList assigns)$/;"	f	file:
getbgstatus	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static int getbgstatus(pid_t pid)$/;"	f	file:
getch	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f
getconddef	zsh/.zplugin/bin/zmodules/Src/module.c	/^getconddef(int inf, const char *name, int autol)$/;"	f
getdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	588;"	d
getfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HashTable (*getfn) _((Param));$/;"	m	struct:gsu_hash
getfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *(*getfn) _((Param));$/;"	m	struct:gsu_scalar
getfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char **(*getfn) _((Param));$/;"	m	struct:gsu_array
getfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    double (*getfn) _((Param));$/;"	m	struct:gsu_float
getfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong (*getfn) _((Param));$/;"	m	struct:gsu_integer
getfpfunc	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getfpfunc(char *s, int *ksh, char **fdir, char **alt_path, int test_only)$/;"	f
gethashnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^gethashnode(HashTable ht, const char *nam)$/;"	f
gethashnode2	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^gethashnode2(HashTable ht, const char *nam)$/;"	f
gethere	zsh/.zplugin/bin/zmodules/Src/exec.c	/^gethere(char **strp, int typ)$/;"	f
getherestr	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getherestr(struct redir *fn)$/;"	f	file:
gethkparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^gethkparam(char *s)$/;"	f
gethookdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^gethookdef(char *n)$/;"	f
gethostname	zsh/.zplugin/bin/zmodules/Src/compat.c	/^gethostname(char *name, size_t namelen)$/;"	f
gethparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^gethparam(char *s)$/;"	f
getindex	zsh/.zplugin/bin/zmodules/Src/params.c	/^getindex(char **pptr, Value v, int flags)$/;"	f
getintvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^getintvalue(Value v)$/;"	f
getiparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^getiparam(char *s)$/;"	f
getjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^getjob(const char *s, const char *prog)$/;"	f
getkeystring	zsh/.zplugin/bin/zmodules/Src/utils.c	/^getkeystring(char *s, int *len, int how, int *misc)$/;"	f
getlogin	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	460;"	d
getmatch	zsh/.zplugin/bin/zmodules/Src/glob.c	/^getmatch(char **sp, char *pat, int fl, int n, char *replstr)$/;"	f
getmatcharr	zsh/.zplugin/bin/zmodules/Src/glob.c	/^getmatcharr(char ***ap, char *pat, int fl, int n, char *replstr)$/;"	f
getmatchlist	zsh/.zplugin/bin/zmodules/Src/glob.c	/^getmatchlist(char *str, Patprog p, LinkList *repllistp)$/;"	f
getmathfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^getmathfunc(const char *name, int autol)$/;"	f
getnameddir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^getnameddir(char *name)$/;"	f
getnfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GetNodeFunc getnfn;		\/* function to get node, if special hash *\/$/;"	m	struct:paramdef
getnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GetNodeFunc getnode;	\/* pointer to function to get an enabled node *\/$/;"	m	struct:hashtable
getnode2	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    GetNodeFunc getnode2;	\/* pointer to function to get node            *\/$/;"	m	struct:hashtable
getnparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^getnparam(char *s)$/;"	f
getnumvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^getnumvalue(Value v)$/;"	f
getoutput	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getoutput(char *cmd, int qt)$/;"	f
getoutputfile	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getoutputfile(char *cmd, char **eptr)$/;"	f
getparamnode	zsh/.zplugin/bin/zmodules/Src/params.c	/^getparamnode(HashTable ht, const char *nam)$/;"	f	file:
getpipe	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getpipe(char *cmd, int nullexec)$/;"	f	file:
getpos	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
getproc	zsh/.zplugin/bin/zmodules/Src/exec.c	/^getproc(char *cmd, char **eptr)$/;"	f
getquery	zsh/.zplugin/bin/zmodules/Src/utils.c	/^getquery(char *valid_chars, int purge)$/;"	f
getrawseconds	zsh/.zplugin/bin/zmodules/Src/params.c	/^getrawseconds(void)$/;"	f
getshfunc	zsh/.zplugin/bin/zmodules/Src/utils.c	/^getshfunc(char *nam)$/;"	f
getshfuncfile	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^getshfuncfile(Shfunc shf)$/;"	f
getsigname	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^getsigname(int sig)$/;"	f
getsignum	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^getsignum(const char *s)$/;"	f
getsparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^getsparam(char *s)$/;"	f
getsparam_u	zsh/.zplugin/bin/zmodules/Src/params.c	/^getsparam_u(char *s)$/;"	f
getstrvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^getstrvalue(Value v)$/;"	f
gettempfile	zsh/.zplugin/bin/zmodules/Src/utils.c	/^gettempfile(const char *prefix, int use_heap, char **tempname)$/;"	f
gettempname	zsh/.zplugin/bin/zmodules/Src/utils.c	/^gettempname(const char *prefix, int use_heap)$/;"	f
gettimeofday	zsh/.zplugin/bin/zmodules/Src/compat.c	/^gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f
gettok	zsh/.zplugin/bin/zmodules/Src/lex.c	/^gettok(void)$/;"	f	file:
gettokstr	zsh/.zplugin/bin/zmodules/Src/lex.c	/^gettokstr(int c, int sub)$/;"	f	file:
gettrapnode	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^gettrapnode(int sig, int ignoredisable)$/;"	f
gettygrp	zsh/.zplugin/bin/zmodules/Src/utils.c	/^gettygrp(void)$/;"	f
gettyinfo	zsh/.zplugin/bin/zmodules/Src/utils.c	/^gettyinfo(struct ttyinfo *ti)$/;"	f
getvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^getvalue(Value v, char **pptr, int bracks)$/;"	f
getvaluearr	zsh/.zplugin/bin/zmodules/Src/params.c	/^getvaluearr(Value v)$/;"	f	file:
gf_follow	zsh/.zplugin/bin/zmodules/Src/glob.c	217;"	d	file:
gf_listtypes	zsh/.zplugin/bin/zmodules/Src/glob.c	215;"	d	file:
gf_markdirs	zsh/.zplugin/bin/zmodules/Src/glob.c	213;"	d	file:
gf_noglobdots	zsh/.zplugin/bin/zmodules/Src/glob.c	214;"	d	file:
gf_nsorts	zsh/.zplugin/bin/zmodules/Src/glob.c	219;"	d	file:
gf_nullglob	zsh/.zplugin/bin/zmodules/Src/glob.c	212;"	d	file:
gf_numsort	zsh/.zplugin/bin/zmodules/Src/glob.c	216;"	d	file:
gf_post_words	zsh/.zplugin/bin/zmodules/Src/glob.c	222;"	d	file:
gf_pre_words	zsh/.zplugin/bin/zmodules/Src/glob.c	221;"	d	file:
gf_sortlist	zsh/.zplugin/bin/zmodules/Src/glob.c	220;"	d	file:
gf_sorts	zsh/.zplugin/bin/zmodules/Src/glob.c	218;"	d	file:
gid	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualgid(UNUSED(char *name), struct stat *buf, off_t gid, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
gid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    gid_t gid;$/;"	m	struct:__anon34
gid_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer gid_gsu =$/;"	v	typeref:struct:gsu_integer	file:
gleader	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t gleader;		\/* process group leader of this job  *\/$/;"	m	struct:job
glob_exec_string	zsh/.zplugin/bin/zmodules/Src/glob.c	/^glob_exec_string(char **sp)$/;"	f	file:
glob_pre	zsh/.zplugin/bin/zmodules/Src/glob.c	/^mod_export char *glob_pre, *glob_suf;$/;"	v
glob_suf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^mod_export char *glob_pre, *glob_suf;$/;"	v
globdata	zsh/.zplugin/bin/zmodules/Src/glob.c	/^struct globdata {$/;"	s	file:
globdots	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    int globdots;		\/* Glob initial dots? *\/$/;"	m	struct:rpat	file:
globdots	zsh/.zplugin/bin/zmodules/Src/pattern.c	1882;"	d	file:
globend	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int			globend;   \/* globbing flags set after finish *\/$/;"	m	struct:patprog
globflags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int			globflags; \/* globbing flags to set at start *\/$/;"	m	struct:patprog
globsort	zsh/.zplugin/bin/zmodules/Src/glob.c	/^struct globsort {$/;"	s	file:
gmatch	zsh/.zplugin/bin/zmodules/Src/glob.c	/^struct gmatch {$/;"	s	file:
gmatchcmp	zsh/.zplugin/bin/zmodules/Src/glob.c	/^gmatchcmp(Gmatch a, Gmatch b)$/;"	f	file:
go	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def go(*args)$/;"	f
gotword	zsh/.zplugin/bin/zmodules/Src/lex.c	/^gotword(void)$/;"	f	file:
groupmap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^} groupmap;$/;"	t	typeref:struct:__anon34
groupset	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^} groupset;$/;"	t	typeref:struct:__anon35
gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^    void *gsu;			\/* get\/set\/unset methods *\/$/;"	m	struct:iparam	file:
gsu	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    const void *gsu;		\/* get\/set\/unset structure, if special *\/$/;"	m	struct:paramdef
gsu	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } gsu;$/;"	m	struct:param	typeref:union:param::__anon29
gsu_array	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct gsu_array {$/;"	s
gsu_float	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct gsu_float {$/;"	s
gsu_hash	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct gsu_hash {$/;"	s
gsu_integer	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct gsu_integer {$/;"	s
gsu_scalar	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct gsu_scalar {$/;"	s
guess	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static char *guess, *best;$/;"	v	file:
h	zsh/.zplugin/bin/zmodules/Src/module.c	/^deletehookdefs(UNUSED(Module m), Hookdef h, int size)$/;"	v
h	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	GsuHash h;$/;"	m	union:param::__anon29
h_free	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int h_m[1025], h_push, h_pop, h_free;$/;"	v	file:
h_m	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int h_m[1025], h_push, h_pop, h_free;$/;"	v	file:
h_pop	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int h_m[1025], h_push, h_pop, h_free;$/;"	v	file:
h_push	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int h_m[1025], h_push, h_pop, h_free;$/;"	v	file:
hackspace	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static int hackspace;$/;"	v	file:
hackzero	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static char *hackzero;$/;"	v	file:
handle	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	void *handle;$/;"	m	union:module::__anon26
handle_sub	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^handle_sub(int job, int fg)$/;"	f	file:
handlefeatures	zsh/.zplugin/bin/zmodules/Src/module.c	/^handlefeatures(Module m, Features f, int **enables)$/;"	f
handler	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    CondHandler handler;	\/* handler function                   *\/$/;"	m	struct:conddef
handler	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    WrapFunc handler;$/;"	m	struct:funcwrap
handlerfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HandlerFunc handlerfunc;	\/* pointer to function that executes this builtin     *\/$/;"	m	struct:builtin
handletrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^handletrap(int sig)$/;"	f	file:
hasPreviewFlags	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func hasPreviewFlags(template string) (plus bool, query bool) {$/;"	f
hasPreviewWindow	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f
hasPreviewer	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f
has_any	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
has_token	zsh/.zplugin/bin/zmodules/Src/utils.c	/^has_token(const char *s)$/;"	f
hasam	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int hasam, hasbw, hasxn, hasye;$/;"	v
hasbraces	zsh/.zplugin/bin/zmodules/Src/glob.c	/^hasbraces(char *str)$/;"	f
hasbw	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int hasam, hasbw, hasxn, hasye;$/;"	v
hash	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^        HashTable hash;		\/* value if declared assoc   (PM_HASHED)  *\/$/;"	m	union:param::__anon28
hash	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HashFunc hash;		\/* pointer to hash function for this table    *\/$/;"	m	struct:hashtable
hashchar	zsh/.zplugin/bin/zmodules/Src/params.c	/^unsigned char hatchar, hashchar;$/;"	v
hashcmd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^hashcmd(char *arg0, char **pp)$/;"	f
hashdir	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^hashdir(char **dirp)$/;"	f
hasher	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^hasher(const char *str)$/;"	f
hashgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^hashgetfn(Param pm)$/;"	f
hashnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct hashnode {$/;"	s
hashsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^hashsetfn(Param pm, HashTable x)$/;"	f
hashtab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^	    HashNode *hashtab;$/;"	m	struct:scanstatus::__anon4::__anon5	file:
hashtable	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct hashtable {$/;"	s
hashval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int hashval;$/;"	m	struct:eccstr
hasprocs	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^hasprocs(int job)$/;"	f
hasspecial	zsh/.zplugin/bin/zmodules/Src/utils.c	/^hasspecial(char const *s)$/;"	f
haswilds	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^haswilds(char *str)$/;"	f
hasxn	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int hasam, hasbw, hasxn, hasye;$/;"	v
hasye	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int hasam, hasbw, hasxn, hasye;$/;"	v
hatchar	zsh/.zplugin/bin/zmodules/Src/params.c	/^unsigned char hatchar, hashchar;$/;"	v
havefiles	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^havefiles(void)$/;"	f
hcalloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^hcalloc(size_t size)$/;"	f
hdocs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^struct heredocs *hdocs;$/;"	v	typeref:struct:heredocs
hdocs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct heredocs *hdocs;$/;"	m	struct:parse_stack	typeref:struct:parse_stack::heredocs
heap	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct heap {$/;"	s
heap_debug_verbosity	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static volatile int heap_debug_verbosity;$/;"	v	file:
heap_debug_verbosity	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum heap_debug_verbosity {$/;"	g
heap_id	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Heapid heap_id;$/;"	m	struct:heapstack
heap_id	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    unsigned int heap_id;$/;"	m	struct:heap
heaps	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static Heap heaps;$/;"	v	file:
heaps_saved	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static LinkList heaps_saved;$/;"	v	file:
heapstack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct heapstack {$/;"	s
help	zsh/.zplugin/plugins/junegunn---fzf/bin/fzf-tmux	/^help() {$/;"	f
help	zsh/.zplugin/plugins/junegunn---fzf/install	/^help() {$/;"	f
help	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func help(code int) {$/;"	f
help	zsh/.zplugin/plugins/junegunn---fzf/uninstall	/^help() {$/;"	f
here_terminator	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *here_terminator;$/;"	m	struct:redir
heredocs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct heredocs {$/;"	s
hgetc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int (*hgetc) _((void));$/;"	m	struct:hist_stack
highlight	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^struct highlight {$/;"	s	file:
highlights	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^static const struct highlight highlights[] = {$/;"	v	typeref:struct:highlight	file:
hist_keep_comment	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int hist_keep_comment;$/;"	m	struct:hist_stack
hist_stack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct hist_stack {$/;"	s
histactive	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int histactive;$/;"	m	struct:hist_stack
histchars_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar histchars_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
histdone	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int histdone;$/;"	m	struct:hist_stack
histent	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct histent {$/;"	s
histhasher	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^histhasher(const char *str)$/;"	f
histnum	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong histnum;		\/* A sequential history number      *\/$/;"	m	struct:histent
histsize_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer histsize_gsu =$/;"	v	typeref:struct:gsu_integer	file:
histstrcmp	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^histstrcmp(const char *str1, const char *str2)$/;"	f
hlen	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode hlen;		\/* header length (incl. name) *\/$/;"	m	struct:fdhead	file:
hlen	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode hlen;		\/* header length (incl. name) *\/$/;"	m	struct:fdhead	file:
hline	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *hline;$/;"	m	struct:hist_stack
hlinesz	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int hlinesz;$/;"	m	struct:hist_stack
hmkarray	zsh/.zplugin/bin/zmodules/Src/utils.c	/^hmkarray(char *s)$/;"	f
hnamcmp	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^hnamcmp(const void *ap, const void *bp)$/;"	f	file:
holdintr	zsh/.zplugin/bin/zmodules/Src/signals.c	/^holdintr(void)$/;"	f
home	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *home,		\/* $HOME        *\/$/;"	v
home_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar home_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
hookdef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct hookdef {$/;"	s
hooktab	zsh/.zplugin/bin/zmodules/Src/module.c	/^Hookdef hooktab;$/;"	v
hptr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *hptr;$/;"	m	struct:hist_stack
hpux_dlsym	zsh/.zplugin/bin/zmodules/Src/module.c	/^hpux_dlsym(void *handle, char *name)$/;"	f	file:
hrealloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^hrealloc(char *p, size_t old, size_t new)$/;"	f
hsize	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int hsize;			\/* size of nodes[]  (number of hash values)   *\/$/;"	m	struct:hashtable
htok	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int htok;			\/* tokens in parameter list *\/$/;"	m	struct:execcmd_params
hungetc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*hungetc) _((int));$/;"	m	struct:hist_stack
hwabort	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*hwabort) _((void));$/;"	m	struct:hist_stack
hwaddc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*hwaddc) _((int));$/;"	m	struct:hist_stack
hwbegin	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*hwbegin) _((int));$/;"	m	struct:hist_stack
hwend	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*hwend) _((void));$/;"	m	struct:hist_stack
i	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	GsuInteger i;$/;"	m	union:param::__anon29
ialnum	zsh/.zplugin/bin/zmodules/Src/ztype.h	48;"	d
ialpha	zsh/.zplugin/bin/zmodules/Src/ztype.h	53;"	d
iblank	zsh/.zplugin/bin/zmodules/Src/ztype.h	49;"	d
icntrl	zsh/.zplugin/bin/zmodules/Src/ztype.h	56;"	d
id	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    int id;$/;"	m	struct:source_event	file:
idigit	zsh/.zplugin/bin/zmodules/Src/ztype.h	47;"	d
ifs	zsh/.zplugin/bin/zmodules/Src/params.c	/^char *ifs,		\/* $IFS         *\/$/;"	v
ifs_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar ifs_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
ifs_wide	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static struct widechar_array ifs_wide;$/;"	v	typeref:struct:widechar_array	file:
igetmatch	zsh/.zplugin/bin/zmodules/Src/glob.c	/^igetmatch(char **sp, Patprog p, int fl, int n, char *replstr,$/;"	f	file:
iident	zsh/.zplugin/bin/zmodules/Src/ztype.h	54;"	d
iincchar	zsh/.zplugin/bin/zmodules/Src/glob.c	/^static int iincchar(char **tp, int left)$/;"	f	file:
imatchdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct imatchdata {$/;"	s
imeta	zsh/.zplugin/bin/zmodules/Src/ztype.h	59;"	d
in_exit_trap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^int in_exit_trap;$/;"	v
inalmore	zsh/.zplugin/bin/zmodules/Src/lex.c	/^int inalmore;$/;"	v
inblank	zsh/.zplugin/bin/zmodules/Src/ztype.h	50;"	d
inbuf	zsh/.zplugin/bin/zmodules/Src/input.c	/^static char *inbuf;		\/* Current input buffer *\/$/;"	v	file:
inbufct	zsh/.zplugin/bin/zmodules/Src/input.c	/^mod_export int inbufct;$/;"	v
inbufflags	zsh/.zplugin/bin/zmodules/Src/input.c	/^int inbufflags;$/;"	v
inbufleft	zsh/.zplugin/bin/zmodules/Src/input.c	/^static int inbufleft;		\/* Characters left in current input$/;"	v	file:
inbufptr	zsh/.zplugin/bin/zmodules/Src/input.c	/^static char *inbufptr;		\/* Pointer into input buffer *\/$/;"	v	file:
inbufpush	zsh/.zplugin/bin/zmodules/Src/input.c	/^static char *inbufpush;		\/* Character at which to re-push alias *\/$/;"	v	file:
incasepat	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int incasepat;$/;"	v
incasepat	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int incasepat;$/;"	m	struct:parse_stack
include?	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def include?(_str)$/;"	f	class:NilClass
incmdpos	zsh/.zplugin/bin/zmodules/Src/parse.c	/^mod_export int incmdpos;$/;"	v
incmdpos	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int incmdpos;$/;"	m	struct:parse_stack
incnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	594;"	d
incompfunc	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export int incompfunc;$/;"	v
incond	zsh/.zplugin/bin/zmodules/Src/parse.c	/^mod_export int incond;$/;"	v
incond	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int incond;$/;"	m	struct:parse_stack
incrdumpcount	zsh/.zplugin/bin/zmodules/Src/parse.c	/^incrdumpcount(FuncDump f)$/;"	f
ind	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    unsigned char ind[MAX_OPS];$/;"	m	struct:options
indexAt	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f
inerrflush	zsh/.zplugin/bin/zmodules/Src/input.c	/^inerrflush(void)$/;"	f
ineval	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mod_export int ineval;$/;"	v
infor	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int infor;$/;"	v
infor	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int infor;$/;"	m	struct:parse_stack
ingetc	zsh/.zplugin/bin/zmodules/Src/input.c	/^ingetc(void)$/;"	f
ingetptr	zsh/.zplugin/bin/zmodules/Src/input.c	/^ingetptr(void)$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func init() {$/;"	f
init	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func init() {$/;"	f
initPalette	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f
initScreen	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f
initTheme	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f
init_bltinmods	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_bltinmods(void)$/;"	f
init_builtins	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^init_builtins(void)$/;"	f
init_dirsav	zsh/.zplugin/bin/zmodules/Src/utils.c	/^init_dirsav(Dirsav d)$/;"	f
init_eprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^init_eprog(void)$/;"	f
init_io	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_io(char *cmd)$/;"	f
init_jobs	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^init_jobs(char **argv, char **envp)$/;"	f
init_list0	zsh/.zplugin/bin/zmodules/Src/zsh.h	602;"	d
init_list1	zsh/.zplugin/bin/zmodules/Src/zsh.h	609;"	d
init_misc	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_misc(char *cmd, char *zsh_name)$/;"	f
init_parse	zsh/.zplugin/bin/zmodules/Src/parse.c	/^init_parse(void)$/;"	f
init_parse_status	zsh/.zplugin/bin/zmodules/Src/parse.c	/^init_parse_status(void)$/;"	f
init_shout	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_shout(void)$/;"	f
init_signals	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_signals(void)$/;"	f
init_term	zsh/.zplugin/bin/zmodules/Src/init.c	/^init_term(void)$/;"	f
initialDelay	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c
initialDelayTac	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c
initialize	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
initialize	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def initialize(opts = {})$/;"	f	class:TerminalSession
initjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^initjob(void)$/;"	f
initlextabs	zsh/.zplugin/bin/zmodules/Src/lex.c	/^initlextabs(void)$/;"	f
initnewjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static int initnewjob(int i)$/;"	f	file:
initparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^typedef struct param initparam;$/;"	t	typeref:struct:param	file:
initparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^} initparam;$/;"	t	typeref:struct:iparam	file:
inittyptab	zsh/.zplugin/bin/zmodules/Src/utils.c	/^inittyptab(void)$/;"	f
ino	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ino_t ino;			\/* indoe number *\/$/;"	m	struct:funcdump
ino	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ino_t ino;$/;"	m	struct:dirsav
inpop	zsh/.zplugin/bin/zmodules/Src/input.c	/^inpop(void)$/;"	f
inpopalias	zsh/.zplugin/bin/zmodules/Src/input.c	/^inpopalias(void)$/;"	f
inpoptop	zsh/.zplugin/bin/zmodules/Src/input.c	/^inpoptop(void)$/;"	f	file:
inpush	zsh/.zplugin/bin/zmodules/Src/input.c	/^inpush(char *str, int flags, Alias inalias)$/;"	f
input_hasalias	zsh/.zplugin/bin/zmodules/Src/input.c	/^char *input_hasalias(void)$/;"	f
inputline	zsh/.zplugin/bin/zmodules/Src/input.c	/^inputline(void)$/;"	f	file:
inputsetline	zsh/.zplugin/bin/zmodules/Src/input.c	/^inputsetline(char *str, int flags)$/;"	f	file:
inredir	zsh/.zplugin/bin/zmodules/Src/parse.c	/^mod_export int inredir;$/;"	v
inredir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int inredir;$/;"	m	struct:parse_stack
inrepeat_	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int inrepeat_; \/* trailing underscore because of name clash with Zle\/zle_vi.c *\/$/;"	v
inrepeat_	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int inrepeat_;$/;"	m	struct:parse_stack
insert	zsh/.zplugin/bin/zmodules/Src/glob.c	/^insert(char *s, int checked)$/;"	f	file:
insert_glob_match	zsh/.zplugin/bin/zmodules/Src/glob.c	/^insert_glob_match(LinkList list, LinkNode next, char *data)$/;"	f	file:
inserts	zsh/.zplugin/bin/zmodules/Src/glob.c	/^static char **inserts;$/;"	v	file:
instack	zsh/.zplugin/bin/zmodules/Src/input.c	/^static struct instacks *instack, *instacktop;$/;"	v	typeref:struct:instacks	file:
instacks	zsh/.zplugin/bin/zmodules/Src/input.c	/^struct instacks {$/;"	s	file:
instacksz	zsh/.zplugin/bin/zmodules/Src/input.c	/^static int instacksz = INSTACK_INITIAL;$/;"	v	file:
instacktop	zsh/.zplugin/bin/zmodules/Src/input.c	/^static struct instacks *instack, *instacktop;$/;"	v	typeref:struct:	file:
install_handler	zsh/.zplugin/bin/zmodules/Src/signals.c	/^install_handler(int sig)$/;"	f
installemulation	zsh/.zplugin/bin/zmodules/Src/options.c	/^installemulation(int new_emulation, char *new_opts)$/;"	f
interact	zsh/.zplugin/bin/zmodules/Src/zsh.h	2503;"	d
interpretCode	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) *ansiState {$/;"	f
intgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^intgetfn(Param pm)$/;"	f
intr	zsh/.zplugin/bin/zmodules/Src/signals.c	/^intr(void)$/;"	f
intrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^int intrap;$/;"	v
intseconds_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer intseconds_gsu =$/;"	v	typeref:struct:gsu_integer	file:
intsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^intsetfn(Param pm, zlong x)$/;"	f	file:
intvargetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^intvargetfn(Param pm)$/;"	f
intvarsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^intvarsetfn(Param pm, zlong x)$/;"	f
intypeset	zsh/.zplugin/bin/zmodules/Src/parse.c	/^mod_export int intypeset;$/;"	v
intypeset	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int intypeset;$/;"	m	struct:parse_stack
inull	zsh/.zplugin/bin/zmodules/Src/ztype.h	61;"	d
inungetc	zsh/.zplugin/bin/zmodules/Src/input.c	/^inungetc(int c)$/;"	f
inuse	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int inuse;			\/* alias is being expanded  *\/$/;"	m	struct:alias
inwhat	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int inwhat;$/;"	v
iparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^typedef struct iparam {$/;"	s	file:
ipattern	zsh/.zplugin/bin/zmodules/Src/ztype.h	62;"	d
is24	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f
is24	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^func (p ColorPair) is24() bool {$/;"	f
isAlphabet	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f
isAscii	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f
isExecuteAction	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f
isNumeric	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f
isPreviewEnabled	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f
is_fd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int is_fd;$/;"	m	struct:jobfile
is_mb_niceformat	zsh/.zplugin/bin/zmodules/Src/utils.c	/^is_mb_niceformat(const char *s)$/;"	f
is_nicechar	zsh/.zplugin/bin/zmodules/Src/utils.c	/^is_nicechar(int c)$/;"	f
is_wcs_nicechar	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export int is_wcs_nicechar(wchar_t c)$/;"	f
isanum	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^isanum(char *s)$/;"	f	file:
isarr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int isarr;$/;"	m	struct:value
isblank	zsh/.zplugin/bin/zmodules/Src/pattern.c	3856;"	d	file:
iscom	zsh/.zplugin/bin/zmodules/Src/exec.c	/^iscom(char *s)$/;"	f
isep	zsh/.zplugin/bin/zmodules/Src/ztype.h	52;"	d
isfirstch	zsh/.zplugin/bin/zmodules/Src/lex.c	/^int isfirstch;$/;"	v
isfirstch	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int isfirstch;$/;"	m	struct:lex_stack
isfirstln	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int isfirstln;$/;"	v
isfirstln	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int isfirstln;$/;"	m	struct:lex_stack
isgooderr	zsh/.zplugin/bin/zmodules/Src/exec.c	/^isgooderr(int e, char *dir)$/;"	f	file:
isident	zsh/.zplugin/bin/zmodules/Src/params.c	/^isident(char *s)$/;"	f
islogin	zsh/.zplugin/bin/zmodules/Src/zsh.h	2505;"	d
isnewlin	zsh/.zplugin/bin/zmodules/Src/parse.c	/^int isnewlin;$/;"	v
isnewlin	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int isnewlin;$/;"	m	struct:parse_stack
isnumglob	zsh/.zplugin/bin/zmodules/Src/lex.c	/^isnumglob(void)$/;"	f	file:
ispecial	zsh/.zplugin/bin/zmodules/Src/ztype.h	58;"	d
isprint_ascii	zsh/.zplugin/bin/zmodules/Src/compat.c	/^isprint_ascii(int c)$/;"	f
ispwd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ispwd(char *s)$/;"	f
isreallycom	zsh/.zplugin/bin/zmodules/Src/exec.c	/^isreallycom(Cmdnam cn)$/;"	f
isrelative	zsh/.zplugin/bin/zmodules/Src/exec.c	/^isrelative(char *s)$/;"	f
isset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2499;"	d
isset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2500;"	d
issetvar	zsh/.zplugin/bin/zmodules/Src/params.c	/^issetvar(char *name)$/;"	f
iswblank	zsh/.zplugin/bin/zmodules/Src/pattern.c	3614;"	d	file:
itemLine	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type itemLine struct {$/;"	t
item_count	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^          def item_count$/;"	f	class:Tmux.until
iter	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forward bool, pattern []rune, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f
itok	zsh/.zplugin/bin/zmodules/Src/ztype.h	51;"	d
itype_end	zsh/.zplugin/bin/zmodules/Src/utils.c	/^itype_end(const char *ptr, int itype, int once)$/;"	f
iuser	zsh/.zplugin/bin/zmodules/Src/ztype.h	55;"	d
iword	zsh/.zplugin/bin/zmodules/Src/ztype.h	57;"	d
iwsep	zsh/.zplugin/bin/zmodules/Src/ztype.h	60;"	d
job	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct job {$/;"	s
jobbing	zsh/.zplugin/bin/zmodules/Src/zsh.h	2504;"	d
jobfile	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct jobfile {$/;"	s
jobtab	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export struct job *jobtab;$/;"	v	typeref:struct:job
jobtabsize	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int jobtabsize;$/;"	v
joinTokens	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f
joinchar	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int joinchar;		\/* character used to join arrays *\/$/;"	m	struct:tieddata
jumpAcceptEnabled	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c
jumpDisabled	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c
jumpEnabled	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	jumpEnabled$/;"	c
jumpMode	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type jumpMode int$/;"	t
keyMatch	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func keyMatch(key int, event tui.Event) bool {$/;"	f
keyboard_hack_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar keyboard_hack_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
keyboardhackchar	zsh/.zplugin/bin/zmodules/Src/params.c	/^unsigned char keyboardhackchar = '\\0';$/;"	v
kill	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killPreview	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f
killjb	zsh/.zplugin/bin/zmodules/Src/signals.c	/^killjb(Job jn, int sig)$/;"	f
killpg	zsh/.zplugin/bin/zmodules/Src/signals.h	33;"	d
killrunjobs	zsh/.zplugin/bin/zmodules/Src/signals.c	/^killrunjobs(int from_signal)$/;"	f
kshletters	zsh/.zplugin/bin/zmodules/Src/options.c	/^static short kshletters[LAST_OPT - FIRST_OPT + 1] = {$/;"	v	file:
l	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    zlong l;$/;"	m	union:mem_align	file:
l	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    long l;$/;"	m	union:upat	file:
l	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	zlong l;$/;"	m	union:__anon13::__anon14
lang_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar lang_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
langsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^langsetfn(Param pm, char *x)$/;"	f
last	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    struct buf_vars *last;$/;"	m	struct:buf_vars	typeref:struct:buf_vars::buf_vars	file:
last	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^  long last;$/;"	m	struct:wcwidth9_interval
last	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkNode last;$/;"	m	struct:linklist
lastChunk	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f
last_heap_id	zsh/.zplugin/bin/zmodules/Src/mem.c	/^mod_export Heapid last_heap_id;$/;"	v
last_signal	zsh/.zplugin/bin/zmodules/Src/signals.c	/^int last_signal;$/;"	v
lastht	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static HashTable firstht, lastht;$/;"	v	file:
lastmailcheck	zsh/.zplugin/bin/zmodules/Src/utils.c	/^time_t lastmailcheck;$/;"	v
lastnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	579;"	d
lastpid	zsh/.zplugin/bin/zmodules/Src/params.c	/^     lastpid,		\/* $!           *\/$/;"	v
lastval	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int zoptind, lastval, optcind, numpipestats;$/;"	m	struct:funcsave	file:
lastval	zsh/.zplugin/bin/zmodules/Src/params.c	/^zlong lastval,		\/* $?           *\/$/;"	v
lastval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int lastval;$/;"	m	struct:execstack
lastval2	zsh/.zplugin/bin/zmodules/Src/exec.c	/^long lastval2;$/;"	v
lastwatch	zsh/.zplugin/bin/zmodules/Src/utils.c	/^time_t lastwatch;$/;"	v
layoutDefault	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c
layoutReverse	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	layoutReverse$/;"	c
layoutReverseList	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	layoutReverseList$/;"	c
layoutType	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type layoutType int$/;"	t
lc_all_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar lc_all_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
lc_allsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^lc_allsetfn(Param pm, char *x)$/;"	f
lc_blah_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar lc_blah_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
lc_names	zsh/.zplugin/bin/zmodules/Src/params.c	/^} lc_names[] = {$/;"	v	typeref:struct:localename	file:
lchdir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^lchdir(char const *path, struct dirsav *d, int hard)$/;"	f
lchown	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	715;"	d
lcsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^lcsetfn(Param pm, char *x)$/;"	f
left	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eccstr left, right;$/;"	m	struct:eccstr
len	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    zlong len;			\/* length of memory block *\/$/;"	m	struct:m_hdr	file:
len	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode len;		\/* length of wordcode\/strings *\/$/;"	m	struct:fdhead	file:
len	zsh/.zplugin/bin/zmodules/Src/utils.c	/^    size_t len;$/;"	m	struct:widechar_array	file:
len	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode len;		\/* length of wordcode\/strings *\/$/;"	m	struct:fdhead	file:
len	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int len;			\/* length *\/$/;"	m	struct:funcdump
len	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int len;			\/* total block length *\/$/;"	m	struct:eprog
len	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int len;$/;"	m	struct:lexbufstate
len	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int len;$/;"	m	struct:sortelt
level	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int level;			\/* if (old != NULL), level of localness  *\/$/;"	m	struct:iparam	file:
level	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int dirfd, level;$/;"	m	struct:dirsav
level	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int level;			\/* if (old != NULL), level of localness  *\/$/;"	m	struct:param
lex_add_raw	zsh/.zplugin/bin/zmodules/Src/lex.c	/^int lex_add_raw;$/;"	v
lex_add_raw	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int lex_add_raw;$/;"	m	struct:lex_stack
lex_context_restore	zsh/.zplugin/bin/zmodules/Src/lex.c	/^lex_context_restore(const struct lex_stack *ls, int toplevel)$/;"	f
lex_context_save	zsh/.zplugin/bin/zmodules/Src/lex.c	/^lex_context_save(struct lex_stack *ls, int toplevel)$/;"	f
lex_stack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct lex_stack {$/;"	s
lexact1	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static unsigned char lexact1[256], lexact2[256], lextok2[256];$/;"	v	file:
lexact2	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static unsigned char lexact1[256], lexact2[256], lextok2[256];$/;"	v	file:
lexbuf	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static struct lexbufstate lexbuf = { NULL, 256, 0 };$/;"	v	typeref:struct:lexbufstate	file:
lexbuf	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct lexbufstate lexbuf;$/;"	m	struct:lex_stack	typeref:struct:lex_stack::lexbufstate
lexbuf_raw	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static struct lexbufstate lexbuf_raw;$/;"	v	typeref:struct:lexbufstate	file:
lexbuf_raw	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct lexbufstate lexbuf_raw;$/;"	m	struct:lex_stack	typeref:struct:lex_stack::lexbufstate
lexbufstate	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct lexbufstate {$/;"	s
lexflags	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int lexflags;$/;"	v
lexflags	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int lexflags;$/;"	m	struct:lex_stack
lexinit	zsh/.zplugin/bin/zmodules/Src/lex.c	/^lexinit(void)$/;"	f
lexstop	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int lexstop;$/;"	v
lexstop	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int lexstop;$/;"	m	struct:lex_stack
lextok	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum lextok {$/;"	g
lextok2	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static unsigned char lexact1[256], lexact2[256], lextok2[256];$/;"	v	file:
limits	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export struct rlimit current_limits[RLIM_NLIMITS], limits[RLIM_NLIMITS];$/;"	v	typeref:struct:
lineno	zsh/.zplugin/bin/zmodules/Src/params.c	/^zlong lineno,		\/* $LINENO      *\/$/;"	v
lineno	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong lineno;		\/* line number in above file *\/$/;"	m	struct:shfunc
lineno	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong lineno;		\/* line offset from beginning of function *\/$/;"	m	struct:funcstack
link_fzf_in_path	zsh/.zplugin/plugins/junegunn---fzf/install	/^link_fzf_in_path() {$/;"	f
linked	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	Linkedmod linked;$/;"	m	union:module::__anon26
linkedmod	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct linkedmod {$/;"	s
linkedmodules	zsh/.zplugin/bin/zmodules/Src/module.c	/^LinkList linkedmodules;$/;"	v
linklist	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct linklist {$/;"	s
linknode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct linknode {$/;"	s
linkroot	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^union linkroot {$/;"	u
links	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long links;$/;"	m	struct:gmatch	file:
list	zsh/.zplugin/bin/zmodules/Src/signals.c	/^    void *list;$/;"	m	struct:savetrap	file:
list	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct linklist list;$/;"	m	union:linkroot	typeref:struct:linkroot::linklist
list_emulate_options	zsh/.zplugin/bin/zmodules/Src/options.c	/^void list_emulate_options(char *cmdopts, int fully)$/;"	f
list_pipe	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int list_pipe = 0, simple_pline = 0;$/;"	v
list_pipe_child	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int list_pipe_child = 0, list_pipe_job;$/;"	v	file:
list_pipe_child	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int list_pipe_child;$/;"	m	struct:execstack
list_pipe_job	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int list_pipe_child = 0, list_pipe_job;$/;"	v	file:
list_pipe_job	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int list_pipe_job;$/;"	m	struct:execstack
list_pipe_pid	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static pid_t list_pipe_pid;$/;"	v	file:
list_pipe_pid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t list_pipe_pid;$/;"	m	struct:execstack
list_pipe_start	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static struct timeval list_pipe_start;$/;"	v	typeref:struct:timeval	file:
list_pipe_text	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static char list_pipe_text[JOBTEXTSIZE];$/;"	v	file:
list_pipe_text	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char list_pipe_text[JOBTEXTSIZE];$/;"	m	struct:execstack
listusermathfunc	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^listusermathfunc(MathFunc p)$/;"	f	file:
load_and_bind	zsh/.zplugin/bin/zmodules/Src/module.c	/^load_and_bind(const char *fn)$/;"	f	file:
load_dump_file	zsh/.zplugin/bin/zmodules/Src/parse.c	/^load_dump_file(char *dump, struct stat *sbuf, int other, int len)$/;"	f	file:
load_dump_header	zsh/.zplugin/bin/zmodules/Src/parse.c	/^load_dump_header(char *nam, char *name, int err)$/;"	f	file:
load_error	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    int load_error;$/;"	m	struct:source_event	file:
load_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^load_module(char const *name, Feature_enables enablesarr, int silent)$/;"	f
loadautofn	zsh/.zplugin/bin/zmodules/Src/exec.c	/^loadautofn(Shfunc shf, int fksh, int autol, int current_fpath)$/;"	f
loadautofnsetfile	zsh/.zplugin/bin/zmodules/Src/exec.c	/^loadautofnsetfile(Shfunc shf, char *fdir)$/;"	f	file:
local	zsh/.zplugin/bin/zmodules/Src/signals.c	/^    int sig, flags, local, posix;$/;"	m	struct:savetrap	file:
local_list0	zsh/.zplugin/bin/zmodules/Src/zsh.h	601;"	d
local_list1	zsh/.zplugin/bin/zmodules/Src/zsh.h	608;"	d
localename	zsh/.zplugin/bin/zmodules/Src/params.c	/^static struct localename {$/;"	s	file:
locallevel	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export int locallevel;$/;"	v
loop	zsh/.zplugin/bin/zmodules/Src/init.c	/^loop(int toplevel, int justonce)$/;"	f
loop_return	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum loop_return {$/;"	g
loops	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
loops	zsh/.zplugin/bin/zmodules/Src/loop.c	/^int loops;$/;"	v
lstat	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	699;"	d
m_b	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int m_s = 0, m_b = 0;$/;"	v	file:
m_f	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int m_m[1025], m_f[1025];$/;"	v	file:
m_free	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static struct m_hdr *m_lfree, *m_free;$/;"	v	typeref:struct:	file:
m_hdr	zsh/.zplugin/bin/zmodules/Src/mem.c	/^struct m_hdr {$/;"	s	file:
m_high	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static char *m_high, *m_low;$/;"	v	file:
m_l	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static struct m_hdr *m_l;$/;"	v	typeref:struct:m_hdr	file:
m_lfree	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static struct m_hdr *m_lfree, *m_free;$/;"	v	typeref:struct:m_hdr	file:
m_low	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static char *m_high, *m_low;$/;"	v	file:
m_m	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int m_m[1025], m_f[1025];$/;"	v	file:
m_pgsz	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static long m_pgsz = 0;$/;"	v	file:
m_s	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static int m_s = 0, m_b = 0;$/;"	v	file:
m_shdr	zsh/.zplugin/bin/zmodules/Src/mem.c	/^struct m_shdr {$/;"	s	file:
m_small	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static struct m_hdr *m_small[M_NSMALL];$/;"	v	typeref:struct:m_hdr	file:
mailpath	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **mailpath,	\/* $mailpath    *\/$/;"	v
mailstat	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mailstat(char *path, struct stat *st)$/;"	f
mailstat	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	781;"	d
main	zsh/.zplugin/bin/zmodules/config.guess	/^		main()$/;"	f
main	zsh/.zplugin/bin/zmodules/config.guess	/^	main ()$/;"	f
main	zsh/.zplugin/bin/zmodules/config.guess	/^main ()$/;"	f
main	zsh/.zplugin/plugins/junegunn---fzf/main.go	/^func main() {$/;"	f
main	zsh/.zplugin/plugins/junegunn---fzf/main.go	/^package main$/;"	p
makeSpace	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f
makebangspecial	zsh/.zplugin/bin/zmodules/Src/utils.c	/^makebangspecial(int yesno)$/;"	f
makecline	zsh/.zplugin/bin/zmodules/Src/exec.c	/^makecline(LinkList list)$/;"	f	file:
makecommaspecial	zsh/.zplugin/bin/zmodules/Src/utils.c	/^makecommaspecial(int yesno)$/;"	f
makerunning	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^makerunning(Job jn)$/;"	f
malloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^malloc(MALLOC_ARG_T size)$/;"	f
manpath	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **manpath,		\/* $manpath     *\/$/;"	v
map	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode map;		\/* pointer to header *\/$/;"	m	struct:funcdump
mask_off	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int mask_off;$/;"	m	struct:highlight	file:
mask_on	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int mask_on;$/;"	m	struct:highlight	file:
matchChunk	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f
match_colour	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^match_colour(const char **teststrp, int is_fg, int colour)$/;"	f
match_count	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^          def match_count$/;"	f	class:Tmux.until
match_highlight	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^match_highlight(const char *teststr, int *on_var)$/;"	f
match_named_colour	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^match_named_colour(const char **teststrp)$/;"	f	file:
matchbuf	zsh/.zplugin/bin/zmodules/Src/glob.c	203;"	d	file:
matchct	zsh/.zplugin/bin/zmodules/Src/glob.c	200;"	d	file:
matchednodes	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static LinkList matchednodes;$/;"	v	file:
matchpat	zsh/.zplugin/bin/zmodules/Src/glob.c	/^matchpat(char *a, char *b)$/;"	f
matchptr	zsh/.zplugin/bin/zmodules/Src/glob.c	204;"	d	file:
matchsz	zsh/.zplugin/bin/zmodules/Src/glob.c	199;"	d	file:
mathfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct mathfunc {$/;"	s
mathfuncs	zsh/.zplugin/bin/zmodules/Src/module.c	/^MathFunc mathfuncs;$/;"	v
max	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int max;			\/* maximum number of strings          *\/$/;"	m	struct:conddef
maxDisplayWidthCalc	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	maxDisplayWidthCalc = 1024$/;"	c
maxItems	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f
maxPartitions	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c
maxPatternLength	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c
max_zsh_fd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int max_zsh_fd;$/;"	v
maxargs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int maxargs;		\/* maximum number of arguments, or -1 for no limit    *\/$/;"	m	struct:builtin
maxargs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int maxargs;$/;"	m	struct:mathfunc
maxjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int maxjob;$/;"	v
maybeshrinkjobtab	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^maybeshrinkjobtab(void)$/;"	f
mb_charinit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_charinit(void)$/;"	f
mb_charlenconv	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_charlenconv(const char *s, int slen, wint_t *wcp)$/;"	f
mb_charlenconv_r	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_charlenconv_r(const char *s, int slen, wint_t *wcp, mbstate_t *mbsp)$/;"	f
mb_metacharlenconv	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_metacharlenconv(const char *s, wint_t *wcp)$/;"	f
mb_metacharlenconv_r	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_metacharlenconv_r(const char *s, wint_t *wcp, mbstate_t *mbsp)$/;"	f
mb_metastrlenend	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_metastrlenend(char *ptr, int width, char *eptr)$/;"	f
mb_niceformat	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mb_niceformat(const char *s, FILE *stream, char **outstrp, int flags)$/;"	f
mb_patmatchindex	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^mb_patmatchindex(char *range, wint_t ind, wint_t *chr, int *mtp)$/;"	f
mb_patmatchrange	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^mb_patmatchrange(char *range, wchar_t ch, int zmb_ind, wint_t *indptr, int *mtp)$/;"	f
mb_shiftstate	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static mbstate_t mb_shiftstate;$/;"	v	file:
mem_align	zsh/.zplugin/bin/zmodules/Src/mem.c	/^union mem_align {$/;"	u	file:
memcpy	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	719;"	d
memmove	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	725;"	d
memory_validate	zsh/.zplugin/bin/zmodules/Src/mem.c	/^memory_validate(Heapid heap_id)$/;"	f
mergedGet	zsh/.zplugin/plugins/junegunn---fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f
mergerCacheMax	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c
metacharinc	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^metacharinc(char **x)$/;"	f	file:
metacharlenconv	zsh/.zplugin/bin/zmodules/Src/utils.c	/^metacharlenconv(const char *x, int *c)$/;"	f
metafy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^metafy(char *buf, int len, int heap)$/;"	f
metalen	zsh/.zplugin/bin/zmodules/Src/utils.c	/^metalen(const char *s, int len)$/;"	f
mf_list	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MathFunc mf_list;$/;"	m	struct:features
mf_size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int mf_size;$/;"	m	struct:features
min	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int min;			\/* minimum number of strings          *\/$/;"	m	struct:conddef
minHeight	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	minHeight = 4$/;"	c
minItem	zsh/.zplugin/plugins/junegunn---fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v
minRank	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^func minRank() Result {$/;"	f
minWidth	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	minWidth  = 16$/;"	c
minargs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int minargs;		\/* minimum number of arguments                        *\/$/;"	m	struct:builtin
minargs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int minargs;$/;"	m	struct:mathfunc
mindist	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mindist(char *dir, char *mindistguess, char *mindistbest, int wantdir)$/;"	f	file:
minimum	zsh/.zplugin/bin/zmodules/Src/zsh.h	31;"	d
mkarray	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mkarray(char *s)$/;"	f
mkautofn	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mkautofn(Shfunc shf)$/;"	f
mkenvstr	zsh/.zplugin/bin/zmodules/Src/params.c	/^mkenvstr(char *name, char *value, int flags)$/;"	f	file:
mlen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int mlen;$/;"	m	struct:imatchdata
mmap_heap_alloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^mmap_heap_alloc(size_t *n)$/;"	f	file:
mnsec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long mnsec;$/;"	m	struct:gmatch	file:
mnumber	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^} mnumber;$/;"	t	typeref:struct:__anon13
mod	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
mod	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualmodeflags(UNUSED(char *name), struct stat *buf, off_t mod, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
mode_to_octal	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mode_to_octal(mode_t mode)$/;"	f
modname_ok	zsh/.zplugin/bin/zmodules/Src/module.c	/^modname_ok(char const *p)$/;"	f	file:
module	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module module;$/;"	m	struct:funcwrap
module	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *module;		\/* module to autoload                 *\/$/;"	m	struct:conddef
module	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *module;$/;"	m	struct:mathfunc
module	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct module {$/;"	s
module_features	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static struct features module_features =$/;"	v	typeref:struct:features	file:
module_func	zsh/.zplugin/bin/zmodules/Src/module.c	/^module_func(Module m, char *name)$/;"	f	file:
module_linked	zsh/.zplugin/bin/zmodules/Src/module.c	/^module_linked(char const *name)$/;"	f
module_loaded	zsh/.zplugin/bin/zmodules/Src/module.c	/^module_loaded(const char *name)$/;"	f
module_path	zsh/.zplugin/bin/zmodules/Src/module.c	/^char **module_path;$/;"	v
modulestab	zsh/.zplugin/bin/zmodules/Src/module.c	/^mod_export HashTable modulestab;$/;"	v
mouseSequence	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f
move	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f
move	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f
movefd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^movefd(int fd)$/;"	f
mpipe	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mpipe(int *pp)$/;"	f	file:
mstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *mstr;$/;"	m	struct:imatchdata
mtime	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    long mtime;$/;"	m	struct:gmatch	file:
multio	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct multio {$/;"	s
munged_here_terminator	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *munged_here_terminator;$/;"	m	struct:redir
mustoff	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long		mustoff;   \/* offset to string that must be present *\/$/;"	m	struct:patprog
my_ztrdup_glen	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^my_ztrdup_glen( const char *s, unsigned *len_ret )$/;"	f
mypgrp	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export pid_t mypgrp;$/;"	v
mypid	zsh/.zplugin/bin/zmodules/Src/params.c	/^     mypid,		\/* $$           *\/$/;"	v
n_abstract	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int n_abstract;$/;"	m	struct:features
n_off_opts	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int n_off_opts;$/;"	m	struct:emulation_options
n_on_opts	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int n_on_opts;$/;"	m	struct:emulation_options
nam	zsh/.zplugin/bin/zmodules/Src/params.c	/^    char *nam;			\/* hash data                             *\/$/;"	m	struct:iparam	file:
nam	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *nam;			\/* hash key           *\/$/;"	m	struct:hashnode
name	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *name;$/;"	m	struct:gmatch	file:
name	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^    char *name;$/;"	m	struct:dircache_entry	file:
name	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^    const char *name;$/;"	m	struct:__anon6	file:
name	zsh/.zplugin/bin/zmodules/Src/params.c	/^    char *name;$/;"	m	struct:localename	file:
name	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    char *name;$/;"	m	struct:wcfunc	file:
name	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    const char *name;$/;"	m	struct:highlight	file:
name	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    const char *name;$/;"	m	struct:zp_option_name	file:
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char **name;		\/* full pathname for external commands *\/$/;"	m	union:cmdnam::__anon23
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char *name; \/* Name of file to delete *\/$/;"	m	union:jobfile::__anon20
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;			\/* name of function\/sourced file called *\/$/;"	m	struct:funcstack
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;			\/* the condition name                 *\/$/;"	m	struct:conddef
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:__anon34
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:asgment
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:hookdef
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:linkedmod
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:mathfunc
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:paramdef
name	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *name;$/;"	m	struct:redir
nameddir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct nameddir {$/;"	s
namedpipe	zsh/.zplugin/bin/zmodules/Src/exec.c	/^namedpipe(void)$/;"	f	file:
newItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f
newRange	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f
new_heap_id	zsh/.zplugin/bin/zmodules/Src/mem.c	/^new_heap_id(void)$/;"	f	file:
new_heaps	zsh/.zplugin/bin/zmodules/Src/mem.c	/^new_heaps(void)$/;"	f
new_optarg	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^new_optarg(Options ops)$/;"	f	file:
new_shell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBase.TestBash
new_shell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBase.TestFish
new_shell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBase.TestZsh
newhashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^newhashtable(int size, UNUSED(char const *name), UNUSED(PrintTableStats printinfo))$/;"	f
newmoduletable	zsh/.zplugin/bin/zmodules/Src/module.c	/^newmoduletable(int size, char const *name)$/;"	f
newparamtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^newparamtable(int size, char const *name)$/;"	f
newuniqtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^newuniqtable(zlong size)$/;"	f
next	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    Complist next;$/;"	m	struct:complist	file:
next	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    struct qual *next;		\/* Next qualifier, must match                *\/$/;"	m	struct:qual	typeref:struct:qual::qual	file:
next	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    struct m_hdr *next;		\/* if free: next on free list$/;"	m	struct:m_hdr	typeref:struct:m_hdr::m_hdr	file:
next	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    struct m_shdr *next;	\/* next one on free list *\/$/;"	m	struct:m_shdr	typeref:struct:m_shdr::m_shdr	file:
next	zsh/.zplugin/bin/zmodules/Src/params.c	/^    struct hashnode *next;$/;"	m	struct:iparam	typeref:struct:iparam::hashnode	file:
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Conddef next;		\/* next in list                       *\/$/;"	m	struct:conddef
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FuncDump next;		\/* next in list *\/$/;"	m	struct:funcdump
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    FuncWrap next;$/;"	m	struct:funcwrap
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HashNode next;		\/* next in hash chain *\/$/;"	m	struct:hashnode
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Hookdef next;$/;"	m	struct:hookdef
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkNode next;$/;"	m	struct:linknode
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    MathFunc next;$/;"	m	struct:mathfunc
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct execstack *next;$/;"	m	struct:execstack	typeref:struct:execstack::execstack
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct heap *next;		\/* next one                                  *\/$/;"	m	struct:heap	typeref:struct:heap::heap
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct heapstack *next;	\/* next one in list for this heap *\/$/;"	m	struct:heapstack	typeref:struct:heapstack::heapstack
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct heredocs *next;$/;"	m	struct:heredocs	typeref:struct:heredocs::heredocs
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct process *next;$/;"	m	struct:process	typeref:struct:process::process
next	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct zpc_disables_save *next;$/;"	m	struct:zpc_disables_save	typeref:struct:zpc_disables_save::zpc_disables_save
next	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func (h *History) next() string {$/;"	f
nextInt	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f
nextString	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f
next_heap_id	zsh/.zplugin/bin/zmodules/Src/mem.c	/^static Heapid next_heap_id = (Heapid)1;$/;"	v	file:
nextfdhead	zsh/.zplugin/bin/zmodules/Src/parse.c	3057;"	d	file:
nextfdhead	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	490;"	d	file:
nextnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	590;"	d
nfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    NumMathFunc nfunc;$/;"	m	struct:mathfunc
nfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int nfunc;$/;"	m	struct:eccstr
nicechar	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicechar(int c)$/;"	f
nicechar_sel	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicechar_sel(int c, int quotable)$/;"	f
nicedup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicedup(char const *s, int heap)$/;"	f
nicedup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicedup(const char *s, int heap)$/;"	f
nicedupstring	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicedupstring(char const *s)$/;"	f
nicezputs	zsh/.zplugin/bin/zmodules/Src/utils.c	/^nicezputs(char const *s, FILE *stream)$/;"	f
nicezputs	zsh/.zplugin/bin/zmodules/Src/zsh.h	3204;"	d
niceztrlen	zsh/.zplugin/bin/zmodules/Src/utils.c	/^niceztrlen(char const *s)$/;"	f
noaliases	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int noaliases;$/;"	v
nocomments	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int nocomments;$/;"	v
nocorrect	zsh/.zplugin/bin/zmodules/Src/lex.c	/^int nocorrect;$/;"	v
node	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    struct hashnode node;$/;"	m	struct:zp_sevent_node	typeref:struct:zp_sevent_node::hashnode	file:
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:alias	typeref:struct:alias::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:builtin	typeref:struct:builtin::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:cmdnam	typeref:struct:cmdnam::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:histent	typeref:struct:histent::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:module	typeref:struct:module::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:nameddir	typeref:struct:nameddir::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:optname	typeref:struct:optname::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:param	typeref:struct:param::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:reswd	typeref:struct:reswd::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct hashnode node;$/;"	m	struct:shfunc	typeref:struct:shfunc::hashnode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct linknode node;$/;"	m	struct:asgment	typeref:struct:asgment::linknode
node	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct linknode node;$/;"	m	union:linkroot	typeref:struct:linkroot::linknode
nodes	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    HashNode *nodes;		\/* array of size hsize                        *\/$/;"	m	struct:hashtable
noerrexit	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
noerrexit	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int noerrexit;$/;"	v
noerrexit_bits	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum noerrexit_bits {$/;"	g
noerrs	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int noerrs;$/;"	v
noerrs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int noerrs;$/;"	m	struct:execstack
noeval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int noeval;$/;"	m	struct:execstack
noexitct	zsh/.zplugin/bin/zmodules/Src/init.c	/^int noexitct = 0;$/;"	v
nohistsave	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int nohistsave;$/;"	v
noholdintr	zsh/.zplugin/bin/zmodules/Src/signals.c	/^noholdintr(void)$/;"	f
nonempty	zsh/.zplugin/bin/zmodules/Src/zsh.h	586;"	d
noop_function	zsh/.zplugin/bin/zmodules/Src/init.c	/^noop_function(void)$/;"	f
noquery	zsh/.zplugin/bin/zmodules/Src/utils.c	/^noquery(int purge)$/;"	f
normalizeRune	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f
normalized	zsh/.zplugin/plugins/junegunn---fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v
notifyOnCont	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f
notifyOnCont	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyOnResize	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f
notifyStop	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f
notifyStop	zsh/.zplugin/plugins/junegunn---fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f
nowait	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int nowait, pline_level = 0;$/;"	v	file:
nowait	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int nowait;$/;"	m	struct:execstack
npats	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode npats;		\/* number of patterns needed *\/$/;"	m	struct:fdhead	file:
npats	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode npats;		\/* number of patterns needed *\/$/;"	m	struct:fdhead	file:
npats	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int npats;			\/* Patprog cache size *\/$/;"	m	struct:eprog
nref	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int nref;			\/* number of references: delete when zero *\/$/;"	m	struct:eprog
nsigtrapped	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int nsigtrapped;$/;"	v
nular	zsh/.zplugin/bin/zmodules/Src/params.c	/^static char *nular[] = {"", NULL};$/;"	v	file:
nullarray	zsh/.zplugin/bin/zmodules/Src/params.c	/^static char *nullarray = NULL;$/;"	v	file:
nullcmd	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *nullcmd,		\/* $NULLCMD     *\/$/;"	v
nullsethash_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_hash nullsethash_gsu =$/;"	v	typeref:struct:gsu_hash
nullsetinteger_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_integer nullsetinteger_gsu =$/;"	v	typeref:struct:gsu_integer
nullsetscalar_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_scalar nullsetscalar_gsu =$/;"	v	typeref:struct:gsu_scalar
num	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^    int num;$/;"	m	struct:__anon6	file:
num	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int num;$/;"	m	struct:__anon35
numLinesMax	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func numLinesMax(str string, max int) int {$/;"	f
numPartitionsMultiplier	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c
numparamvals	zsh/.zplugin/bin/zmodules/Src/params.c	/^static unsigned numparamvals;$/;"	v	file:
numpipestats	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int zoptind, lastval, optcind, numpipestats;$/;"	m	struct:funcsave	file:
numpipestats	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^int numpipestats, pipestats[MAX_PIPESTATS];$/;"	v
nwords	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int nwords;			\/* Number of words in history line  *\/$/;"	m	struct:histent
off_opts	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OptIndex *off_opts;$/;"	m	struct:emulation_options
offs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    wordcode offs, aoffs;$/;"	m	struct:eccstr
offsetPollTries	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c
offsetRegexp	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v
offsetof	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	730;"	d
oflags	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
old	zsh/.zplugin/bin/zmodules/Src/params.c	/^    Param old;			\/* old struct for use with local         *\/$/;"	m	struct:iparam	file:
old	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Param old;			\/* old struct for use with local         *\/$/;"	m	struct:param
old_heaps	zsh/.zplugin/bin/zmodules/Src/mem.c	/^old_heaps(Heap old)$/;"	f
oldjobtab	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static struct job *oldjobtab;$/;"	v	typeref:struct:job	file:
oldmaxjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static int oldmaxjob;$/;"	v	file:
oldpwd	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *oldpwd,		\/* $OLDPWD      *\/$/;"	v
on_opts	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    OptIndex *on_opts;$/;"	m	struct:emulation_options
open	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
openTtyIn	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func openTtyIn() *os.File {$/;"	f
ops	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_dirs(UNUSED(char *name), char **argv, Options ops, UNUSED(int func))$/;"	v
ops	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_pwd(UNUSED(char *name), UNUSED(char **argv), Options ops, UNUSED(int func))$/;"	v
ops	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^bin_ttyctl(UNUSED(char *name), UNUSED(char **argv), Options ops, UNUSED(int func))$/;"	v
optString	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f
optcind	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^int optcind;$/;"	v
optcind	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int zoptind, lastval, optcind, numpipestats;$/;"	m	struct:funcsave	file:
optionalNextString	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func optionalNextString(args []string, i *int) string {$/;"	f
optionalNumeric	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func optionalNumeric(args []string, i *int) int {$/;"	f
optionalRunes	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f
options	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct options {$/;"	s
optiontab	zsh/.zplugin/bin/zmodules/Src/options.c	/^mod_export HashTable optiontab;$/;"	v
optletters	zsh/.zplugin/bin/zmodules/Src/options.c	283;"	d	file:
optlookup	zsh/.zplugin/bin/zmodules/Src/options.c	/^optlookup(char const *name)$/;"	f
optlookupc	zsh/.zplugin/bin/zmodules/Src/options.c	/^optlookupc(char c)$/;"	f
optname	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct optname {$/;"	s
optno	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int optno;			\/* option number *\/$/;"	m	struct:optname
optns	zsh/.zplugin/bin/zmodules/Src/options.c	/^static struct optname optns[] = {$/;"	v	typeref:struct:optname	file:
opts	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    char opts[OPT_SIZE];$/;"	m	struct:funcsave	file:
opts	zsh/.zplugin/bin/zmodules/Src/options.c	/^mod_export char opts[OPT_SIZE];$/;"	v
opts	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let opts['sink*'] = remove(opts, 'sink')$/;"	v
optsFor	zsh/.zplugin/plugins/junegunn---fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f
optstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *optstr;		\/* string of legal options                            *\/$/;"	m	struct:builtin
or	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    struct qual *or;		\/* Alternative set of qualifiers to match    *\/$/;"	m	struct:qual	typeref:struct:qual::qual	file:
orig	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *orig;$/;"	m	struct:sortelt
origin	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f
originalDot	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static HandlerFunc originalDot = NULL, originalSource = NULL;$/;"	v	file:
originalSource	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static HandlerFunc originalDot = NULL, originalSource = NULL;$/;"	v	file:
origlen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int origlen;$/;"	m	struct:sortelt
origpgrp	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export pid_t origpgrp;$/;"	v
other	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t other;		\/* subjob id (SUPERJOB)$/;"	m	struct:job
output	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f
output64	zsh/.zplugin/bin/zmodules/Src/compat.c	/^output64(zlong val)$/;"	f
output_colour	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^output_colour(int colour, int fg_bg, int use_tc, char *buf)$/;"	f	file:
output_highlight	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^output_highlight(int atr, char *buf)$/;"	f
outtable	zsh/.zplugin/bin/zmodules/Src/params.c	/^static HashTable outtable;$/;"	v	file:
overflow	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f
overflow32	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c
overflow64	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c
override	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f
p	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    unsigned char *p;$/;"	m	union:upat	file:
par_case	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_case(int *cmplx)$/;"	f	file:
par_cmd	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cmd(int *cmplx, int zsh_construct)$/;"	f	file:
par_cond	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond(void)$/;"	f	file:
par_cond_1	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond_1(void)$/;"	f	file:
par_cond_2	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond_2(void)$/;"	f	file:
par_cond_double	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond_double(char *a, char *b)$/;"	f	file:
par_cond_multi	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond_multi(char *a, LinkList l)$/;"	f	file:
par_cond_triple	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_cond_triple(char *a, char *b, char *c)$/;"	f	file:
par_dinbrack	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_dinbrack(void)$/;"	f	file:
par_event	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_event(int endtok)$/;"	f
par_for	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_for(int *cmplx)$/;"	f	file:
par_funcdef	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_funcdef(int *cmplx)$/;"	f	file:
par_if	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_if(int *cmplx)$/;"	f	file:
par_list	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_list(int *cmplx)$/;"	f	file:
par_list1	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_list1(int *cmplx)$/;"	f	file:
par_nl_wordlist	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_nl_wordlist(void)$/;"	f	file:
par_pline	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_pline(int *cmplx)$/;"	f	file:
par_redir	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_redir(int *rp, char *idstring)$/;"	f	file:
par_repeat	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_repeat(int *cmplx)$/;"	f	file:
par_save_list	zsh/.zplugin/bin/zmodules/Src/parse.c	443;"	d	file:
par_save_list1	zsh/.zplugin/bin/zmodules/Src/parse.c	449;"	d	file:
par_simple	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_simple(int *cmplx, int nr)$/;"	f	file:
par_sublist	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_sublist(int *cmplx)$/;"	f	file:
par_sublist2	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_sublist2(int *cmplx)$/;"	f	file:
par_subsh	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_subsh(int *cmplx, int zsh_construct)$/;"	f	file:
par_time	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_time(void)$/;"	f	file:
par_while	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_while(int *cmplx)$/;"	f	file:
par_wordlist	zsh/.zplugin/bin/zmodules/Src/parse.c	/^par_wordlist(void)$/;"	f	file:
param	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct param {$/;"	s
paramdef	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct paramdef {$/;"	s
paramtab	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export HashTable paramtab, realparamtab;$/;"	v
paramtypes	zsh/.zplugin/bin/zmodules/Src/params.c	/^struct paramtypes {$/;"	s	file:
paramtypes_flags	zsh/.zplugin/bin/zmodules/Src/params.c	/^enum paramtypes_flags {$/;"	g	file:
paramvalarr	zsh/.zplugin/bin/zmodules/Src/params.c	/^paramvalarr(HashTable ht, int flags)$/;"	f
paramvals	zsh/.zplugin/bin/zmodules/Src/params.c	/^static char **paramvals;$/;"	v	file:
parbegin	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int parbegin;$/;"	v
parend	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int parend;$/;"	v
parseAlgo	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f
parseHeight	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f
parseKeyChords	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseKeyChords(str string, message string) map[int]string {$/;"	f
parseKeymap	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseKeymap(keymap map[int][]action, str string) {$/;"	f
parseLayout	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f
parseMargin	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseMargin(margin string) [4]sizeSpec {$/;"	f
parseOptions	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f
parsePlaceholder	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f
parsePreviewWindow	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f
parseSize	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f
parseTerms	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f
parseTheme	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f
parseTiebreak	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f
parseToggleSort	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func parseToggleSort(keymap map[int][]action, str string) {$/;"	f
parse_cond	zsh/.zplugin/bin/zmodules/Src/parse.c	/^parse_cond(void)$/;"	f
parse_context_restore	zsh/.zplugin/bin/zmodules/Src/parse.c	/^parse_context_restore(const struct parse_stack *ps, int toplevel)$/;"	f
parse_context_save	zsh/.zplugin/bin/zmodules/Src/parse.c	/^parse_context_save(struct parse_stack *ps, int toplevel)$/;"	f
parse_event	zsh/.zplugin/bin/zmodules/Src/parse.c	/^parse_event(int endtok)$/;"	f
parse_list	zsh/.zplugin/bin/zmodules/Src/parse.c	/^parse_list(void)$/;"	f
parse_stack	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct parse_stack {$/;"	s
parse_string	zsh/.zplugin/bin/zmodules/Src/exec.c	/^parse_string(char *s, int reset_lineno)$/;"	f
parse_subscript	zsh/.zplugin/bin/zmodules/Src/lex.c	/^parse_subscript(char *s, int sub, int endchar)$/;"	f
parse_subst_string	zsh/.zplugin/bin/zmodules/Src/lex.c	/^parse_subst_string(char *s)$/;"	f
parseargs	zsh/.zplugin/bin/zmodules/Src/init.c	/^parseargs(char *zsh_name, char **argv, char **runscript, char **cmdptr)$/;"	f	file:
parsecmd	zsh/.zplugin/bin/zmodules/Src/exec.c	/^parsecmd(char *cmd, char **eptr)$/;"	f	file:
parsecolorchar	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^parsecolorchar(int arg, int is_fg)$/;"	f	file:
parsecomplist	zsh/.zplugin/bin/zmodules/Src/glob.c	/^parsecomplist(char *instr)$/;"	f	file:
parseopts	zsh/.zplugin/bin/zmodules/Src/init.c	/^parseopts(char *nam, char ***argvp, char *new_opts, char **cmdp,$/;"	f
parseopts_insert	zsh/.zplugin/bin/zmodules/Src/init.c	/^parseopts_insert(LinkList optlist, char *base, int optno)$/;"	f	file:
parseopts_setemulate	zsh/.zplugin/bin/zmodules/Src/init.c	/^static void parseopts_setemulate(char *nam, int flags)$/;"	f	file:
parsepat	zsh/.zplugin/bin/zmodules/Src/glob.c	/^parsepat(char *str)$/;"	f	file:
parsestr	zsh/.zplugin/bin/zmodules/Src/lex.c	/^parsestr(char **s)$/;"	f
parsestrnoerr	zsh/.zplugin/bin/zmodules/Src/lex.c	/^parsestrnoerr(char **s)$/;"	f
parsfound	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    int parsfound;		\/* parentheses (with backrefs) found *\/$/;"	m	struct:rpat	file:
parsfound	zsh/.zplugin/bin/zmodules/Src/pattern.c	1881;"	d	file:
partialResult	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^type partialResult struct {$/;"	t
paste	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
paste_string	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def paste_string(str)$/;"	f	class:TerminalSession
pat	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    Patprog pat;$/;"	m	struct:complist	file:
pat	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Patprog pat;$/;"	m	struct:feature_enables
pat_enables	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pat_enables(const char *cmd, char **patp, int enable)$/;"	f
patadd	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patadd(char *add, int ch, long n, int paflags)$/;"	f	file:
patalloc	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static long patalloc;		\/* size allocated for same *\/$/;"	v	file:
patallocstr	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^char *patallocstr(Patprog prog, char *string, int stringlen, int unmetalen,$/;"	f
patbeginp	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patbeginp[NSUBEXP];	\/* Pointer to backref beginnings *\/$/;"	m	struct:rpat	file:
patbeginp	zsh/.zplugin/bin/zmodules/Src/pattern.c	1879;"	d	file:
patcode	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *patcode;		\/* point of code emission *\/$/;"	v	file:
patcompbranch	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompbranch(int *flagp, int paren)$/;"	f	file:
patcompcharsset	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompcharsset(void)$/;"	f	file:
patcompile	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompile(char *exp, int inflags, char **endexp)$/;"	f
patcompnot	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompnot(int paren, int *flagsp)$/;"	f	file:
patcomppiece	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcomppiece(int *flagp, int paren)$/;"	f	file:
patcompstart	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompstart(void)$/;"	f
patcompswitch	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patcompswitch(int paren, int *flagp)$/;"	f	file:
patendp	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patendp[NSUBEXP];	\/* Pointer to backref ends *\/$/;"	m	struct:rpat	file:
patendp	zsh/.zplugin/bin/zmodules/Src/pattern.c	1880;"	d	file:
patflags	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static int patflags;		    \/* flags passed down to patcompile *\/$/;"	v	file:
patgetglobflags	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patgetglobflags(char **strp, long *assertp, int *ignore)$/;"	f
patglobflags	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static int patglobflags;  \/* globbing flags & approx *\/$/;"	v	file:
path	zsh/.zplugin/bin/zmodules/Src/params.c	/^char **path,		\/* $path        *\/$/;"	v
pathbuf	zsh/.zplugin/bin/zmodules/Src/glob.c	/^char *pathbuf;$/;"	v
pathbufcwd	zsh/.zplugin/bin/zmodules/Src/glob.c	202;"	d	file:
pathbufsz	zsh/.zplugin/bin/zmodules/Src/glob.c	201;"	d	file:
pathchecked	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export char **pathchecked;$/;"	v
pathpos	zsh/.zplugin/bin/zmodules/Src/glob.c	/^int pathpos;		\/* position in pathbuf (needed by pattern code) *\/$/;"	v
pathprog	zsh/.zplugin/bin/zmodules/Src/utils.c	/^pathprog(char *prog, char **namep)$/;"	f
patinend	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patinend;		\/* End of input string *\/$/;"	m	struct:rpat	file:
patinend	zsh/.zplugin/bin/zmodules/Src/pattern.c	1875;"	d	file:
patinlen	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    int   patinlen;		\/* Length of last successful match.$/;"	m	struct:rpat	file:
patinlen	zsh/.zplugin/bin/zmodules/Src/pattern.c	1878;"	d	file:
patinpath	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patinpath;		\/* Full path for use with ~ exclusions *\/$/;"	m	struct:rpat	file:
patinpath	zsh/.zplugin/bin/zmodules/Src/pattern.c	1877;"	d	file:
patinput	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patinput;		\/* String input pointer *\/$/;"	m	struct:rpat	file:
patinput	zsh/.zplugin/bin/zmodules/Src/pattern.c	1876;"	d	file:
patinsert	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patinsert(long op, int opnd, char *xtra, int sz)$/;"	f	file:
patinstart	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^    char *patinstart;		\/* Start of input string *\/$/;"	m	struct:rpat	file:
patinstart	zsh/.zplugin/bin/zmodules/Src/pattern.c	1874;"	d	file:
patint_t	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^typedef int patint_t;$/;"	t	file:
patint_t	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^typedef wint_t patint_t;$/;"	t	file:
patmatch	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patmatch(Upat prog)$/;"	f	file:
patmatchindex	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patmatchindex(char *range, int ind, int *chr, int *mtp)$/;"	f
patmatchlen	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patmatchlen(void)$/;"	f
patmatchrange	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patmatchrange(char *range, int ch, int *indptr, int *mtp)$/;"	f
patmlen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long		patmlen;   \/* length of pure string or longest match *\/$/;"	m	struct:patprog
patmungestring	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patmungestring(char **string, int *stringlen, int *unmetalenin)$/;"	f	file:
patnode	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patnode(long op)$/;"	f	file:
patnpar	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static int patnpar;		\/* () count *\/$/;"	v	file:
patnpar	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int			patnpar;   \/* number of active parentheses *\/$/;"	m	struct:patprog
patoptail	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^patoptail(long p, long val)$/;"	f	file:
patout	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *patout;		\/* start of code emission string *\/$/;"	v	file:
patparse	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *patstart, *patparse;	\/* input pointers *\/$/;"	v	file:
patprog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct patprog {$/;"	s
patrepeat	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static int patrepeat(Upat p, char *charstart)$/;"	f	file:
pats	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Patprog *pats;		\/* the memory block, the patterns *\/$/;"	m	struct:eprog
patsize	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static long patsize;		\/* size of code *\/$/;"	v	file:
patstart	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static char *patstart, *patparse;	\/* input pointers *\/$/;"	v	file:
patstartch	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char		patstartch;$/;"	m	struct:patprog
patstralloc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct patstralloc {$/;"	s
pattail	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattail(long p, long val)$/;"	f	file:
pattern_range_to_string	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattern_range_to_string(char *rangestr, char *outstr)$/;"	f
pattry	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattry(Patprog prog, char *string)$/;"	f
pattrylen	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattrylen(Patprog prog, char *string, int len, int unmetalen,$/;"	f
pattryrefs	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattryrefs(Patprog prog, char *string, int stringlen, int unmetalenin,$/;"	f
pattrystart	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^pattrystart(void)$/;"	f
pattrystate	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static struct rpat pattrystate;$/;"	v	typeref:struct:rpat	file:
pc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode pc;		\/* program counter, current pos *\/$/;"	m	struct:estate
pc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int pc;$/;"	m	struct:heredocs
pd_list	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Paramdef pd_list;$/;"	m	struct:features
pd_size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int pd_size;$/;"	m	struct:features
peekfirst	zsh/.zplugin/bin/zmodules/Src/zsh.h	580;"	d
peeklast	zsh/.zplugin/bin/zmodules/Src/zsh.h	581;"	d
pid	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^    pid_t pid;$/;"	m	struct:bgstatus	file:
pid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t pid;                  \/* process id                       *\/$/;"	m	struct:process
pipe	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int pipe;			\/* fd of pipe if ct > 1                         *\/$/;"	m	struct:multio
pipecleanfilelist	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^pipecleanfilelist(LinkList filelist, int proc_subst_only)$/;"	f
pipestats	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int *pipestats;$/;"	m	struct:funcsave	file:
pipestats	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^int numpipestats, pipestats[MAX_PIPESTATS];$/;"	v
pipestatus_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_array pipestatus_gsu =$/;"	v	typeref:struct:gsu_array	file:
placeCursor	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f
placeholder	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v
placeholderFlags	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	t
pline_level	zsh/.zplugin/bin/zmodules/Src/exec.c	/^static int nowait, pline_level = 0;$/;"	v	file:
pline_level	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int pline_level;$/;"	m	struct:execstack
pm	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Param pm;			\/* structure inserted into param table *\/$/;"	m	struct:paramdef
pm	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Param pm;		\/* parameter node                      *\/$/;"	m	struct:value
pmtypes	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct paramtypes pmtypes[] = {$/;"	v	typeref:struct:paramtypes	file:
pnam	zsh/.zplugin/bin/zmodules/Src/module.c	/^del_autoparam(UNUSED(const char *modnam), const char *pnam, int flags)$/;"	v	file:
popheap	zsh/.zplugin/bin/zmodules/Src/mem.c	/^popheap(void)$/;"	f
posArray	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f
posDown	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	posDown$/;"	c
posLeft	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	posLeft$/;"	c
posRight	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	posRight$/;"	c
posUp	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c
posix	zsh/.zplugin/bin/zmodules/Src/signals.c	/^    int sig, flags, local, posix;$/;"	m	struct:savetrap	file:
posixzero	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *posixzero,	\/* $0           *\/$/;"	v
postProcessOptions	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f
postassigns	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int postassigns;		\/* The number of assignspc assiguments *\/$/;"	m	struct:execcmd_params
postedit	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *postedit,		\/* $POSTEDIT    *\/$/;"	v
pound_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer pound_gsu =$/;"	v	typeref:struct:gsu_integer	file:
pparams	zsh/.zplugin/bin/zmodules/Src/params.c	/^char **pparams,		\/* $argv        *\/$/;"	v
ppid	zsh/.zplugin/bin/zmodules/Src/params.c	/^     ppid,		\/* $PPID        *\/$/;"	v
pputc	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^pputc(char c)$/;"	f	file:
prepare	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def prepare$/;"	f
preprompt	zsh/.zplugin/bin/zmodules/Src/utils.c	/^preprompt(void)$/;"	f
prepromptfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct prepromptfn {$/;"	s
prepromptfns	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static LinkList prepromptfns;$/;"	v	file:
present	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
prev	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Funcstack prev;		\/* previous in stack *\/$/;"	m	struct:funcstack
prev	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkNode prev;$/;"	m	struct:linknode
prev_breaks	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^int prev_errflag, prev_breaks, errbrk_saved;$/;"	v
prev_errflag	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^int prev_errflag, prev_breaks, errbrk_saved;$/;"	v
previewCancelWait	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c
previewOpts	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type previewOpts struct {$/;"	t
previewer	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type previewer struct {$/;"	t
previous	zsh/.zplugin/plugins/junegunn---fzf/src/history.go	/^func (h *History) previous() string {$/;"	f
prevjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int prevjob;$/;"	v
prevnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	591;"	d
printAll	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f
printHeader	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f
printHighlighted	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, attr tui.Attr, col1 tui.ColorPair, col2 tui.ColorPair, current bool, match bool) int {$/;"	f
printInfo	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f
printItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f
printList	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f
printPreview	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f
printPrompt	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f
printString	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair, a Attr) {$/;"	f
print_emulate_option	zsh/.zplugin/bin/zmodules/Src/options.c	/^print_emulate_option(HashNode hn, int fully)$/;"	f	file:
print_emulate_opts	zsh/.zplugin/bin/zmodules/Src/options.c	/^static char *print_emulate_opts;$/;"	v	file:
print_if_link	zsh/.zplugin/bin/zmodules/Src/utils.c	/^print_if_link(char *s, int all)$/;"	f
print_my_line	zsh/.zplugin/bin/git-process-output.zsh	/^print_my_line() {$/;"	f
print_my_line_compress	zsh/.zplugin/bin/git-process-output.zsh	/^print_my_line_compress() {$/;"	f
print_val	zsh/.zplugin/bin/zmodules/Src/builtin.c	4294;"	d	file:
printaliasnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printaliasnode(HashNode hn, int printflags)$/;"	f	file:
printautoparams	zsh/.zplugin/bin/zmodules/Src/module.c	/^printautoparams(HashNode hn, int lon)$/;"	f	file:
printbuiltinnode	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^printbuiltinnode(HashNode hn, int printflags)$/;"	f	file:
printcmdnamnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printcmdnamnode(HashNode hn, int printflags)$/;"	f	file:
printdirstack	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^printdirstack(void)$/;"	f	file:
printhashtabinfo	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printhashtabinfo(HashTable ht)$/;"	f	file:
printhelp	zsh/.zplugin/bin/zmodules/Src/init.c	/^printhelp(void)$/;"	f	file:
printhhmmss	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^printhhmmss(double secs)$/;"	f	file:
printif	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^printif(char *str, int c)$/;"	f
printjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^printjob(Job jn, int lng, int synch)$/;"	f
printmodulenode	zsh/.zplugin/bin/zmodules/Src/module.c	/^printmodulenode(HashNode hn, int flags)$/;"	f	file:
printnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ScanFunc printnode;		\/* pointer to function to print a node        *\/$/;"	m	struct:hashtable
printoptionlist	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionlist(void)$/;"	f
printoptionlist_printequiv	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionlist_printequiv(int optno)$/;"	f	file:
printoptionlist_printoption	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionlist_printoption(HashNode hn, UNUSED(int ignored))$/;"	f	file:
printoptionnode	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionnode(HashNode hn, int set)$/;"	f	file:
printoptionnodestate	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionnodestate(HashNode hn, int hadplus)$/;"	f	file:
printoptionstates	zsh/.zplugin/bin/zmodules/Src/options.c	/^printoptionstates(int hadplus)$/;"	f
printparamnode	zsh/.zplugin/bin/zmodules/Src/params.c	/^printparamnode(HashNode hn, int printflags)$/;"	f
printparamvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^printparamvalue(Param p, int printflags)$/;"	f	file:
printprompt4	zsh/.zplugin/bin/zmodules/Src/utils.c	/^printprompt4(void)$/;"	f
printqt	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^printqt(char *str)$/;"	f
printreswdnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printreswdnode(HashNode hn, int printflags)$/;"	f	file:
printshfuncexpand	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printshfuncexpand(HashNode hn, int printflags, int expand)$/;"	f
printshfuncnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^printshfuncnode(HashNode hn, int printflags)$/;"	f	file:
printtime	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^printtime(struct timeval *real, child_times_t *ti, char *desc)$/;"	f	file:
privasserted	zsh/.zplugin/bin/zmodules/Src/utils.c	/^privasserted(void)$/;"	f
process	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct process {$/;"	s
processTabs	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f
procs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct process *procs;	\/* list of processes                 *\/$/;"	m	struct:job	typeref:struct:job::process
procsubstpid	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export pid_t procsubstpid;$/;"	v
procsubstpid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    pid_t procsubstpid;$/;"	m	struct:execstack
prog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    Eprog prog;$/;"	m	struct:wcfunc	file:
prog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eprog prog;			\/* the eprog executed *\/$/;"	m	struct:estate
prog	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode prog;		\/* memory block ctd, the code *\/$/;"	m	struct:eprog
progressMinDuration	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c
progstrunmeta	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *progstrunmeta;	\/* Unmetafied pure string in pattern, cached *\/$/;"	m	struct:patstralloc
progstrunmetalen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int progstrunmetalen;	\/* Length of the foregoing *\/$/;"	m	struct:patstralloc
prompt	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *prompt,		\/* $PROMPT      *\/$/;"	v
prompt2	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *prompt2,		\/* $PROMPT2     *\/$/;"	v
prompt3	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *prompt3,		\/* $PROMPT3     *\/$/;"	v
prompt4	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *prompt4,		\/* $PROMPT4     *\/$/;"	v
promptexpand	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^promptexpand(char *s, int ns, char *rs, char *Rs, unsigned int *txtchangep)$/;"	f
promptpath	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^promptpath(char *p, int npath, int tilde)$/;"	f	file:
prompttrunc	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^prompttrunc(int arg, int truncchar, int doprint, int endchar,$/;"	f	file:
prototypes	zsh/.zplugin/bin/zmodules/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psvar	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **psvar,		\/* $psvar       *\/$/;"	v
ptr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *ptr;$/;"	m	struct:lexbufstate
pttime	zsh/.zplugin/bin/zmodules/Src/builtin.c	6958;"	d	file:
push	zsh/.zplugin/plugins/junegunn---fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f
pushd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
pushheap	zsh/.zplugin/bin/zmodules/Src/mem.c	/^pushheap(void)$/;"	f
pushnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	592;"	d
putpromptchar	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^putpromptchar(int doprint, int endchar, unsigned int *txtchangep)$/;"	f	file:
putraw	zsh/.zplugin/bin/zmodules/Src/utils.c	/^putraw(int c)$/;"	f
putshout	zsh/.zplugin/bin/zmodules/Src/utils.c	/^putshout(int c)$/;"	f
putstr	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^putstr(int d)$/;"	f
pwd	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *pwd;		\/* $PWD         *\/$/;"	v
pwd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *pwd;			\/* current working dir of shell when *$/;"	m	struct:job
qgetmodespec	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qgetmodespec(char **s)$/;"	f	file:
qgetnum	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qgetnum(char **s)$/;"	f	file:
qual	zsh/.zplugin/bin/zmodules/Src/glob.c	/^struct qual {$/;"	s	file:
qualct	zsh/.zplugin/bin/zmodules/Src/glob.c	207;"	d	file:
qualnonemptydir	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualnonemptydir(char *name, struct stat *buf, UNUSED(off_t days), UNUSED(char *str))$/;"	f	file:
qualorct	zsh/.zplugin/bin/zmodules/Src/glob.c	208;"	d	file:
quals	zsh/.zplugin/bin/zmodules/Src/glob.c	206;"	d	file:
qualsheval	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualsheval(char *name, UNUSED(struct stat *buf), UNUSED(off_t days), char *str)$/;"	f	file:
queryCache	zsh/.zplugin/plugins/junegunn---fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t
queryCacheMax	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c
queue_front	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int queueing_enabled, queue_front, queue_rear;$/;"	v
queue_in	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int queue_in;$/;"	v
queue_rear	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int queueing_enabled, queue_front, queue_rear;$/;"	v
queue_signal_level	zsh/.zplugin/bin/zmodules/Src/signals.h	134;"	d
queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	119;"	d
queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	97;"	d
queue_traps	zsh/.zplugin/bin/zmodules/Src/signals.c	/^queue_traps(int wait_cmd)$/;"	f
queueing_enabled	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int queueing_enabled, queue_front, queue_rear;$/;"	v
quoteEntry	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func quoteEntry(entry string) string {$/;"	f
quoteEntryCmd	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func quoteEntryCmd(entry string) string {$/;"	f
quote_tokenized_output	zsh/.zplugin/bin/zmodules/Src/exec.c	/^quote_tokenized_output(char *str, FILE *file)$/;"	f
quotedzputs	zsh/.zplugin/bin/zmodules/Src/utils.c	/^quotedzputs(char const *s, FILE *stream)$/;"	f
quotestring	zsh/.zplugin/bin/zmodules/Src/utils.c	/^quotestring(const char *s, int instring)$/;"	f
randResult	zsh/.zplugin/plugins/junegunn---fzf/src/merger_test.go	/^func randResult() Result {$/;"	f
random_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer random_gsu =$/;"	v	typeref:struct:gsu_integer	file:
range	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int range;			\/* Whether to test <, > or = (as per signum) *\/$/;"	m	struct:qual	file:
rangeEllipsis	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c
range_type	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^range_type(char *start, int len)$/;"	f
rdwrtty	zsh/.zplugin/bin/zmodules/Src/init.c	642;"	d	file:
read1char	zsh/.zplugin/bin/zmodules/Src/utils.c	/^read1char(int echo)$/;"	f	file:
readFromCommand	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell string, cmd string) bool {$/;"	f
readFromStdin	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f
read_loop	zsh/.zplugin/bin/zmodules/Src/utils.c	/^read_loop(int fd, char *buf, size_t len)$/;"	f
read_poll	zsh/.zplugin/bin/zmodules/Src/utils.c	/^read_poll(int fd, int *readchar, int polltty, zlong microseconds)$/;"	f
readarray_usage	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^readarray_usage() {$/;"	f	file:
readerBufferSize	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c
readerPollIntervalMax	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c
readerPollIntervalMin	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c
readerPollIntervalStep	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c
readfd	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static int readfd;$/;"	v	file:
readlink	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	703;"	d
readnullcmd	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *readnullcmd,	\/* $READNULLCMD *\/$/;"	v
readonce	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
readoutput	zsh/.zplugin/bin/zmodules/Src/exec.c	/^readoutput(int in, int qt, int *readerror)$/;"	f
realloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^realloc(MALLOC_RET_T p, MALLOC_ARG_T size)$/;"	f
realparamtab	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export HashTable paramtab, realparamtab;$/;"	v
redir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eprog redir;                \/* redirections to apply *\/$/;"	m	struct:shfunc
redir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList redir;		\/* Redirections *\/$/;"	m	struct:execcmd_params
redir	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct redir {$/;"	s
redirtab	zsh/.zplugin/bin/zmodules/Src/parse.c	/^static int redirtab[TRINANG - OUTANG + 1] = {$/;"	v	file:
redraw	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) redraw() {$/;"	f
redup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^redup(int x, int y)$/;"	f
refresh	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f
refs	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^    int refs;$/;"	m	struct:dircache_entry	file:
register_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^register_module(char *n, Module_void_func setup,$/;"	f
release_pgrp	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^release_pgrp(void)$/;"	f
rembgstatus	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static void rembgstatus(LinkNode node)$/;"	f	file:
remnulargs	zsh/.zplugin/bin/zmodules/Src/glob.c	/^remnulargs(char *s)$/;"	f
remove	zsh/.zplugin/plugins/junegunn---fzf/uninstall	/^remove() {$/;"	f
remove_line	zsh/.zplugin/plugins/junegunn---fzf/uninstall	/^remove_line() {$/;"	f
removehashnode	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^removehashnode(HashTable ht, const char *nam)$/;"	f
removemathfunc	zsh/.zplugin/bin/zmodules/Src/module.c	/^removemathfunc(MathFunc previous, MathFunc current)$/;"	f
removenode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    RemoveNodeFunc removenode;	\/* pointer to function to delete a node       *\/$/;"	m	struct:hashtable
removetrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^removetrap(int sig)$/;"	f
removetrapnode	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^removetrapnode(int sig)$/;"	f
repeat	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f
replacePlaceholder	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, forcePlus bool, query string, allItems []*Item) string {$/;"	f
repldata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct repldata {$/;"	s
repllist	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    LinkList repllist;$/;"	m	struct:imatchdata
replstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *replstr;		\/* replacement string to use *\/$/;"	m	struct:repldata
replstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *replstr;$/;"	m	struct:imatchdata
reqClose	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqClose$/;"	c
reqHeader	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqHeader$/;"	c
reqInfo	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqInfo$/;"	c
reqJump	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqJump$/;"	c
reqList	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqList$/;"	c
reqPreviewDisplay	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c
reqPreviewEnqueue	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c
reqPreviewRefresh	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c
reqPrintQuery	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqPrintQuery$/;"	c
reqPrompt	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c
reqQuit	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqQuit$/;"	c
reqRedraw	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqRedraw$/;"	c
reqRefresh	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqRefresh$/;"	c
reqReinit	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^	reqReinit$/;"	c
reqReset	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^	reqReset$/;"	c
reqRetry	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c
require_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^require_module(const char *module, Feature_enables features, int silent)$/;"	f
resetneeded	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export int resetneeded;$/;"	v
resizeWindows	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f
resizehashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^resizehashtable(HashTable ht, int newsize)$/;"	f	file:
resolvebuiltin	zsh/.zplugin/bin/zmodules/Src/exec.c	/^resolvebuiltin(const char *cmdarg, HashNode hn)$/;"	f	file:
restore_globstate	zsh/.zplugin/bin/zmodules/Src/glob.c	238;"	d	file:
restore_params	zsh/.zplugin/bin/zmodules/Src/exec.c	/^restore_params(LinkList restorelist, LinkList removelist)$/;"	f	file:
restore_queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	111;"	d
restore_queue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	130;"	d
restore_sticky	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int breaks, contflag, loops, emulation, noerrexit, oflags, restore_sticky;$/;"	m	struct:funcsave	file:
restoredir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^restoredir(struct dirsav *d)$/;"	f
restorepatterndisables	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^restorepatterndisables(unsigned int disables)$/;"	f
restricted	zsh/.zplugin/bin/zmodules/Src/init.c	/^static int restricted;$/;"	v	file:
restrictparam	zsh/.zplugin/bin/zmodules/Src/options.c	/^restrictparam(char *nam)$/;"	f	file:
reswd	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct reswd {$/;"	s
reswds	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^static struct reswd reswds[] = {$/;"	v	typeref:struct:reswd	file:
reswdtab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export HashTable reswdtab;$/;"	v
retflag	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int retflag;$/;"	v
retries	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def retries(times = 3)$/;"	f	class:TestBase.TestShell
reverseStringArray	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f
revision	zsh/.zplugin/plugins/junegunn---fzf/main.go	/^var revision string$/;"	v
rflag	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int rflag;			\/* 0 if open for reading, 1 if open for writing *\/$/;"	m	struct:multio
right	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Eccstr left, right;$/;"	m	struct:eccstr
rmcup	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f
rn_offs	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static long rn_offs;$/;"	v	file:
rparams	zsh/.zplugin/bin/zmodules/Src/options.c	/^static char *rparams[] = {$/;"	v	file:
rpat	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^struct rpat {$/;"	s	file:
rprompt	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *rprompt,		\/* $RPROMPT     *\/$/;"	v
rprompt2	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *rprompt2,		\/* $RPROMPT2    *\/$/;"	v
rprompt_indent	zsh/.zplugin/bin/zmodules/Src/params.c	/^     rprompt_indent,	\/* $ZLE_RPROMPT_INDENT *\/$/;"	v
rprompt_indent_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer rprompt_indent_gsu =$/;"	v	typeref:struct:gsu_integer	file:
rprompt_indent_unsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^rprompt_indent_unsetfn(Param pm, int exp)$/;"	f	file:
rstring	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *rstring, *Rstring;$/;"	m	struct:buf_vars	file:
rubout	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f
run_command	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def run_command(command)$/;"	f	class:TerminalSession
run_init_scripts	zsh/.zplugin/bin/zmodules/Src/init.c	/^run_init_scripts(void)$/;"	f
run_queued_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	85;"	d
runhookdef	zsh/.zplugin/bin/zmodules/Src/module.c	/^runhookdef(Hookdef h, void *d)$/;"	f
runshfunc	zsh/.zplugin/bin/zmodules/Src/exec.c	/^runshfunc(Eprog prog, FuncWrap wrap, char *name)$/;"	f
s	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^	} s;$/;"	m	union:scanstatus::__anon4	typeref:struct:scanstatus::__anon4::__anon5	file:
s	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	GsuScalar s;$/;"	m	union:param::__anon29
s:base_dir	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:cpo_save	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:default_action	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_layout	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:default_layout = { 'down': '~40%' }$/;"	v
s:dein_FileType_toml	nvim/dein.vim	/^  let s:dein_FileType_toml= s:dein_toml_dir . '\/FileType.toml'$/;"	v
s:dein_VimEnter_toml	nvim/dein.vim	/^  let s:dein_VimEnter_toml= s:dein_toml_dir . '\/VimEnter.toml'$/;"	v
s:dein_cache_dir	nvim/dein.vim	/^let s:dein_cache_dir =                    '~\/.cache\/nvim\/dein'$/;"	v
s:dein_itself	nvim/dein.vim	/^let s:dein_itself    = s:dein_cache_dir . '\/repos\/github.com\/Shougo\/dein.vim'$/;"	v
s:dein_toml	nvim/dein.vim	/^  let s:dein_toml         = s:dein_toml_dir . '\/_dein.toml'$/;"	v
s:dein_toml_dir	nvim/dein.vim	/^  let s:dein_toml_dir     = '~\/.config\/nvim\/dein_toml.d'$/;"	v
s:fzf_go	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_tmux	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:install	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:install = s:base_dir.'\/install'$/;"	v
s:installed	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:installed = 0$/;"	v
s:is_win	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:l	vim_origin/sessions/default.vim	/^let s:l = 1 - ((0 * winheight(0) + 24) \/ 48)$/;"	v
s:launcher	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout_keys	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:so_save	nvim/sessions/default.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	vim_origin/sessions/default.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	nvim/sessions/default.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	vim_origin/sessions/default.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:term_marker	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:wipebuf	nvim/sessions/default.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	vim_origin/sessions/default.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
save_globstate	zsh/.zplugin/bin/zmodules/Src/glob.c	226;"	d	file:
save_params	zsh/.zplugin/bin/zmodules/Src/exec.c	/^save_params(Estate state, Wordcode pc, LinkList *restore_p, LinkList *remove_p)$/;"	f	file:
savehist_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer savehist_gsu =$/;"	v	typeref:struct:gsu_integer	file:
savepatterndisables	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^savepatterndisables(void)$/;"	f
savetrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^struct savetrap {$/;"	s	file:
savetraps	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static LinkList savetraps;$/;"	v	file:
scalar	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char *scalar;$/;"	m	union:asgment::__anon21
scan	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f
scancopyparams	zsh/.zplugin/bin/zmodules/Src/params.c	/^scancopyparams(HashNode hn, UNUSED(int flags))$/;"	f	file:
scanendscope	zsh/.zplugin/bin/zmodules/Src/params.c	/^scanendscope(HashNode hn, UNUSED(int flags))$/;"	f	file:
scanhashtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^scanhashtable(HashTable ht, int sorted, int flags1, int flags2,$/;"	f
scanjobs	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^scanjobs(void)$/;"	f
scanmatchshfunc	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^scanmatchshfunc(Patprog pprog, int sorted, int flags1, int flags2,$/;"	f
scanmatchtable	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^scanmatchtable(HashTable ht, Patprog pprog, int sorted,$/;"	f
scanner	zsh/.zplugin/bin/zmodules/Src/glob.c	/^scanner(Complist q, int shortcircuit)$/;"	f	file:
scanparamvals	zsh/.zplugin/bin/zmodules/Src/params.c	/^scanparamvals(HashNode hn, int flags)$/;"	f	file:
scanprog	zsh/.zplugin/bin/zmodules/Src/params.c	/^static Patprog scanprog;$/;"	v	file:
scanshfunc	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^scanshfunc(int sorted, int flags1, int flags2,$/;"	f
scanstatus	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^struct scanstatus {$/;"	s	file:
scanstr	zsh/.zplugin/bin/zmodules/Src/params.c	/^static char *scanstr;$/;"	v	file:
scantab	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ScanTabFunc scantab;	\/* pointer to function to scan table          *\/$/;"	m	struct:hashtable
scantfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    ScanTabFunc scantfn;	\/* function to scan table, if special hash *\/$/;"	m	struct:paramdef
scoreGapExtention	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	scoreGapExtention = -1$/;"	c
scoreGapStart	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c
scoreMatch	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c
scriptfilename	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export char *scriptfilename;$/;"	v
scriptname	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    char *scriptname;$/;"	m	struct:funcsave	file:
scriptname	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export char *scriptname;     \/* is sometimes a function name *\/$/;"	v
sdata	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *sdata;		\/* currently only: expression to eval        *\/$/;"	m	struct:qual	file:
search_defpath	zsh/.zplugin/bin/zmodules/Src/exec.c	/^search_defpath(char *cmd, char *pbuf, int plen)$/;"	f	file:
selectItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) {$/;"	f
select_count	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^          def select_count$/;"	f	class:Tmux.until
selectedItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^type selectedItem struct {$/;"	t
selectlist	zsh/.zplugin/bin/zmodules/Src/loop.c	/^selectlist(LinkList l, size_t start)$/;"	f
send_keys	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
send_keys	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def send_keys(*keys)$/;"	f	class:TerminalSession
send_string	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def send_string(str)$/;"	f	class:TerminalSession
sense	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int sense;			\/* Whether asserting or negating             *\/$/;"	m	struct:qual	file:
sepjoin	zsh/.zplugin/bin/zmodules/Src/utils.c	/^sepjoin(char **s, char *sep, int heap)$/;"	f
sepsplit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^sepsplit(char *s, char *sep, int allownull, int heap)$/;"	f
setBg	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f
set_colour_attribute	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^set_colour_attribute(int atr, int fg_bg, int flags)$/;"	f
set_colour_code	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^set_colour_code(char *str, char **var)$/;"	f	file:
set_default_colour_sequences	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^set_default_colour_sequences(void)$/;"	f
set_list_code	zsh/.zplugin/bin/zmodules/Src/parse.c	/^set_list_code(int p, int type, int cmplx)$/;"	f	file:
set_pat_end	zsh/.zplugin/bin/zmodules/Src/glob.c	/^set_pat_end(Patprog p, char null_me)$/;"	f	file:
set_pat_start	zsh/.zplugin/bin/zmodules/Src/glob.c	/^set_pat_start(Patprog p, int offs)$/;"	f	file:
set_pwd_env	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^set_pwd_env(void)$/;"	f
set_sublist_code	zsh/.zplugin/bin/zmodules/Src/parse.c	/^set_sublist_code(int p, int type, int flags, int skip, int cmplx)$/;"	f	file:
set_var	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestBase.TestFish
set_var	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestBase.TestShell
set_widearray	zsh/.zplugin/bin/zmodules/Src/utils.c	/^set_widearray(char *mb_array, Widechar_array wca)$/;"	f	file:
setaparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^setaparam(char *s, char **aval)$/;"	f
setarrvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^setarrvalue(Value v, char **val)$/;"	f
setblock_fd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^setblock_fd(int turnonblocking, int fd, long *modep)$/;"	f
setblock_stdin	zsh/.zplugin/bin/zmodules/Src/utils.c	/^setblock_stdin(void)$/;"	f
setbuiltins	zsh/.zplugin/bin/zmodules/Src/module.c	/^setbuiltins(char const *nam, Builtin binl, int size, int *e)$/;"	f	file:
setcbreak	zsh/.zplugin/bin/zmodules/Src/utils.c	/^setcbreak(void)$/;"	f
setconddefs	zsh/.zplugin/bin/zmodules/Src/module.c	/^setconddefs(char const *nam, Conddef c, int size, int *e)$/;"	f	file:
setcurjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^setcurjob(void)$/;"	f	file:
setdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	589;"	d
setegid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	482;"	d
setegid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	487;"	d
setemulate	zsh/.zplugin/bin/zmodules/Src/options.c	/^setemulate(HashNode hn, int fully)$/;"	f	file:
setemulate_emulation	zsh/.zplugin/bin/zmodules/Src/options.c	/^static int setemulate_emulation;$/;"	v	file:
setemulate_opts	zsh/.zplugin/bin/zmodules/Src/options.c	/^static char *setemulate_opts;$/;"	v	file:
seteuid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	481;"	d
seteuid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	486;"	d
setfeatureenables	zsh/.zplugin/bin/zmodules/Src/module.c	/^setfeatureenables(Module m, Features f, int *e)$/;"	f
setfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*setfn) _((Param, HashTable));$/;"	m	struct:gsu_hash
setfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*setfn) _((Param, char  *));$/;"	m	struct:gsu_scalar
setfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*setfn) _((Param, char **));$/;"	m	struct:gsu_array
setfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*setfn) _((Param, double));$/;"	m	struct:gsu_float
setfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*setfn) _((Param, zlong));$/;"	m	struct:gsu_integer
setgid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	472;"	d
setheredoc	zsh/.zplugin/bin/zmodules/Src/parse.c	/^setheredoc(int pc, int type, char *str, char *termstr, char *munged_termstr)$/;"	f
sethparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^sethparam(char *s, char **val)$/;"	f
setiparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^setiparam(char *s, zlong val)$/;"	f
setiparam_no_convert	zsh/.zplugin/bin/zmodules/Src/params.c	/^setiparam_no_convert(char *s, zlong val)$/;"	f
setjobpwd	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^setjobpwd(void)$/;"	f
setlang	zsh/.zplugin/bin/zmodules/Src/params.c	/^setlang(char *x)$/;"	f	file:
setlimits	zsh/.zplugin/bin/zmodules/Src/exec.c	/^setlimits(char *nam)$/;"	f
setmathfuncs	zsh/.zplugin/bin/zmodules/Src/module.c	/^setmathfuncs(char const *nam, MathFunc f, int size, int *e)$/;"	f	file:
setnparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^setnparam(char *s, mnumber val)$/;"	f
setnumvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^setnumvalue(Value v, mnumber val)$/;"	f
setoption	zsh/.zplugin/bin/zmodules/Src/options.c	/^setoption(HashNode hn, int value)$/;"	f	file:
setparamdefs	zsh/.zplugin/bin/zmodules/Src/module.c	/^setparamdefs(char const *nam, Paramdef d, int size, int *e)$/;"	f	file:
setpgrp	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	464;"	d
setprevjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^setprevjob(void)$/;"	f	file:
setrawseconds	zsh/.zplugin/bin/zmodules/Src/params.c	/^setrawseconds(double x)$/;"	f
setsecondstype	zsh/.zplugin/bin/zmodules/Src/params.c	/^setsecondstype(Param pm, int on, int off)$/;"	f
setsizednode	zsh/.zplugin/bin/zmodules/Src/zsh.h	597;"	d
setsparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^setsparam(char *s, char *val)$/;"	f
setstrvalue	zsh/.zplugin/bin/zmodules/Src/params.c	/^setstrvalue(Value v, char *val)$/;"	f
settrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^settrap(int sig, Eprog l, int flags)$/;"	f
settyinfo	zsh/.zplugin/bin/zmodules/Src/utils.c	/^settyinfo(struct ttyinfo *ti)$/;"	f
setuid	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	471;"	d
setunderscore	zsh/.zplugin/bin/zmodules/Src/exec.c	/^setunderscore(char *str)$/;"	f
setup	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Module_void_func setup;$/;"	m	struct:linkedmod
setup	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestBash
setup	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestFish
setup	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestGoFZF
setup	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestShell
setup	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestBase.TestZsh
setup_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^setup_module(Module m)$/;"	f	file:
setupshin	zsh/.zplugin/bin/zmodules/Src/init.c	/^setupshin(char *runscript)$/;"	f	file:
setupvals	zsh/.zplugin/bin/zmodules/Src/init.c	/^setupvals(char *cmd, char *runscript, char *zsh_name)$/;"	f
sfcontext	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int sfcontext;$/;"	v
sfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    StrMathFunc sfunc;$/;"	m	struct:mathfunc
shell_exiting	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^int shell_exiting;$/;"	v
shellesc_cmd	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
shellscript	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let shellscript = s:fzf_tempname()$/;"	v
shelltime	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^shelltime(void)$/;"	f
shempty	zsh/.zplugin/bin/zmodules/Src/params.c	/^shempty(void)$/;"	f	file:
shf	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Shfunc shf;			\/* shell function for autoload *\/$/;"	m	struct:eprog
shfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct shfunc {$/;"	s
shfunc_set_sticky	zsh/.zplugin/bin/zmodules/Src/exec.c	/^shfunc_set_sticky(Shfunc shf)$/;"	f
shfunctab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export HashTable shfunctab;$/;"	v
shiftstate	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static mbstate_t shiftstate;$/;"	v	file:
shingetline	zsh/.zplugin/bin/zmodules/Src/input.c	/^shingetline(void)$/;"	f
shlvl	zsh/.zplugin/bin/zmodules/Src/params.c	/^     shlvl;		\/* $SHLVL       *\/$/;"	v
shortpath	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
should_report_time	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^should_report_time(Job j)$/;"	f	file:
shout	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export FILE *shout;$/;"	v
shtimer	zsh/.zplugin/bin/zmodules/Src/params.c	/^struct timeval shtimer;$/;"	v	typeref:struct:timeval
shtms	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^static struct tms shtms;$/;"	v	typeref:struct:tms	file:
shtokenize	zsh/.zplugin/bin/zmodules/Src/glob.c	/^shtokenize(char *s)$/;"	f
shttyinfo	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export struct ttyinfo shttyinfo;$/;"	v	typeref:struct:ttyinfo
sig	zsh/.zplugin/bin/zmodules/Src/signals.c	/^    int sig, flags, local, posix;$/;"	m	struct:savetrap	file:
sigaddset	zsh/.zplugin/bin/zmodules/Src/signals.h	54;"	d
sigchld_mask	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export sigset_t sigchld_mask;$/;"	v
sigdelset	zsh/.zplugin/bin/zmodules/Src/signals.h	55;"	d
sigemptyset	zsh/.zplugin/bin/zmodules/Src/signals.h	48;"	d
sigfillset	zsh/.zplugin/bin/zmodules/Src/signals.h	50;"	d
sigfillset	zsh/.zplugin/bin/zmodules/Src/signals.h	52;"	d
sigismember	zsh/.zplugin/bin/zmodules/Src/signals.h	56;"	d
siglists	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export Eprog siglists[VSIGCOUNT];$/;"	v
signal_block	zsh/.zplugin/bin/zmodules/Src/signals.c	/^signal_block(sigset_t set)$/;"	f
signal_block	zsh/.zplugin/bin/zmodules/Src/signals.h	137;"	d
signal_default	zsh/.zplugin/bin/zmodules/Src/signals.h	74;"	d
signal_ignore	zsh/.zplugin/bin/zmodules/Src/signals.h	71;"	d
signal_jmp_buf	zsh/.zplugin/bin/zmodules/Src/signals.c	102;"	d	file:
signal_jmp_buf	zsh/.zplugin/bin/zmodules/Src/signals.c	106;"	d	file:
signal_longjmp	zsh/.zplugin/bin/zmodules/Src/signals.c	104;"	d	file:
signal_longjmp	zsh/.zplugin/bin/zmodules/Src/signals.c	108;"	d	file:
signal_mask	zsh/.zplugin/bin/zmodules/Src/signals.c	/^signal_mask(int sig)$/;"	f
signal_mask_queue	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export sigset_t signal_mask_queue[MAX_QUEUE_SIZE];$/;"	v
signal_process	zsh/.zplugin/bin/zmodules/Src/signals.c	112;"	d	file:
signal_process	zsh/.zplugin/bin/zmodules/Src/signals.c	115;"	d	file:
signal_queue	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int signal_queue[MAX_QUEUE_SIZE];$/;"	v
signal_reset	zsh/.zplugin/bin/zmodules/Src/signals.c	113;"	d	file:
signal_reset	zsh/.zplugin/bin/zmodules/Src/signals.c	116;"	d	file:
signal_setjmp	zsh/.zplugin/bin/zmodules/Src/signals.c	103;"	d	file:
signal_setjmp	zsh/.zplugin/bin/zmodules/Src/signals.c	107;"	d	file:
signal_setmask	zsh/.zplugin/bin/zmodules/Src/signals.c	/^signal_setmask(sigset_t set)$/;"	f
signal_unblock	zsh/.zplugin/bin/zmodules/Src/signals.c	/^signal_unblock(sigset_t set)$/;"	f
sigtrapped	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int sigtrapped[VSIGCOUNT];$/;"	v
simple_arrayuniq	zsh/.zplugin/bin/zmodules/Src/params.c	/^simple_arrayuniq(char **x, int freeok)$/;"	f	file:
simple_pline	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int list_pipe = 0, simple_pline = 0;$/;"	v
simple_redir_name	zsh/.zplugin/bin/zmodules/Src/exec.c	/^simple_redir_name(Eprog prog, int redir_type)$/;"	f	file:
siz	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int siz;$/;"	m	struct:lexbufstate
size	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualsize(UNUSED(char *name), struct stat *buf, off_t size, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long		size;	   \/* total size from start of struct *\/$/;"	m	struct:patprog
size	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    size_t size;		\/* size of heap                              *\/$/;"	m	struct:heap
sizeSpec	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type sizeSpec struct {$/;"	t
skipcomm	zsh/.zplugin/bin/zmodules/Src/lex.c	/^skipcomm(void)$/;"	f	file:
skipparens	zsh/.zplugin/bin/zmodules/Src/utils.c	/^skipparens(char inpar, char outpar, char **s)$/;"	f
skipwsep	zsh/.zplugin/bin/zmodules/Src/utils.c	/^skipwsep(char **s)$/;"	f	file:
slab	zsh/.zplugin/plugins/junegunn---fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v
slab16Size	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c
slab32Size	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c
slashsplit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^slashsplit(char *s)$/;"	f	file:
sliceChunks	zsh/.zplugin/plugins/junegunn---fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f
smcup	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f
sortCriteria	zsh/.zplugin/plugins/junegunn---fzf/src/result.go	/^var sortCriteria []criterion$/;"	v
sortSelected	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f
sorted	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^    int sorted;$/;"	m	struct:scanstatus	file:
sortelt	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct sortelt {$/;"	s
sortstrs	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char **sortstrs;$/;"	m	struct:gmatch	file:
source	zsh/.zplugin/bin/zmodules/Src/init.c	/^source(char *s)$/;"	f
source_event	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^struct source_event {$/;"	s	file:
source_return	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum source_return {$/;"	g
sourcehome	zsh/.zplugin/bin/zmodules/Src/init.c	/^sourcehome(char *s)$/;"	f
sourcelevel	zsh/.zplugin/bin/zmodules/Src/init.c	/^int sourcelevel;$/;"	v
sp	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct heapstack *sp;	\/* used by pushheap() to save the value used *\/$/;"	m	struct:heap	typeref:struct:heap::heapstack
spacesplit	zsh/.zplugin/bin/zmodules/Src/utils.c	/^spacesplit(char *s, int allownull, int heap, int quote)$/;"	f
spawnjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^spawnjob(void)$/;"	f
spawnpipes	zsh/.zplugin/bin/zmodules/Src/exec.c	/^spawnpipes(LinkList l, int nullexec)$/;"	f	file:
spckpat	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static Patprog spckpat, spnamepat;$/;"	v	file:
spckword	zsh/.zplugin/bin/zmodules/Src/utils.c	/^spckword(char **s, int hist, int cmd, int ask)$/;"	f
spdist	zsh/.zplugin/bin/zmodules/Src/utils.c	/^spdist(char *s, char *t, int thresh)$/;"	f	file:
special_params	zsh/.zplugin/bin/zmodules/Src/params.c	/^static initparam special_params[] ={$/;"	v	file:
special_params_sh	zsh/.zplugin/bin/zmodules/Src/params.c	/^static initparam special_params_sh[] = {$/;"	v	file:
spinnerDuration	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	spinnerDuration   = 200 * time.Millisecond$/;"	c
split	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
splitNth	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f
split_env_string	zsh/.zplugin/bin/zmodules/Src/params.c	/^split_env_string(char *env, char **name, char **value)$/;"	f	file:
splittable	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
spname	zsh/.zplugin/bin/zmodules/Src/utils.c	/^spname(char *oldname)$/;"	f	file:
spnamepat	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static Patprog spckpat, spnamepat;$/;"	v	file:
sprompt	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *sprompt,		\/* $SPROMPT     *\/$/;"	v
spscan	zsh/.zplugin/bin/zmodules/Src/utils.c	/^spscan(HashNode hn, UNUSED(int scanflags))$/;"	f	file:
srand	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	894;"	d
st	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long st;                    \/* system space time *\/$/;"	m	struct:timeinfo
start	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode start;		\/* offset to function definition *\/$/;"	m	struct:fdhead	file:
start	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    char *start;		\/* Escape sequence start *\/$/;"	m	struct:colour_sequences	file:
start	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode start;		\/* offset to function definition *\/$/;"	m	struct:fdhead	file:
start	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int start;		\/* first element of array slice, or -1 *\/$/;"	m	struct:value
startEventPoller	zsh/.zplugin/plugins/junegunn---fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f
start_with?	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def start_with?(_str)$/;"	f	class:NilClass
startoff	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long		startoff;  \/* length before start of programme *\/$/;"	m	struct:patprog
startparamscope	zsh/.zplugin/bin/zmodules/Src/params.c	/^startparamscope(void)$/;"	f
startpatternscope	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^startpatternscope(void)$/;"	f
starttrapscope	zsh/.zplugin/bin/zmodules/Src/signals.c	/^starttrapscope(void)$/;"	f
stat	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int stat;                   \/* see STATs below                   *\/$/;"	m	struct:job
statfullpath	zsh/.zplugin/bin/zmodules/Src/glob.c	/^statfullpath(const char *s, struct stat *st, int l)$/;"	f	file:
status	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^    int status;$/;"	m	struct:bgstatus	file:
status	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int status;			\/* return code from waitpid\/wait3() *\/$/;"	m	struct:process
stdarray_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_array stdarray_gsu =$/;"	v	typeref:struct:gsu_array
stderr	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f
stderr	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) stderr(str string) {$/;"	f
stderrInternal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f
stderrInternal	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f
stdfloat_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_float stdfloat_gsu =$/;"	v	typeref:struct:gsu_float
stdhash_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_hash stdhash_gsu =$/;"	v	typeref:struct:gsu_hash
stdin	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^    let stdin = has_key(a:dict, 'source') ? '' : '< \/dev\/tty'$/;"	v
stdinteger_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_integer stdinteger_gsu =$/;"	v	typeref:struct:gsu_integer
stdscalar_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_scalar stdscalar_gsu =$/;"	v	typeref:struct:gsu_scalar
stdunsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^stdunsetfn(Param pm, UNUSED(int exp))$/;"	f
sticky	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    Emulation_options sticky;$/;"	m	struct:funcsave	file:
sticky	zsh/.zplugin/bin/zmodules/Src/options.c	/^mod_export Emulation_options sticky;$/;"	v
sticky	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Emulation_options sticky;   \/* sticky emulation definitions, if any *\/$/;"	m	struct:shfunc
sticky_emulation_differs	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int sticky_emulation_differs(Emulation_options sticky2)$/;"	f
sticky_emulation_dup	zsh/.zplugin/bin/zmodules/Src/exec.c	/^sticky_emulation_dup(Emulation_options src, int useheap)$/;"	f
stim	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    time_t stim;		\/* command started time (datestamp) *\/$/;"	m	struct:histent
stophist	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int stophist;$/;"	m	struct:hist_stack
stopmsg	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^mod_export int stopmsg;$/;"	v
storepipestats	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^storepipestats(Job jn, int inforeground, int fixlastval)$/;"	f
str	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	char *str;		\/* value if declared string  (PM_SCALAR)  *\/$/;"	m	union:param::__anon28
str	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *str;$/;"	m	struct:eccstr
str	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *str;$/;"	m	struct:feature_enables
str	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *str;$/;"	m	struct:heredocs
strLines	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^func strLines(str string) []string {$/;"	f
stradd	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^stradd(char *d)$/;"	f
strend	zsh/.zplugin/bin/zmodules/Src/string.c	/^strend(char *str)$/;"	f
strerror	zsh/.zplugin/bin/zmodules/Src/compat.c	/^strerror(int errnum)$/;"	f
strgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^strgetfn(Param pm)$/;"	f
strin	zsh/.zplugin/bin/zmodules/Src/input.c	/^int strin;$/;"	v
string	zsh/.zplugin/bin/zmodules/Src/params.c	/^    const char *string;	\/* String for verbose output *\/$/;"	m	struct:paramtypes	file:
stripkshdef	zsh/.zplugin/bin/zmodules/Src/exec.c	/^stripkshdef(Eprog prog, char *name)$/;"	f
strpfx	zsh/.zplugin/bin/zmodules/Src/utils.c	/^strpfx(const char *s, const char *t)$/;"	f
strs	zsh/.zplugin/bin/zmodules/Src/parse.c	/^    wordcode strs;		\/* offset to strings *\/$/;"	m	struct:fdhead	file:
strs	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    wordcode strs;		\/* offset to strings *\/$/;"	m	struct:fdhead	file:
strs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *strs;			\/* memory block ctd, the strings *\/$/;"	m	struct:eprog
strs	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *strs;			\/* strings from prog *\/$/;"	m	struct:estate
strsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^strsetfn(Param pm, char *x)$/;"	f
strsfx	zsh/.zplugin/bin/zmodules/Src/utils.c	/^strsfx(char *s, char *t)$/;"	f
strstr	zsh/.zplugin/bin/zmodules/Src/compat.c	/^strstr(const char *s, const char *t)$/;"	f
strtoul	zsh/.zplugin/bin/zmodules/Src/compat.c	/^strtoul(nptr, endptr, base)$/;"	f
strucpy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^strucpy(char **s, char *t)$/;"	f
struncpy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^struncpy(char **s, char *t, int n)$/;"	f
strvargetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^strvargetfn(Param pm)$/;"	f
strvarsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^strvarsetfn(Param pm, char *x)$/;"	f
stty_in_env	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int stty_in_env;		\/* if STTY=... is present            *\/$/;"	m	struct:job
stuff	zsh/.zplugin/bin/zmodules/Src/input.c	/^stuff(char *fn)$/;"	f
style	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f
subsh	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int subsh;$/;"	v
subst_string_by_func	zsh/.zplugin/bin/zmodules/Src/utils.c	/^subst_string_by_func(Shfunc func, char *arg1, char *orig)$/;"	f
subst_string_by_hook	zsh/.zplugin/bin/zmodules/Src/utils.c	/^subst_string_by_hook(char *name, char *arg1, char *orig)$/;"	f
substnamedir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^substnamedir(char *s)$/;"	f
sufaliastab	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^mod_export HashTable sufaliastab;$/;"	v
super_job	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^super_job(int sub)$/;"	f	file:
suspend_jmp_buf	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static signal_jmp_buf suspend_jmp_buf;$/;"	v	file:
suspend_longjmp	zsh/.zplugin/bin/zmodules/Src/signals.c	/^static int suspend_longjmp = 0;$/;"	v	file:
switch_heaps	zsh/.zplugin/bin/zmodules/Src/mem.c	/^switch_heaps(Heap new)$/;"	f
tail	zsh/.zplugin/bin/zmodules/Test/ztst.zsh	/^tail() {$/;"	f
tccan	zsh/.zplugin/bin/zmodules/Src/zsh.h	2618;"	d
tccap_get_name	zsh/.zplugin/bin/zmodules/Src/init.c	/^tccap_get_name(int cap)$/;"	f
tccapnams	zsh/.zplugin/bin/zmodules/Src/init.c	/^static char *tccapnams[TC_COUNT] = {$/;"	v	file:
tccolours	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int tccolours;$/;"	v
tccolumns	zsh/.zplugin/bin/zmodules/Src/init.c	/^int tclines, tccolumns;$/;"	v
tclen	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int tclen[TC_COUNT];$/;"	v
tclines	zsh/.zplugin/bin/zmodules/Src/init.c	/^int tclines, tccolumns;$/;"	v
tcstr	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export char *tcstr[TC_COUNT];$/;"	v
teardown	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestBase.TestGoFZF
teardown	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestBase.TestShell
tempname	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *term,		\/* $TERM        *\/$/;"	v
term	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^type term struct {$/;"	t
termEqual	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	termEqual$/;"	c
termExact	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	termExact$/;"	c
termFuzzy	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c
termPrefix	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	termPrefix$/;"	c
termSet	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^type termSet []term$/;"	t
termSuffix	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^	termSuffix$/;"	c
termType	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^type termType int$/;"	t
term_count	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static int term_count;	\/* reference count of cur_term *\/$/;"	v	file:
term_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar term_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
term_reinit_from_pm	zsh/.zplugin/bin/zmodules/Src/params.c	/^term_reinit_from_pm(void)$/;"	f	file:
termflags	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export int termflags;$/;"	v
terminfo_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar terminfo_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
terminfodirs_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar terminfodirs_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
terminfodirssetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^terminfodirssetfn(Param pm, char *x)$/;"	f
terminfosetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^terminfosetfn(Param pm, char *x)$/;"	f
test_accept_non_empty	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestBase.TestGoFZF
test_accept_non_empty_with_empty_list	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestBase.TestGoFZF
test_accept_non_empty_with_multi_selection	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestBase.TestGoFZF
test_alt_c	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	class:TestBase.TestShell
test_alt_c_command	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	class:TestBase.TestShell
test_bind	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestBase.TestGoFZF
test_bind_print_query	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestBase.TestGoFZF
test_bind_replace_query	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestBase.TestGoFZF
test_cancel	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestBase.TestGoFZF
test_change_top	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_change_top$/;"	f	class:TestBase.TestGoFZF
test_ctrl_r	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	class:TestBase.TestShell
test_ctrl_t	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	class:TestBase.TestShell
test_ctrl_t_unicode	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	class:TestBase.TestShell
test_custom_completion	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	class:TestBase.CompletionTest
test_cycle	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestBase.TestGoFZF
test_default_extended	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestBase.TestGoFZF
test_dir_completion	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	class:TestBase.CompletionTest
test_dynamic_completion_loader	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBase.TestBash
test_escaped_meta_characters	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestBase.TestGoFZF
test_exact	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestBase.TestGoFZF
test_execute	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestBase.TestGoFZF
test_execute_multi	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestBase.TestGoFZF
test_execute_plus_flag	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestBase.TestGoFZF
test_execute_shell	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestBase.TestGoFZF
test_exit_0	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestBase.TestGoFZF
test_exit_0_exit_code	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestBase.TestGoFZF
test_exitstatus_empty	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestBase.TestGoFZF
test_expect	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestBase.TestGoFZF
test_expect_print_query	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestBase.TestGoFZF
test_expect_print_query_select_1	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestBase.TestGoFZF
test_expect_printable_character_print_query	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestBase.TestGoFZF
test_file_completion	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	class:TestBase.CompletionTest
test_file_completion_root	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	class:TestBase.CompletionTest
test_file_completion_unicode	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	class:TestBase.CompletionTest
test_file_word	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestBase.TestGoFZF
test_filter_exitstatus	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestBase.TestGoFZF
test_fzf_default_command	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestBase.TestGoFZF
test_fzf_default_command_failure	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestBase.TestGoFZF
test_header	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines_reverse	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_and_header_lines_reverse_list	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_header_lines	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestBase.TestGoFZF
test_header_lines_overflow	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestBase.TestGoFZF
test_header_lines_reverse	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_lines_reverse_list	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_header_lines_with_nth	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestBase.TestGoFZF
test_header_reverse	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestBase.TestGoFZF
test_header_reverse_list	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_history	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestBase.TestGoFZF
test_hscroll_off	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestBase.TestGoFZF
test_invalid_cache	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestBase.TestGoFZF
test_invalid_cache_query_type	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestBase.TestGoFZF
test_invalid_option	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestBase.TestGoFZF
test_inverse_only_search_should_not_sort_the_result	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestBase.TestGoFZF
test_jump	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestBase.TestGoFZF
test_jump_accept	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestBase.TestGoFZF
test_key_bindings	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestBase.TestGoFZF
test_long_line	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestBase.TestGoFZF
test_margin	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestBase.TestGoFZF
test_margin_reverse	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestBase.TestGoFZF
test_margin_reverse_list	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestBase.TestGoFZF
test_multi_order	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestBase.TestGoFZF
test_no_clear	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestBase.TestGoFZF
test_or_operator	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestBase.TestGoFZF
test_partial_caching	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestBase.TestGoFZF
test_preview	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestBase.TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestBase.TestGoFZF
test_preview_flags	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestBase.TestGoFZF
test_preview_hidden	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestBase.TestGoFZF
test_preview_q_no_match	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestBase.TestGoFZF
test_preview_q_no_match_with_initial_query	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestBase.TestGoFZF
test_preview_size_0	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestBase.TestGoFZF
test_preview_update_on_select	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestBase.TestGoFZF
test_process_completion	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	class:TestBase.CompletionTest
test_query_unicode	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestBase.TestGoFZF
test_read0	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestBase.TestGoFZF
test_scroll	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestBase.TestGoFZF
test_select_1	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestBase.TestGoFZF
test_select_1_exit_0_fail	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestBase.TestGoFZF
test_select_all_deselect_all_toggle_all	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestBase.TestGoFZF
test_smart_case_for_each_term	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestBase.TestGoFZF
test_sync	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestBase.TestGoFZF
test_tabstop	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestBase.TestGoFZF
test_tac	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestBase.TestGoFZF
test_tac_nosort	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestBase.TestGoFZF
test_tac_sort	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestBase.TestGoFZF
test_tiebreak	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_begin_algo_v2	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_end	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_index_begin	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestBase.TestGoFZF
test_tiebreak_length_with_nth	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestBase.TestGoFZF
test_toggle_sort	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestBase.TestGoFZF
test_unicode_case	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestBase.TestGoFZF
test_unset_completion	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	class:TestBase.CompletionTest
test_vanilla	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestBase.TestGoFZF
test_with_nth	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestBase.TestGoFZF
test_with_nth_ansi	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestBase.TestGoFZF
test_with_nth_basic	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestBase.TestGoFZF
test_with_nth_no_ansi	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestBase.TestGoFZF
testargs	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^char **testargs, **curtestarg;$/;"	v
testlex	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^testlex(void)$/;"	f
text	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *text;			\/* expansion of alias       *\/$/;"	m	struct:alias
text	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char text[JOBTEXTSIZE];	\/* text to print when 'jobs' is run *\/$/;"	m	struct:process
this_noerrexit	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int this_noerrexit;$/;"	v
this_noerrexit	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int this_noerrexit;$/;"	m	struct:execstack
thisjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int thisjob;$/;"	v
ti	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    child_times_t ti;$/;"	m	struct:process
tiedarr_gsu	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static const struct gsu_scalar tiedarr_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
tiedarrgetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^tiedarrgetfn(Param pm)$/;"	f
tiedarrsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^tiedarrsetfn(Param pm, char *x)$/;"	f
tiedarrunsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^tiedarrunsetfn(Param pm, UNUSED(int exp))$/;"	f
tieddata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct tieddata {$/;"	s
timedfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct timedfn {$/;"	s
timedfns	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export LinkList timedfns;$/;"	v
timeinfo	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct timeinfo {$/;"	s
timeline	zsh/.zplugin/bin/git-process-output.zsh	/^timeline() {$/;"	f
timespec	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^struct timespec {$/;"	s
timezone	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^struct timezone {$/;"	s
tio	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct termios tio;$/;"	m	struct:ttyinfo	typeref:struct:ttyinfo::termios
tmpdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void *tmpdata;$/;"	m	struct:hashtable
tmux_command	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_command(cmd)$/;"	f	class:TerminalSession
tmux_enabled	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
tmux_socket_name	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_socket_name$/;"	f	class:TerminalSession
toActions	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func toActions(types ...actionType) []action {$/;"	f
toAnsiString	zsh/.zplugin/plugins/junegunn---fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f
toggleItem	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) {$/;"	f
tok	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export enum lextok tok;$/;"	v	typeref:enum:lextok
tok	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    enum lextok tok;$/;"	m	struct:lex_stack	typeref:enum:lex_stack::lextok
token	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int token;			\/* corresponding lexer token *\/$/;"	m	struct:reswd
tokenize	zsh/.zplugin/bin/zmodules/Src/glob.c	/^tokenize(char *s)$/;"	f
tokfd	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int tokfd;$/;"	v
toklineno	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zlong toklineno;$/;"	v
toklineno	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    zlong toklineno;$/;"	m	struct:lex_stack
tokstr	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export char *tokstr;$/;"	v
tokstr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *tokstr;$/;"	m	struct:lex_stack
tokstr_raw	zsh/.zplugin/bin/zmodules/Src/lex.c	/^static char *tokstr_raw;$/;"	v	file:
tokstr_raw	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *tokstr_raw;$/;"	m	struct:lex_stack
tokstrings	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export char *tokstrings[WHILE + 1] = {$/;"	v
tp	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int tp;$/;"	m	struct:globsort	file:
tp	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int tp;     		\/* type of entry: sourced file, func, eval *\/$/;"	m	struct:funcstack
transformInput	zsh/.zplugin/plugins/junegunn---fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f
trap_queue	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int trap_queue[MAX_QUEUE_SIZE];$/;"	v
trap_queue_front	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int trap_queueing_enabled, trap_queue_front, trap_queue_rear;$/;"	v
trap_queue_rear	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int trap_queueing_enabled, trap_queue_front, trap_queue_rear;$/;"	v
trap_queueing_enabled	zsh/.zplugin/bin/zmodules/Src/signals.c	/^mod_export int trap_queueing_enabled, trap_queue_front, trap_queue_rear;$/;"	v
trap_return	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int trap_return;$/;"	v
trap_return	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int trap_return;$/;"	m	struct:execstack
trap_state	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int trap_state;$/;"	v
trap_state	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int trap_state;$/;"	m	struct:execstack
trap_state	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum trap_state {$/;"	g
trapisfunc	zsh/.zplugin/bin/zmodules/Src/signals.c	/^int trapisfunc;$/;"	v
trapisfunc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int trapisfunc;$/;"	m	struct:execstack
traplocallevel	zsh/.zplugin/bin/zmodules/Src/signals.c	/^int traplocallevel;$/;"	v
traplocallevel	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int traplocallevel;$/;"	m	struct:execstack
tricat	zsh/.zplugin/bin/zmodules/Src/string.c	/^tricat(char const *s1, char const *s2, char const *s3)$/;"	f
trimLeft	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f
trimQuery	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f
trimRight	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, int) {$/;"	f
truncateQuery	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f
trunccount	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int trunccount;$/;"	m	struct:buf_vars	file:
truncwidth	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^    int truncwidth;$/;"	m	struct:buf_vars	file:
trySkip	zsh/.zplugin/plugins/junegunn---fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f
try_curl	zsh/.zplugin/plugins/junegunn---fzf/install	/^try_curl() {$/;"	f
try_dump_file	zsh/.zplugin/bin/zmodules/Src/parse.c	/^try_dump_file(char *path, char *name, char *file, int *ksh, int test_only)$/;"	f
try_errflag	zsh/.zplugin/bin/zmodules/Src/loop.c	/^try_errflag = -1;$/;"	v
try_interrupt	zsh/.zplugin/bin/zmodules/Src/loop.c	/^try_interrupt = -1;$/;"	v
try_load_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^try_load_module(char const *name)$/;"	f	file:
try_source_file	zsh/.zplugin/bin/zmodules/Src/parse.c	/^try_source_file(char *file)$/;"	f
try_tryflag	zsh/.zplugin/bin/zmodules/Src/loop.c	/^try_tryflag = 0;$/;"	v
try_wget	zsh/.zplugin/plugins/junegunn---fzf/install	/^try_wget() {$/;"	f
ts	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^    long ts;$/;"	m	struct:source_event	file:
tsetcap	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^tsetcap(int cap, int flags)$/;"	f
ttyfrozen	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^mod_export int ttyfrozen;$/;"	v
ttyidle_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer ttyidle_gsu =$/;"	v	typeref:struct:gsu_integer	file:
ttyinfo	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct ttyinfo {$/;"	s
ttyname	zsh/.zplugin/plugins/junegunn---fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f
ttyname	zsh/.zplugin/plugins/junegunn---fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f
ttystrname	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *ttystrname,	\/* $TTY         *\/$/;"	v
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui.go	/^package tui$/;"	p
tui	zsh/.zplugin/plugins/junegunn---fzf/src/tui/tui_test.go	/^package tui$/;"	p
tulower	zsh/.zplugin/bin/zmodules/Src/utils.c	/^tulower(int c)$/;"	f
tuupper	zsh/.zplugin/bin/zmodules/Src/utils.c	/^tuupper(int c)$/;"	f
tv_nsec	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^    long tv_nsec;$/;"	m	struct:timespec
tv_sec	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^    time_t tv_sec;$/;"	m	struct:timespec
txtattrmask	zsh/.zplugin/bin/zmodules/Src/prompt.c	/^mod_export unsigned txtattrmask;$/;"	v
txtchangeget	zsh/.zplugin/bin/zmodules/Src/zsh.h	2687;"	d
txtchangeisset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2686;"	d
txtchangeset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2688;"	d
txtisset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2632;"	d
txtset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2633;"	d
txtunset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2634;"	d
ty	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct ttyinfo *ty;		\/* the modes specified by STTY       *\/$/;"	m	struct:job	typeref:struct:job::ttyinfo
type	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int type;			\/* The WC_* type of the command *\/$/;"	m	struct:execcmd_params
type	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int type;$/;"	m	struct:__anon13
type	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int type;$/;"	m	struct:heredocs
type	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int type;$/;"	m	struct:redir
typeflag	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int typeflag;	\/* Flag for typeset -? *\/$/;"	m	struct:paramtypes	file:
typeset_setbase	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^typeset_setbase(const char *name, Param pm, Options ops, int on, int always)$/;"	f	file:
typeset_setwidth	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^typeset_setwidth(const char * name, Param pm, Options ops, int on, int always)$/;"	f	file:
typeset_single	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^typeset_single(char *cname, char *pname, Param pm, UNUSED(int func),$/;"	f	file:
typtab	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export short int typtab[256];$/;"	v
typtab_flags	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static int typtab_flags = 0;$/;"	v	file:
tz_dsttime	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^    int tz_dsttime;$/;"	m	struct:timezone
tz_minuteswest	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^    int tz_minuteswest;$/;"	m	struct:timezone
u	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^	HashNode u;$/;"	m	union:scanstatus::__anon4	file:
u	zsh/.zplugin/bin/zmodules/Src/hashtable.c	/^    } u;$/;"	m	struct:scanstatus	typeref:union:scanstatus::__anon4	file:
u	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    u;$/;"	m	struct:cmdnam	typeref:union:cmdnam::__anon23
u	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } u;$/;"	m	struct:__anon13	typeref:union:__anon13::__anon14
u	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } u;$/;"	m	struct:jobfile	typeref:union:jobfile::__anon20
u	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } u;$/;"	m	struct:module	typeref:union:module::__anon26
u	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } u;$/;"	m	struct:param	typeref:union:param::__anon28
u9_iswprint	zsh/.zplugin/bin/zmodules/Src/compat.c	/^u9_iswprint(wint_t ucs)$/;"	f
u9_wcwidth	zsh/.zplugin/bin/zmodules/Src/compat.c	/^u9_wcwidth(wchar_t ucs)$/;"	f
uaddlinknode	zsh/.zplugin/bin/zmodules/Src/zsh.h	584;"	d
ucs4toutf8	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ucs4toutf8(char *dest, unsigned int wval)$/;"	f	file:
uid	zsh/.zplugin/bin/zmodules/Src/glob.c	/^qualuid(UNUSED(char *name), struct stat *buf, off_t uid, UNUSED(char *dummy))$/;"	v	typeref:struct:off_t	file:
uid_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer uid_gsu =$/;"	v	typeref:struct:gsu_integer	file:
ulen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int ulen;$/;"	m	struct:imatchdata
uname	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    char *uname;$/;"	m	struct:gmatch	file:
underscore	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *underscore;$/;"	m	struct:execstack
underscore_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar underscore_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
underscorelen	zsh/.zplugin/bin/zmodules/Src/init.c	/^int underscorelen, underscoreused;$/;"	v
underscoreused	zsh/.zplugin/bin/zmodules/Src/init.c	/^int underscorelen, underscoreused;$/;"	v
uniqarray	zsh/.zplugin/bin/zmodules/Src/params.c	/^uniqarray(char **x)$/;"	f
units	zsh/.zplugin/bin/zmodules/Src/glob.c	/^    int units;			\/* Multiplier for time or size, respectively *\/$/;"	m	struct:qual	file:
unload_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^unload_module(Module m)$/;"	f
unload_named_module	zsh/.zplugin/bin/zmodules/Src/module.c	/^unload_named_module(char *modname, char *nam, int silent)$/;"	f
unmeta	zsh/.zplugin/bin/zmodules/Src/utils.c	/^unmeta(const char *file_name)$/;"	f
unmeta_one	zsh/.zplugin/bin/zmodules/Src/utils.c	/^unmeta_one(const char *in, int *sz)$/;"	f
unmetafy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^unmetafy(char *s, int *len)$/;"	f
unmetalen	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int unmetalen;		\/* Unmetafied length of trial string *\/$/;"	m	struct:patstralloc
unmetalenp	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int unmetalenp;		\/* Unmetafied length of path prefix.$/;"	m	struct:patstralloc
unqueue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	121;"	d
unqueue_signals	zsh/.zplugin/bin/zmodules/Src/signals.h	99;"	d
unqueue_traps	zsh/.zplugin/bin/zmodules/Src/signals.c	/^unqueue_traps(void)$/;"	f
unset	zsh/.zplugin/bin/zmodules/Src/zsh.h	2501;"	d
unset_var	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	class:TestBase.TestShell
unsetfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*unsetfn) _((Param, int));$/;"	m	struct:gsu_array
unsetfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*unsetfn) _((Param, int));$/;"	m	struct:gsu_float
unsetfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*unsetfn) _((Param, int));$/;"	m	struct:gsu_hash
unsetfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*unsetfn) _((Param, int));$/;"	m	struct:gsu_integer
unsetfn	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void (*unsetfn) _((Param, int));$/;"	m	struct:gsu_scalar
unsetparam	zsh/.zplugin/bin/zmodules/Src/params.c	/^unsetparam(char *s)$/;"	f
unsetparam_pm	zsh/.zplugin/bin/zmodules/Src/params.c	/^unsetparam_pm(Param pm, int altflag, int exp)$/;"	f
unsets	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^    def unsets$/;"	f	class:Shell
unsettrap	zsh/.zplugin/bin/zmodules/Src/signals.c	/^unsettrap(int sig)$/;"	f
until	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def until(refresh = false, pane = 0)$/;"	f	class:Tmux
untokenize	zsh/.zplugin/bin/zmodules/Src/exec.c	/^untokenize(char *s)$/;"	f
up	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Histent up;			\/* previous line (moving upward)    *\/$/;"	m	struct:histent
upat	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^union upat {$/;"	u	file:
upchdir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^upchdir(int n)$/;"	f	file:
updatePromptOffset	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f
updateTerminalSize	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f
update_job	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^update_job(Job jn)$/;"	f
update_process	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^update_process(Process pn, int status)$/;"	f
upgrade	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:upgrade(dict)$/;"	f
usage	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c
use_cmdoutval	zsh/.zplugin/bin/zmodules/Src/exec.c	/^int use_cmdoutval;$/;"	v
use_cmdoutval	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int use_cmdoutval;$/;"	m	struct:execstack
use_exit_printed	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int use_exit_printed;$/;"	v
use_sh	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
used	zsh/.zplugin/bin/zmodules/Src/mem.c	/^    zlong used;			\/* if block of small blocks: number of used$/;"	m	struct:m_hdr	file:
used	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    size_t used;		\/* bytes used from the heap                  *\/$/;"	m	struct:heap
used	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    size_t used;$/;"	m	struct:heapstack
useeprog	zsh/.zplugin/bin/zmodules/Src/parse.c	/^useeprog(Eprog p)$/;"	f
username_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar username_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
ustr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *ustr;$/;"	m	struct:imatchdata
ut	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    long ut;                    \/* user space time   *\/$/;"	m	struct:timeinfo
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/chars_test.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/slab.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/util.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_test.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_unix.go	/^package util$/;"	p
util	zsh/.zplugin/plugins/junegunn---fzf/src/util/util_windows.go	/^package util$/;"	p
val	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	zlong val;		\/* value if declared integer (PM_INTEGER) *\/$/;"	m	union:param::__anon28
validate_layout	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
valptr	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^	zlong *valptr;		\/* value if special pointer to integer *\/$/;"	m	union:param::__anon28
value	zsh/.zplugin/bin/zmodules/Src/params.c	/^    void *value;$/;"	m	struct:iparam	file:
value	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    } value;$/;"	m	struct:asgment	typeref:union:asgment::__anon21
value	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct value {$/;"	s
var	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    void *var;			\/* tied internal variable, if any *\/$/;"	m	struct:paramdef
vararray_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_array vararray_gsu =$/;"	v	typeref:struct:gsu_array
varid	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *varid;$/;"	m	struct:redir
varint_readonly_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer varint_readonly_gsu =$/;"	v	typeref:struct:gsu_integer	file:
varinteger_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_integer varinteger_gsu =$/;"	v	typeref:struct:gsu_integer
varscalar_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^mod_export const struct gsu_scalar varscalar_gsu =$/;"	v	typeref:struct:gsu_scalar
varspc	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    Wordcode varspc;		\/* The code for assignment parsed as such *\/$/;"	m	struct:execcmd_params
version	zsh/.zplugin/plugins/junegunn---fzf/src/constants.go	/^	version = "0.18.0"$/;"	c
vmove	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f
voidvoidfnptr_t	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef void (*voidvoidfnptr_t) _((void));$/;"	t
vset	zsh/.zplugin/plugins/junegunn---fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f
wait	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^def wait$/;"	f
wait_for_processes	zsh/.zplugin/bin/zmodules/Src/signals.c	/^wait_for_processes(void)$/;"	f
waitforpid	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^waitforpid(pid_t pid, int wait_cmd)$/;"	f
waitjobs	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^waitjobs(void)$/;"	f
warn	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
watch	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **watch,		\/* $watch       *\/$/;"	v
wb	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int wb, we;$/;"	v
wc_bdata	zsh/.zplugin/bin/zmodules/Src/zsh.h	845;"	d
wc_bld	zsh/.zplugin/bin/zmodules/Src/zsh.h	846;"	d
wc_code	zsh/.zplugin/bin/zmodules/Src/zsh.h	843;"	d
wc_data	zsh/.zplugin/bin/zmodules/Src/zsh.h	844;"	d
wcfunc	zsh/.zplugin/bin/zmodules/Src/parse.c	/^struct wcfunc {$/;"	s	file:
wcs_nicechar	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wcs_nicechar(wchar_t c, size_t *widthp, char **swidep)$/;"	f
wcs_nicechar_sel	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wcs_nicechar_sel(wchar_t c, size_t *widthp, char **swidep, int quotable)$/;"	f
wcs_zarrdup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wcs_zarrdup(wchar_t **s)$/;"	f
wcs_ztrdup	zsh/.zplugin/bin/zmodules/Src/string.c	/^wcs_ztrdup(const wchar_t *s)$/;"	f
wcsiblank	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wcsiblank(wint_t wc)$/;"	f
wcsitype	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wcsitype(wchar_t c, int itype)$/;"	f
wcwidth9	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static inline int wcwidth9(int c) {$/;"	f
wcwidth9_ambiguous	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_ambiguous[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_combining	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_combining[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_doublewidth	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_doublewidth[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_emoji_width	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_emoji_width[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_intable	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static inline bool wcwidth9_intable(const struct wcwidth9_interval *table, size_t n_items, int c) {$/;"	f
wcwidth9_interval	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^struct wcwidth9_interval {$/;"	s
wcwidth9_nonprint	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_nonprint[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_not_assigned	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_not_assigned[] = {$/;"	v	typeref:struct:wcwidth9_interval
wcwidth9_private	zsh/.zplugin/bin/zmodules/Src/wcwidth9.h	/^static const struct wcwidth9_interval wcwidth9_private[] = {$/;"	v	typeref:struct:wcwidth9_interval
we	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int wb, we;$/;"	v
when	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    time_t when;$/;"	m	struct:timedfn
widechar_array	zsh/.zplugin/bin/zmodules/Src/utils.c	/^struct widechar_array {$/;"	s	file:
width	zsh/.zplugin/bin/zmodules/Src/params.c	/^    int width;			\/* output field width                    *\/$/;"	m	struct:iparam	file:
width	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int width;			\/* field width                           *\/$/;"	m	struct:param
winch_block	zsh/.zplugin/bin/zmodules/Src/signals.h	63;"	d
winch_block	zsh/.zplugin/bin/zmodules/Src/signals.h	66;"	d
winch_unblock	zsh/.zplugin/bin/zmodules/Src/signals.h	64;"	d
winch_unblock	zsh/.zplugin/bin/zmodules/Src/signals.h	67;"	d
winchanged	zsh/.zplugin/bin/zmodules/Src/utils.c	/^mod_export int winchanged;$/;"	v
windowPosition	zsh/.zplugin/plugins/junegunn---fzf/src/options.go	/^type windowPosition int$/;"	t
winsize	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    struct winsize winsize;$/;"	m	struct:ttyinfo	typeref:struct:ttyinfo::winsize
withIndex	zsh/.zplugin/plugins/junegunn---fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f
withPrefixLengths	zsh/.zplugin/plugins/junegunn---fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f
with_history	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/spec_helper.rb	/^  def with_history(*commands, &block)$/;"	f
wordbeg	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int wordbeg;$/;"	v
wordchars	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *wordchars;	\/* $WORDCHARS   *\/$/;"	v
wordchars_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_scalar wordchars_gsu =$/;"	v	typeref:struct:gsu_scalar	file:
wordchars_wide	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static struct widechar_array wordchars_wide;$/;"	v	typeref:struct:widechar_array	file:
wordcode	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned int wordcode;$/;"	t
wordcount	zsh/.zplugin/bin/zmodules/Src/utils.c	/^wordcount(char *s, char *sep, int mul)$/;"	f
words	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    short *words;		\/* Position of words in history     *\/$/;"	m	struct:histent
wrapLine	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f
wrap_cmds	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
wrappedLine	zsh/.zplugin/plugins/junegunn---fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	t
wrapper	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    int wrapper;$/;"	m	struct:module
wrappers	zsh/.zplugin/bin/zmodules/Src/module.c	/^FuncWrap wrappers;$/;"	v
write_dump	zsh/.zplugin/bin/zmodules/Src/parse.c	/^write_dump(int dfd, LinkList progs, int map, int hlen, int tlen)$/;"	f	file:
write_loop	zsh/.zplugin/bin/zmodules/Src/utils.c	/^write_loop(int fd, const char *buf, size_t len)$/;"	f
writelines	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
xbuf	zsh/.zplugin/bin/zmodules/Src/utils.c	/^static char xbuf[PATH_MAX*2+1];$/;"	v	file:
xpandbraces	zsh/.zplugin/bin/zmodules/Src/glob.c	/^xpandbraces(LinkList list, LinkNode *np)$/;"	f
xpandredir	zsh/.zplugin/bin/zmodules/Src/glob.c	/^xpandredir(struct redir *fn, LinkList redirtab)$/;"	f
xsymlink	zsh/.zplugin/bin/zmodules/Src/utils.c	/^xsymlink(char *s, int heap)$/;"	f
xsymlinks	zsh/.zplugin/bin/zmodules/Src/utils.c	/^xsymlinks(char *s, int full)$/;"	f	file:
xterm_launcher	zsh/.zplugin/plugins/junegunn---fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
xtrerr	zsh/.zplugin/bin/zmodules/Src/utils.c	/^FILE *xtrerr = 0;$/;"	v
yyerror	zsh/.zplugin/bin/zmodules/Src/parse.c	/^yyerror(int noerr)$/;"	f	file:
zaddlinknode	zsh/.zplugin/bin/zmodules/Src/zsh.h	583;"	d
zalloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zalloc(size_t size)$/;"	f
zarrdup	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zarrdup(char **s)$/;"	f
zbeep	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zbeep(void)$/;"	f
zbuf	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^static char *zbuf;$/;"	v	file:
zchdir	zsh/.zplugin/bin/zmodules/Src/compat.c	/^zchdir(char *dir)$/;"	f
zclose	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zclose(int fd)$/;"	f
zcloselockfd	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zcloselockfd(int fd)$/;"	f
zdeleteterm	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zdeleteterm(void)$/;"	f
zerrmsg	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zerrmsg(FILE *file, const char *fmt, va_list ap)$/;"	f
zexecve	zsh/.zplugin/bin/zmodules/Src/exec.c	/^zexecve(char *pth, char **argv, char **newenvp)$/;"	f	file:
zexit	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^zexit(int val, int from_where)$/;"	f
zexpandtabs	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zexpandtabs(const char *s, int len, int width, int startpos, FILE *fout,$/;"	f
zfork	zsh/.zplugin/bin/zmodules/Src/exec.c	/^zfork(struct timeval *tv)$/;"	f	file:
zfree	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zfree(void *p, UNUSED(int sz))$/;"	f
zfree	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zfree(void *p, int sz)$/;"	f
zgetcwd	zsh/.zplugin/bin/zmodules/Src/compat.c	/^zgetcwd(void)$/;"	f
zgetdir	zsh/.zplugin/bin/zmodules/Src/compat.c	/^zgetdir(struct dirsav *d)$/;"	f
zgetenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^zgetenv(char *name)$/;"	f
zgettime	zsh/.zplugin/bin/zmodules/Src/compat.c	/^zgettime(struct timespec *ts)$/;"	f
zglob	zsh/.zplugin/bin/zmodules/Src/glob.c	/^zglob(LinkList list, LinkNode np, int nountok)$/;"	f
zhalloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zhalloc(size_t size)$/;"	f
zhandler	zsh/.zplugin/bin/zmodules/Src/signals.c	/^zhandler(int sig)$/;"	f
zheapptr	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zheapptr(void *p)$/;"	f
zhtricat	zsh/.zplugin/bin/zmodules/Src/string.c	/^zhtricat(char const *s1, char const *s2, char const *s3)$/;"	f
zhuniqarray	zsh/.zplugin/bin/zmodules/Src/params.c	/^zhuniqarray(char **x)$/;"	f
zistype	zsh/.zplugin/bin/zmodules/Src/ztype.h	46;"	d
zjoin	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zjoin(char **arr, int delim, int heap)$/;"	f
zle_entry_ptr	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export ZleEntryPoint zle_entry_ptr;$/;"	v
zle_load_state	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export int zle_load_state;$/;"	v
zle_text	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *zle_text;		\/* the edited history line,$/;"	m	struct:histent
zleactive	zsh/.zplugin/bin/zmodules/Src/exec.c	/^mod_export int zleactive;$/;"	v
zlemetacs	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int zlemetacs, zlemetall;$/;"	v
zlemetall	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export int zlemetacs, zlemetall;$/;"	v
zlevar_gsu	zsh/.zplugin/bin/zmodules/Src/params.c	/^static const struct gsu_integer zlevar_gsu =$/;"	v	typeref:struct:gsu_integer	file:
zlevarsetfn	zsh/.zplugin/bin/zmodules/Src/params.c	/^zlevarsetfn(Param pm, zlong x)$/;"	f
zlong	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef ZSH_64_BIT_TYPE zlong;$/;"	t
zlong	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef long zlong;$/;"	t
zmmv	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	/^static char *zmmv;$/;"	v
zopenmax	zsh/.zplugin/bin/zmodules/Src/compat.c	/^zopenmax(void)$/;"	f
zopenmax	zsh/.zplugin/bin/zmodules/Src/zsh_system.h	336;"	d
zoptarg	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *zoptarg,		\/* $OPTARG      *\/$/;"	v
zoptind	zsh/.zplugin/bin/zmodules/Src/exec.c	/^    int zoptind, lastval, optcind, numpipestats;$/;"	m	struct:funcsave	file:
zoptind	zsh/.zplugin/bin/zmodules/Src/params.c	/^     zoptind,		\/* $OPTIND      *\/$/;"	v
zp_append_report	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_append_report( const char *nam, const char *target, int target_len, const char *body, int body_len ) {$/;"	f	file:
zp_build_source_report	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^char *zp_build_source_report( int no_paths, int *rep_size ) {$/;"	f
zp_conv_opt	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^int zp_conv_opt( int zp_opt_num ) {$/;"	f	file:
zp_createhashparam	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_createhashparam( char *name, int flags )$/;"	f	file:
zp_createhashtable	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_createhashtable( char *name )$/;"	f	file:
zp_free_sevent_node	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_free_sevent_node( HashNode hn )$/;"	f	file:
zp_freeparamnode	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_freeparamnode( HashNode hn )$/;"	f
zp_has_option	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_has_option( char **argv, char opt ) {$/;"	f	file:
zp_opt_for_zsh_version	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static int zp_opt_for_zsh_version[256] = { 0 };$/;"	v	file:
zp_option_name	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^struct zp_option_name {$/;"	s	file:
zp_options	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static struct zp_option_name zp_options[] = {$/;"	v	typeref:struct:zp_option_name	file:
zp_setup_options_table	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^void zp_setup_options_table() {$/;"	f	file:
zp_sevent_count	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static int zp_sevent_count = 0;$/;"	v	file:
zp_sevent_node	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^struct zp_sevent_node {$/;"	s	file:
zp_source_events	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^static HashTable zp_source_events = NULL;$/;"	v	file:
zp_unmetafy_zalloc	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^zp_unmetafy_zalloc( const char *to_copy, int *new_len )$/;"	f
zpc_chars	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static const char zpc_chars[ZPC_COUNT] = {$/;"	v	file:
zpc_chars	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^enum zpc_chars {$/;"	g
zpc_disables	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^mod_export char zpc_disables[ZPC_COUNT];$/;"	v
zpc_disables_save	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^struct zpc_disables_save {$/;"	s
zpc_disables_stack	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^static struct zpc_disables_save *zpc_disables_stack;$/;"	v	typeref:struct:zpc_disables_save	file:
zpc_special	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^char zpc_special[ZPC_COUNT];$/;"	v
zpc_strings	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^mod_export const char *zpc_strings[ZPC_COUNT] = {$/;"	v
zpcdreplay	zsh/.zplugin/bin/zplugin.zsh	/^zpcdreplay() { -zplg-compdef-replay -q; }$/;"	f
zpcompdef	zsh/.zplugin/bin/zplugin.zsh	/^zpcompdef() { ZPLG_COMPDEF_REPLAY+=( "${(j: :)${(q)@}}" ); }$/;"	f
zpcompinit	zsh/.zplugin/bin/zplugin.zsh	/^zpcompinit() { autoload compinit; compinit -d ${ZPLGM[ZCOMPDUMP_PATH]:-${ZDOTDIR:-$HOME}\/.zcompdump} "${(Q@)${(z@)ZPLGM[COMPINIT_OPTS]}}"; }$/;"	f
zplugin	zsh/.zplugin/bin/zplugin.zsh	/^zplugin() {$/;"	f
zpmod_usage	zsh/.zplugin/bin/zmodules/Src/zdharma/zplugin.c	/^void zpmod_usage() {$/;"	f
zpushnode	zsh/.zplugin/bin/zmodules/Src/zsh.h	593;"	d
zputenv	zsh/.zplugin/bin/zmodules/Src/params.c	/^zputenv(char *str)$/;"	f
zputs	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zputs(char const *s, FILE *stream)$/;"	f
zrange_t	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^typedef unsigned long zrange_t;$/;"	t	file:
zrange_t	zsh/.zplugin/bin/zmodules/Src/pattern.c	/^typedef zlong zrange_t;$/;"	t	file:
zread	zsh/.zplugin/bin/zmodules/Src/builtin.c	/^zread(int izle, int *readchar, long izle_timeout)$/;"	f	file:
zreaddir	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zreaddir(DIR *dir, int ignoredots)$/;"	f
zrealloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zrealloc(void *ptr, size_t size)$/;"	f
zsetlimit	zsh/.zplugin/bin/zmodules/Src/exec.c	/^zsetlimit(int limnum, char *nam)$/;"	f
zsetupterm	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zsetupterm(void)$/;"	f
zsfree	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zsfree(char *p)$/;"	f
zsh	zsh/.zplugin/plugins/junegunn---fzf/test/test_go.rb	/^    def zsh$/;"	f	class:Shell
zsh_eval_context	zsh/.zplugin/bin/zmodules/Src/params.c	/^     **zsh_eval_context; \/* $zsh_eval_context *\/$/;"	v
zsh_funcnest	zsh/.zplugin/bin/zmodules/Src/params.c	/^zlong zsh_funcnest =$/;"	v
zsh_subshell	zsh/.zplugin/bin/zmodules/Src/params.c	/^     zsh_subshell;	\/* $ZSH_SUBSHELL *\/$/;"	v
zsh_terminfo	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *zsh_terminfo,     \/* $TERMINFO    *\/$/;"	v
zsh_terminfodirs	zsh/.zplugin/bin/zmodules/Src/params.c	/^     *zsh_terminfodirs, \/* $TERMINFO_DIRS *\/$/;"	v
zsh_version	zsh/.zplugin/plugins/zsh-users---zsh-autosuggestions/spec/terminal_session.rb	/^  def zsh_version$/;"	f	class:TerminalSession
zshcalloc	zsh/.zplugin/bin/zmodules/Src/mem.c	/^zshcalloc(size_t size)$/;"	f
zshhooks	zsh/.zplugin/bin/zmodules/Src/init.c	/^mod_export struct hookdef zshhooks[] = {$/;"	v	typeref:struct:hookdef
zshletters	zsh/.zplugin/bin/zmodules/Src/options.c	/^static short zshletters[LAST_OPT - FIRST_OPT + 1] = {$/;"	v	file:
zshlex	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zshlex(void)$/;"	f
zshlex_raw_add	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zshlex_raw_add(int c)$/;"	f
zshlex_raw_back	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zshlex_raw_back(void)$/;"	f
zshlex_raw_back_to_mark	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zshlex_raw_back_to_mark(int mark)$/;"	f
zshlex_raw_mark	zsh/.zplugin/bin/zmodules/Src/lex.c	/^zshlex_raw_mark(int offset)$/;"	f
zshlextext	zsh/.zplugin/bin/zmodules/Src/lex.c	/^char *zshlextext;$/;"	v
zshlextext	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^    char *zshlextext;$/;"	m	struct:lex_stack
zshtokenize	zsh/.zplugin/bin/zmodules/Src/glob.c	/^zshtokenize(char *s, int flags)$/;"	f	file:
zsleep	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zsleep(long us)$/;"	f
zsleep_random	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zsleep_random(long max_us, time_t end_time)$/;"	f
zstrtol	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zstrtol(const char *s, char **t, int base)$/;"	f
zstrtol_underscore	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zstrtol_underscore(const char *s, char **t, int base, int underscore)$/;"	f
zstrtoul_underscore	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zstrtoul_underscore(const char *s, zulong *retval)$/;"	f
zt	vim_origin/sessions/default.vim	/^normal! zt$/;"	m
zterm_columns	zsh/.zplugin/bin/zmodules/Src/params.c	/^     zterm_columns,	\/* $COLUMNS     *\/$/;"	v
zterm_lines	zsh/.zplugin/bin/zmodules/Src/params.c	/^     zterm_lines,	\/* $LINES       *\/$/;"	v
ztokens	zsh/.zplugin/bin/zmodules/Src/lex.c	/^mod_export char ztokens[] = "#$^*(())$=|{}[]`<>>?~`,-!'\\"\\\\\\\\";$/;"	v
ztrcmp	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrcmp(char const *s1, char const *s2)$/;"	f
ztrdup	zsh/.zplugin/bin/zmodules/Src/string.c	/^ztrdup(const char *s)$/;"	f
ztrdup_metafy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrdup_metafy(const char *s)$/;"	f
ztrduppfx	zsh/.zplugin/bin/zmodules/Src/string.c	/^ztrduppfx(const char *s, int len)$/;"	f
ztrftime	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrftime(char *buf, int bufsize, char *fmt, struct tm *tm, long nsec)$/;"	f
ztrftimebuf	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrftimebuf(int *bufsizeptr, int decr)$/;"	f	file:
ztrlen	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrlen(char const *s)$/;"	f
ztrlenend	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrlenend(char const *s, char const *eptr)$/;"	f
ztrncpy	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrncpy(char *s, char *t, int len)$/;"	f
ztrsub	zsh/.zplugin/bin/zmodules/Src/utils.c	/^ztrsub(char const *t, char const *s)$/;"	f
zulong	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef ZSH_64_BIT_UTYPE zulong;$/;"	t
zulong	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned long zulong;$/;"	t
zulong	zsh/.zplugin/bin/zmodules/Src/zsh.h	/^typedef unsigned zlong zulong;$/;"	t
zunderscore	zsh/.zplugin/bin/zmodules/Src/init.c	/^char *zunderscore;$/;"	v
zwaitjob	zsh/.zplugin/bin/zmodules/Src/jobs.c	/^zwaitjob(int job, int wait_cmd)$/;"	f	file:
zwarning	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zwarning(const char *cmd, const char *fmt, va_list ap)$/;"	f	file:
zwcstat	zsh/.zplugin/bin/zmodules/Src/parse.c	/^zwcstat(char *filename, struct stat *buf)$/;"	f	file:
zwcstat	zsh/.zplugin/bin/zmodules/Src/parse.c	3644;"	d	file:
zwcwidth	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zwcwidth(wint_t wc)$/;"	f
zz_plural_z_alpha	zsh/.zplugin/bin/zmodules/Src/utils.c	/^zz_plural_z_alpha(void)$/;"	f
