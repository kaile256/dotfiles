{
	"suggest.acceptSuggestionOnCommitCharacter": true,
	"suggest.floatEnable": true,
	"suggest.noselect": true,
	"suggest.timeout": 500,
	"suggest.triggerAfterInsertEnter": true,
	"signature.triggerSignatureWait": 100,

	"suggest.completionItemKindLabels": {
		"keyword": "\uf1de",
		"variable": "\ue79b",
		"value": "\uf89f",
		"operator": "\u03a8",
		"function": "\u0192",
		"reference": "\ufa46",
		"constant": "\uf8fe",
		"method": "\uf09a",
		"struct": "\ufb44",
		"class": "\uf0e8",
		"interface": "\uf417",
		"text": "\ue612",
		"enum": "\uf435",
		"enumMember": "\uf02b",
		"module": "\uf40d",
		"color": "\ue22b",
		"property": "\ue624",
		"field": "\uf9be",
		"unit": "\uf475",
		"event": "\ufacd",
		"file": "\uf723",
		"folder": "\uf114",
		"snippet": "\ue60b",
		"typeParameter": "\uf728",
		"default": "\uf29c"
	},

	"codeLens.enable": true,

	"diagnostic.checkCurrentLine": true,

	"coc.preferences.extensionUpdateCheck": "weekly",
	"coc.preferences.jumpCommand": "drop",

	"list.autoResize": false,
	"list.source.grep.defaultArgs": ["--regex"],
	"list.insertMappings": {
		"<C-t>": "action:tabe",
		"<C-s>": "action:split",
		"<C-v>": "action:vsplit",
		"<CR>":  "action:drop",
		"<C-r>": "eval:@@",
		"<c-c>": "do:cancel",
		"<a-h>": "do:cancel",
		"<a-j>": "do:cancel",
		"<a-k>": "do:cancel",
		"<a-l>": "do:cancel",
		"<c-r>": "prompt.paste",
		"<c-a>": "prompt.start",
		"<c-e>": "prompt.end",
		"<c-f>": "prompt.right",
		"<c-b>": "prompt.left",
		"<c-d>": "prompt.deletebackward"
	},

	"list.normalMappings": {
		"m":     "do.toggle",
		"d":     "action:delete",
		"e":     "action:drop",
		"<c-t>": "action:tab",
		"<c-v>": "action:vsplit",
		"<c-s>": "action:split"
	},

	"yank.enableCompletion": "false",

	"vimlsp.debug": { "type": "boolean",
		"default": true,
		"description": "enable coc-vimlsp service debug"
	},
	"vimlsp.diagnostic.enable": {
		"type": "boolean",
		"default": true,
		"description": "enable diagnostic"
	},
	"vimlsp.indexes.runtimepath": {
		"type": "boolean",
		"default": true,
		"description": "if index vim's runtimepath files, this will effect the suggest"
	},
	"vimlsp.indexes.count": {
		"type": "number",
		"default": 3,
		"description": "count of files index at the same time, change to greater will speed up index but will cause high CPU usage for some time"
	},
	"vimlsp.indexes.gap": {
		"type": "number",
		"default": 100,
		"description": "time gap between parse file, change to smaller will speed up index but will cause high CPU usage for some time"
	},
	"vimlsp.suggest.fromVimruntime": {
		"type": "boolean",
		"default": true,
		"description": "completeitems from vimruntime's vim files"
	},
	"vimlsp.suggest.fromRuntimepath": {
		"type": "boolean",
		"default": false,
		"description": "completeitems from runtimepath's vim files, if this is true that fromVimruntime is true"
	},
	"vimlsp.trace.server": {
		"type": "string",
		"default": "verbose",
		"enum": [
			"off",
			"messages",
			"verbose"
		],
		"description": "Trace level of vim language server"
	},
	"languageserver":{
		"bash": {
			"command": "bash-language-server",
			"args": ["start"],
			"filetypes": ["sh"]
		},
		"rust": {
			"command": "ra_lsp_server",
			"filetypes": ["rust"],
			"rootPatterns": ["Cargo.toml"]
		},
		"golang":{
			"command": "go-langserver",
			"filetypes": ["go"],
			"initializationOptions": {
				"gocodeCompletionEnabled": true,
				"diagnositicsEnabled": true,
				"lintTool": "golint"
			}
		},
		"ccls": {
			"command": "ccls",
			"filetypes": ["c", "cpp", "objc", "objcpp"],
			"rootPatterns": [".ccls", "compile_commands.json", ".vim/", ".git/", ".hg/"],
			"initializationOptions": {
				"cache": {
					"directory": "/tmp/ccls"
				}
			}
		},
		"intelphense": {
			"command": "intelphense",
			"args": ["--stdio"],
			"filetypes": ["php"],
			"initializationOptions": {
				"storagePath": "/tmp/intelphense"
			}
		},
		"dockerfile": {
			"command": "docker-langserver",
			"filetypes": ["dockerfile"],
			"args": ["--stdio"]
		},
		"lua": {
			"command": "lua-lsp",
			"filetypes": ["lua"]
		},
		"metals": {
			"command": "metals-vim",
			"rootPatterns": ["build.sbt"],
			"filetypes": ["scala", "sbt"]
		}
	}
}
