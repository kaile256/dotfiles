### Buffer
[[plugins]]
repo = 'Shougo/denite.nvim'
on_event = 'BufRead'
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'BufRead'

## Indent Line should be visible
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentline_color_term = 239
  '''
on_event = 'BufRead'

#### Plugins Completion
[[plugins]]
# command ":CocConfig" to organize config of coc.
repo = 'neoclide/coc.nvim'
on_event = 'VimEnter'
hook_post_update = '''
  au VimEnter * call coc#util#install()
  au VimEnter * CocInstall coc-json coc-tsserver coc-html coc-yaml coc-python 
  \ coc-git coc-yank coc-vimlsp coc-highlight
  '''

#### Plugins Edit Smooth
[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'BufRead'
[[plugins]]
repo = 'tpope/vim-surround'
on_event = 'BufRead'
# Repeats even not-default editing by "."
# e.g., surround.vim
[[plugins]]
repo = 'tpope/vim-repeat'
on_event = 'BufRead'
#[[plugins]]
#repo = 'Lokaltog/vim-easymotion'
#on_event = 'VimEnter'
## move between Vim panes and Tmux splits seamlessly.
#[[plugins]]
#repo = 'christoomey/vim-tmux-navigator'
#on_event = 'VimEnter'

## prepares fuzzy completion list
#[[plugins]]
#repo = 'junegunn/fzf'
#on_event = 'InsertEnter'
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_event = 'InsertEnter'
[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertEnter'
on_ft = 'snippets'

## open DevDocs from vim
## still need more settings
#repo = 'rhysd/devdocs.vim'
#on_map = '<Plug>'
#hook_add = '''
#  nnoremap K <Plug>(devdocs-under-cursor)
#  '''

## Tag
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
on_event = 'VimEnter'
[[plugins]]
repo = 'szw/vim-tags'
on_event = 'VimEnter'
#[[plugins]]
#repo = 'ludovicchabant/vim-gutentags'
#on_event = 'VimEnter'
[[plugins]]
repo = 'majutsushi/tagbar'
on_event = 'BufRead'
# No any .txt file
#[[plugins]]
## written by python
## auto-delete entries that no longer exist.
#repo = 'craigemery/vim-autotag'
#hook_add = '''
#  let g:autotagTagsFile='.tags'
#  '''
#on_event = 'VimEnter'


## Browser on vim
[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = '<Plug>'
hook_add = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  nnoremap gx <Plug>(openbrowser-smart-search)
  vnoremap gx <Plug>(openbrowser-smart-search)
  '''

## On Term Mode
[[plugins]]
repo = 'mhinz/neovim-remote'
on_event = 'TermOpen'

# [[plugins]]
# repo = 'liuchengxu/vista.vim'
# depends = ['coc.nvim']
# on_event = 'InsertEnter'

