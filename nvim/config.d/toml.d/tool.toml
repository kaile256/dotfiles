### From: dein.vimrc

[[plugins]]
repo = 'neoclide/coc.nvim' #{{{
on_event = 'VimEnter'
hook_done_sourced = 'runtime coc.vimrc'
#}}}

# Tool; Leap {{{
## Leap; EasyMotion {{{
[[plugins]]
repo = 'easymotion/vim-easymotion' #{{{
on_event = 'Syntax'
hook_post_source = 'runtime easymotion.vimrc'
#}}}
[[plugins]]
repo = 'haya14busa/vim-easyoperator-phrase' #{{{
on_event = 'Syntax'
hook_post_source = 'runtime easyoperator.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch.vim' #{{{
#on_event = 'Syntax'
#hook_post_source = 'runtime incsearch.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-easymotion.vim' #{{{
#on_event = 'Syntax'
#hook_post_source = 'runtime incsearch-easymotion.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-fuzzy.vim' #{{{
#on_event = 'Syntax'
#hook_post_source = 'runtime incsearch-fuzzy.vimrc'
#}}}
#}}}

[[plugins]] #{{{
repo = 'bkad/CamelCaseMotion' #{{{
on_event = 'VimEnter'
hook_post_source = 'runtime CamelCaseMotion.vimrc'
#}}}
#}}}
#}}}

# Tool; Filer {{{
[[plugins]]
repo = 'cocopon/vaffle.vim' #{{{
on_if = 'has("python3")'
hook_post_source = 'runtime vaffle.vimrc'
#}}}
## Defx #{{{
#[[plugins]]
#repo = 'Shougo/defx.nvim' #{{{
### CAUTION: defx.vimrc MUST be sourced after dein#end() on dein.vim.
#if = 'has("python3")'
#hook_post_source = 'runtime defx.vimrc'
#}}}
#[[plugins]]
#repo = 'kristijanhusak/defx-git' {{{
## Ref: defx.vimrc
#if = 'has("python3")'
#}}}
#[[plugins]]
#repo = 'kristijanhusak/defx-icons' {{{
#if = 'has("python3")'
#}}}
#}}}
#}}}

# Tool; Edit {{{
[[plugins]]
repo = 'machakann/vim-sandwich' #{{{
on_event = 'BufRead'
hook_post_source = 'runtime sandwich.vimrc'
#}}}
#[[plugins]]
#repo = 'tpope/vim-surround'{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime surround.vimrc'
#}}}

## Edit; Snippets #{{{

### Snippets; Engine #{{{

#[[plugins]]
#repo = 'SirVer/ultisnips' #{{{
#on_event = ['InsertEnter','TermOpen']
#hook_post_source = 'runtime ultisnips.vimrc'
#}}}
[[plugins]]
repo = 'Shougo/neosnippet.vim' #{{{
on_event = ['InsertEnter', 'TermOpen','CmdlineEnter']
hook_add = 'runtime! neosnippet.vimrc'
#}}}
#}}}

### Snippets; Contents #{{{

[[plugins]]
repo = 'Shougo/neosnippet-snippets' #{{{
on_event = ['InsertEnter', 'TermOpen','CmdlineEnter']
#}}}
[[plugins]]
repo = 'honza/vim-snippets' #{{{
on_event = ['InsertEnter', 'TermOpen']
#}}}
#[[plugins]]
#repo = 'garbas/vim-snipmate' #{{{
#on_event = ['InsertEnter', 'TermOpen']
#}}}
#}}}
#}}}
#}}}

# Tool; Marks {{{
[[plugins]]
repo = 'mattesgroeger/vim-bookmarks' #{{{
on_event = 'VimEnter'
hook_post_source = 'runtime bookmarks.vimrc'
#}}}
#[[plugins]]
#repo = 'jacquesbh/vim-showmarks'{{{
#on_map = ['m','`',"'",'\<space>']
#hook_post_source = 'runtime showmarks.vimrc'
# }}}
#}}}

# Tool; Imput Method #{{{
#[[plugins]]
#repo = 'tyru/eskk.vim' #{{{
## ERORR: Present Unnecessary Sign '>' on Kanji.
#on_event = ['InsertEnter', 'CmdlineEnter']
#hook_post_source = 'runtime eskk.vimrc'
# }}}
# }}}

## Tool; Note #{{{
### Note; Vimwiki #{{{
[[plugins]]
repo = 'vimwiki/vimwiki' #{{{
# CAUTION: Should be `lazy loaded`, or fail to enter on VimEnter.
rev = 'dev'
on_event = 'VimEnter'
#hook_post_source = 'runtime vimwiki.vimrc'
#}}}
#}}}

## Note; Outliner #{{{
[[plugins]]
repo = 'vim-voom/VOoM' #{{{
on_ft = ['vimwiki','org','markdown','tex','toml']
hook_post_source = 'runtime voom.vimrc'
# }}}
# }}}

#### Table-Mode #{{{
[[plugins]]
repo = 'dhruvasagar/vim-table-mode' #{{{
hook_add = 'runtime! table-mode.vimrc'
on_ft = ['org', 'text']
# }}}
# }}}

#### Org Mode
[[plugins]]
repo = 'jceb/vim-orgmode' #{{{
on_ft = 'org'
hook_post_source = 'runtime orgmode.vimrc'
#}}}
### Hyperlink
[[plugins]]
repo = 'vim-scripts/utl.vim'
on_ft = 'org'
hook_post_source = 'runtime utl.vimrc'
#[[plugins]]
#repo = 'tpope/vim-speeddating' {{{
## <c-a/x> for dateing.
#on_ft = 'org'
#hook_post_source = 'runtime speeddating.vimrc'
#}}}
#}}}

# Tool; Twitter {{{
[[plugins]]
repo = 'basyura/TweetVim' #{{{
on_event = 'CmdlineEnter'
hook_post_source = 'runtime tweetvim.vimrc'
#}}}
[[plugins]]
repo = 'basyura/twibill.vim' # {{{
on_event = 'CmdlineEnter'
hook_post_source = 'runtime twibill.vimrc'
#}}}
#}}}

[[plugins]]
repo = 'inkarkat/vim-SyntaxRange' #{{{
# Multiple-Language Syntax in one buffer.
on_ft = ['snippets','org']
hook_post_source = 'runtime SyntaxRange.vimrc'
#}}}

[[plugins]]
repo = 'chrisbra/NrrwRgn' #{{{
on_event = 'VimEnter'
hook_post_source = 'runtime NrrwRgn.vimrc'
#}}}

### Matcher
#[[plugins]]
#repo = 'raghur/fruzzy' #{{{
#on_ft = 'denite'
#hook_post_source = 'runtime fruzzy.vimrc'
#}}}

## Async Processor
[[plugins]]
repo = 'Shougo/vimproc.vim' #{{{
# run vim-plugins asynchronously, like openbrowser, quickrun.
build = 'make'
#}}}

### Template
[[plugins]]
repo = 'mattn/sonictemplate-vim'
on_event = 'BufRead'
hook_post_source = 'runtime sonictemplate.vimrc'

### Operator
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_event = 'BufRead'
hook_post_source = 'runtime splitjoin.vimrc'
[[plugins]]
repo = 'junegunn/vim-easy-align'
on_event = 'BufRead'
hook_post_source = 'runtime easy-align.vimrc'

### Code Runner
#[[plugins]]
#repo = 'skywind3000/asyncrun.vim' #{{{
## Only supports external shell to qf.
#on_map = 'AsyncRun'
#hook_post_source = 'runtime asyncrun.vimrc'
#}}}
[[plugins]]
repo = 'thinca/vim-quickrun' #{{{
on_map = 'QuickRun'
hook_post_source = 'runtime quickrun.vimrc'
#}}}
[[plugins]]
repo = 'neomake/neomake' #{{{
on_map = 'make'
hook_post_source = 'runtime neomake.vimrc'
#}}}

### Functional
[[plugins]]
# Repeats even not-default editing by "."
# e.g., surround.vim
repo = 'tpope/vim-repeat'
on_event = 'BufRead'

### UI
[[plugins]]
repo = 'wsdjeg/dein-ui.vim' #{{{
on_map = ['<a-d><a-u>', '<a-d>u']
hook_add = 'runtime dein-ui.vimrc'
#}}}

### Linux Command
#[[plugins]]
#repo = 'tpope/vim-eunuch' #{{{
## ERORR: Seems no utils provided by the plugin.
#on_event = 'CmdlineEnter'
#hook_post_source = 'runtime eunuch.vimrc'
#}}}

### Input Method
#[[plugins]]
## Doesn't Work
#repo = 'tpope/vim-capslock' #{{{
#on_event = ['InsertEnter', 'TermOpen', 'CmdlineEnter']
#hook_post_source = 'runtime capslock.vimrc'
#[[plugins]]
#### For Windows?
#repo = 'mattn/vim-switch-esc-capslock'
#on_event = ['InsertEnter', 'TermOpen', 'CmdlineEnter']
#hook_post_source = 'runtime switch-esc-capslock'
##}}}
