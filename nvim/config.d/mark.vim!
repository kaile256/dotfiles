
"" Marks
nmap <a-'> [`
nmap <a-"> ]`
nmap <silent> m :<c-u>call <SID>AutoMarkInc()<cr>
nmap <silent> <space>m :<c-u>call <SID>AutoMarkIncOnBuffer()<cr>
nmap <a-m> m

"""" DEFINITION
if !exists('g:mark_inc_lower')
  let g:mark_inc_lower = 'qweruiop'
endif

if !exists('g:mark_inc_upper')
  let g:mark_inc_upper = 'QWERUIOP'
endif

augroup MarkOnWinLeave " # last mark is always `P.
  if &modifiable
    au!
    au BufLeave * call <SID>AutoMarkIncOnBuffer()
    au BufLeave * nnoremap <buffer> m m
    au BufLeave * normal mP
  endif
augroup END

function! s:AutoMarkInc()
  if !exists('b:last_mark')
    let b:last_mark = 0
  else
    let b:last_mark = (b:last_mark + 1) % len(g:mark_inc_lower)
  endif
  silent execute 'mark' g:mark_inc_lower[b:last_mark]
  echo  'marked' g:mark_inc_lower[b:last_mark]
endfunction

function! s:AutoMarkIncOnBuffer()
  if !exists('g:last_buffer')
    let g:last_buffer = 0
  else
    let g:last_buffer = (g:last_buffer + 1) % len(g:mark_inc_upper)
  endif
  silent execute 'mark' g:mark_inc_upper[g:last_buffer]
  echo  'marked' g:mark_inc_upper[g:last_buffer]
endfunction
