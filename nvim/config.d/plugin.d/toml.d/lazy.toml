## Color Themes
[[plugins]]
repo = 'tomasr/molokai'
on_if = 'has("nvim")'
hook_post_source = 'runtime! molokai.vimrc'
 
#[[plugins]]
#repo = 'altercation/vim-colors-solarized'

### Run Code on vim
[[plugins]]
repo = 'skywind3000/asyncrun.vim'
on_map = 'AsyncRun'
hook_post_source = 'runtime! asyncrun.vimrc'
[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = 'QuickRun'
hook_post_source = 'runtime! quickrun.vimrc'

### Filer
[[plugins]]
repo = 'cocopon/vaffle.vim'
on_if = '!has("python3")'
hook_post_source = 'runtime! vaffle.vimrc'
[[plugins]]
repo = 'kristijanhusak/defx-git'
on_map = 'Defx'
[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_map = 'Defx'
[[plugins]]
repo = 'Shougo/defx.nvim'
on_if = 'has("python3")'
hook_post_source = 'runtime! defx.vimrc'
hook_post_update = 'UpdateRemotePlugins'

### Buffer
[[plugins]]
repo = 'Shougo/denite.nvim'
on_if = 'has("python3")'
hook_post_source = 'runtime! denite.vimrc'
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_map = 'Denite'
[[plugins]]
repo = 'ozelentok/denite-gtags'
hook_post_source = 'runtime! denite-gtags.vimrc'
on_map = 'Denite'

### On Term Mode
[[plugins]]
repo = 'mhinz/neovim-remote'
on_event = 'TermOpen'

#### Smooth Edit 
### QuickRun
[[plugins]]
repo = 'neomake/neomake'
if = 'version >= 800'
on_map = 'make'
hook_post_source = 'runtime! neomake'

### Template
[[plugins]]
repo = 'mattn/sonictemplate-vim'
on_event = 'BufRead'

#[[plugins]]
## preset a template respectively.
#repo = 'thinca/vim-template'
#on_event = 'BufReadPre'
#on_ft = 'bash'

### Visual
## Indent
[[plugins]]
# indent line should be visible
repo = 'Yggdroot/indentLine'
hook_post_source = '''
  let g:indentline_color_term = 239
  '''
on_event = 'BufReadPre'
## Paren
[[plugins]]
repo = 'luochen1990/rainbow'
on_event = 'WinEnter'
hook_post_source = '''
  " set 0 to active only on :RainbowToggle
  let g:reinbow_active = 1
  '''

### Functional
[[plugins]]
# Repeats even not-default editing by "."
# e.g., surround.vim
repo = 'tpope/vim-repeat'
on_event = 'BufRead'

### Jump
[[plugins]]
repo = 'jremmen/vim-ripgrep'
on_if = 'executable("rg")'
hook_post_source = 'runtime! ripgrep.vimrc'
#[[plugins]]
#repo = 'justinmk/vim-sneak'
#on_map = '<Plug>'
#depend = 'vim-repeat'
#hook_post_source = 'runtime! sneak.vimrc'
#[[plugins]]
#repo = 'Lokaltog/vim-easymotion'
#on_event = 'VimEnter'
## move between Vim panes and Tmux splits seamlessly.
#[[plugins]]
#repo = 'christoomey/vim-tmux-navigator'
#on_event = 'VimEnter'

### Marks
[[plugins]]
# Show marks
repo = 'jacquesbh/vim-showmarks'
on_map = "[m,`,']"
hook_post_source = 'runtime! showmarks.vimrc'

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'BufRead'
hook_post_source = 'runtime! sandwich.vimrc'
#[[plugins]]
#repo = 'tpope/vim-surround'
#on_event = 'BufRead'
#hook_post_source = 'runtime! surround.vimrc'

#[[plugins]]
## auto close parens
#repo = 'cohama/lexima.vim'
#on_event = 'InsertEnter'
#hook_post_source = 'runtime! lexima.vimrc'

### Tags
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
on_map = ['g','<c-w>']
hook_post_source = 'runtime! gen_tags.vimrc'
[[plugins]]
repo = 'majutsushi/tagbar'
on_event = 'BufRead'
hook_post_source = 'runtime! tagbar.vim'
#[[plugins]]
#repo = 'szw/vim-tags'
#on_event = 'VimEnter'
#[[plugins]]
#repo = 'ludovicchabant/vim-gutentags'
#on_event = 'VimEnter'
# No any .txt file
#[[plugins]]
## written by python
## auto-delete entries that no longer exist.
#repo = 'craigemery/vim-autotag'
#hook_post_source = '''
#  let g:autotagTagsFile='.tags'
#  '''
#on_event = 'VimEnter'

### Completion
#[[plugins]]
#repo = 'ycm-core/YouCompleteMe'
#on_event = 'InsertEnter'
#hook_post_source = 'runtime! YouCompleteMe.vimrc'
[[plugins]]
repo = 'neoclide/coc.nvim'
hook_post_source = 'runtime! coc.vimrc'
on_event = 'VimEnter'
hook_post_update = '''
  au VimEnter call coc#util#install()
  au VimEnter CocInstall coc-json coc-tsserver coc-html coc-yaml coc-python 
  \ coc-git coc-yank coc-vimlsp coc-highlight
  '''

### FZF
[[plugins]]
on_event = 'VimEnter'
[[plugins]]
repo = 'junegunn/fzf.vim'
on_if = 'executable("fzf")'
hook_post_source = 'runtime! fzf.vimrc'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_event = 'InsertEnter'
on_ft = 'snippets'
[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_post_source = 'runtime! neosnippet.vimrc'
on_event = 'InsertEnter'
on_ft = 'snippets'


### Browser
[[plugins]]
repo = 'tyru/open-browser.vim'
if = 'executable("qutebrowser")'
on_map = '<space>'
hook_post_source = 'runtime! open-browser.vimrc'

### Memo
[[plugins]]
repo = 'glidenote/memolist.vim'
hook_post_source = 'runtime! memolist.vimrc'
on_map = '<space>'

#[[plugins]]
#repo = 'tyru/qfpopup.vim'
#[[plugins]]
#repo = 'liuchengxu/vista.vim'
#depends = ['coc.nvim']
#on_event = 'InsertEnter'

## open DevDocs from vim
## still need more settings
#repo = 'rhysd/devdocs.vim'
#on_map = '<Plug>'
#hook_post_source = '''
#  nnoremap K <Plug>(devdocs-under-cursor)
#  '''
