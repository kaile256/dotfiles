# From: dein.vimrc

[[plugins]]
repo = 'bkad/CamelCaseMotion' #{{{
on_map = '<Plug>CamelCaseMotion_'
hook_add = 'runtime CamelCaseMotion.vimrc'
#}}}

# Leap to Target
#[[plugins]]
#repo = 'justinmk/vim-sneak' #{{{
#on_event = 'BufWinEnter'
#hook_add = 'runtime sneak.vimrc'
#hook_post_source = 'silent! unmap s'
##}}}
# Leap; Easy Motion
[[plugins]] # has extentions
repo = 'easymotion/vim-easymotion' #{{{
#on_map = '<Plug>(easymotion-' # on operater, doesn't sourced.
on_event = 'BufWinEnter'
hook_add = 'runtime easymotion.vimrc'
hook_post_source = 'runtime unrtp/easymotion.vimrc'
[[plugins]]
repo = 'haya14busa/vim-easyoperator-phrase' #{{{
#on_map = '<plug>(easyoperator-'
on_event = 'BufWinEnter'
hook_add = 'runtime easyoperator.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-easymotion.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch-easymotion.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-fuzzy.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch-fuzzy.vimrc'
#}}}
#}}}

# Operater; Comment out
#[[plugins]]
#repo = 'tomtom/tcomment_vim' #{{{
## Error: dein map `BufRead` on tcomment.
#on_map = 'BufRead'
##on_map = ':TComment'
#hook_add = 'runtime tcomment.vimrc'
##}}}
#[[plugins]]
#repo = 'tyru/caw.vim' #{{{
## operater to comment out
#on_event = ['BufWinEnter']
#hook_add = 'runtime caw.vimrc'
##}}}
#[[plugins]]
#repo = 'scrooloose/nerdcommenter' #{{{
## Irritating: disturbs `norm N`
#on_map = 'NERDCommenter'
#hook_add = 'runtime nerdcommenter.vimrc'
##}}}

# Operater; Arrangement
[[plugins]]
repo = 'machakann/vim-swap'
on_map = '<Plug>(swap-'
hook_add = 'runtime swap.vimrc'
[[plugins]]
repo = 'junegunn/vim-easy-align' #{{{
on_map = ['<Plug>(EasyAlign)', '<Plug>(LiveEasyAlign)']
hook_add = 'runtime easy-align.vimrc'
#}}}
#[[plugins]]
#repo = 'AndrewRadev/splitjoin.vim' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime splitjoin.vimrc'
#}}}

# Operater; Simultaneous
[[plugins]]
repo = 'machakann/vim-sandwich' #{{{
on_event = 'InsertEnter'
on_map = '<Plug>(operator-sandwich-' # too late via <c-o>
hook_add = 'runtime sandwich.vimrc'
#}}}
#[[plugins]]
#repo = 'tpope/vim-surround' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime surround.vimrc'
#}}}
#[[plugins]]
#repo = 'terryma/vim-multiple-cursors' #{{{
#on_event = ['BufRead']
#hook_add = 'runtime multiple-cursors.vimrc'
##}}}

#[[plugins]]
#repo = 'tommcdo/vim-express' #{{{
#on_event = 'VimEnter'
#hook_post_source = 'runtime express.vimrc'
##}}}

#[[plugins]]
#repo = 'kana/vim-textobj-user' #{{{
## Note: enough with 'vim-matchup'
#on_event = 'BufRead'
#hook_post_source = 'runtime textobj-user.vimrc'
#[[plugins]]
#repo = 'kana/vim-textobj-fold'
##on_map = '<Plug>(textobj-fold-'  # Note: `on_map` makes no sense with text-obj.
#on_event = 'BufRead'
#hook_add = 'runtime textobject-fold.vimrc'
##}}}
