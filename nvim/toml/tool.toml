# From: dein.vimrc

[[plugins]]
repo = 'neoclide/coc.nvim' #{{{
# Should be lazy loaded to `:call coc#util#install()` automatically.
rev = 'release'
on_event = 'VimEnter'
hook_post_source = 'runtime coc.vimrc'
#}}}

# Leap;
[[plugins]]
repo = 'bkad/CamelCaseMotion' #{{{
on_event = 'VimEnter'
hook_post_source = 'runtime CamelCaseMotion.vimrc'
#}}}
[[plugins]]
repo = 'easymotion/vim-easymotion' #{{{
on_event = 'ColorScheme'
hook_post_source = 'runtime easymotion.vimrc'
[[plugins]]
repo = 'haya14busa/vim-easyoperator-phrase' #{{{
on_event = 'ColorScheme'
hook_post_source = 'runtime easyoperator.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-easymotion.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch-easymotion.vimrc'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-fuzzy.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime incsearch-fuzzy.vimrc'
#}}}
#}}}

# Filer;
[[plugins]]
repo = 'cocopon/vaffle.vim' #{{{
on_if = 'has("python3")'
hook_post_source = 'runtime vaffle.vimrc'
#}}}
### Filer; Defx {{{
#[[plugins]]
#repo = 'Shougo/defx.nvim' #{{{
### CAUTION: defx.vimrc MUST be sourced after dein#end() on dein.vim.
#on_if = 'has("python3")'
#hook_post_source = 'runtime defx.vimrc'
#}}}
#[[plugins]]
#repo = 'kristijanhusak/defx-git' {{{
## Ref: defx.vimrc
#on_source = 'defx.nvim'
#}}}
#[[plugins]]
#repo = 'kristijanhusak/defx-icons' {{{
#on_source = 'defx.nvim'
#}}}
##}}}

# Edit;
[[plugins]]
repo = 'machakann/vim-sandwich' #{{{
on_event = 'BufRead'
hook_post_source = 'runtime sandwich.vimrc'
#}}}
#[[plugins]]
#repo = 'tpope/vim-surround'{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime surround.vimrc'
#}}}
[[plugins]]
repo = 'tpope/vim-repeat' #{{{
on_event = ['TextChanged', 'TextChangedI']
#}}}

# Edit; Snippets #{{{
## Snippets; Engine #{{{
[[plugins]]
repo = 'Shougo/neosnippet.vim' #{{{
on_event = ['InsertEnter', 'TermOpen','CmdlineEnter']
hook_add = 'runtime! neosnippet.vimrc'
#}}}
#[[plugins]]
#repo = 'SirVer/ultisnips' #{{{
#on_event = ['InsertEnter','TermOpen']
#hook_post_source = 'runtime ultisnips.vimrc'
#}}}
#}}}

# Snippets; Contents #{{{
[[plugins]]
repo = 'Shougo/neosnippet-snippets' #{{{
on_event = ['InsertEnter', 'TermOpen','CmdlineEnter']
#}}}
[[plugins]]
repo = 'honza/vim-snippets' #{{{
on_event = ['InsertEnter', 'TermOpen']
#}}}
#[[plugins]]
#repo = 'garbas/vim-snipmate' #{{{
#on_event = ['InsertEnter', 'TermOpen']
#}}}
#}}}
#}}}

# Marks {{{
[[plugins]]
repo = 'mattesgroeger/vim-bookmarks' #{{{
on_map = 'm'
hook_post_source = 'runtime bookmarks.vimrc'
#}}}
#[[plugins]]
#repo = 'jacquesbh/vim-showmarks'{{{
#on_map = ['m','`',"'",'<space>']
#hook_post_source = 'runtime showmarks.vimrc'
# }}}
#}}}

# Imput Method #{{{
#[[plugins]]
#repo = 'tyru/eskk.vim' #{{{
## ERORR: Present Unnecessary Sign '>' on Kanji.
#on_event = ['InsertEnter', 'CmdlineEnter']
#hook_post_source = 'runtime eskk.vimrc'
# }}}
#[[plugins]]
#repo = 'tpope/vim-capslock' #{{{
## Doesn't Work
#on_event = ['InsertEnter', 'CmdlineEnter']
#hook_post_source = 'runtime capslock.vimrc'
##}}}
#[[plugins]]
#repo = 'mattn/vim-switch-esc-capslock' #{{{
#### For Windows?
#on_event = ['InsertEnter', 'CmdlineEnter']
#hook_post_source = 'runtime switch-esc-capslock'
##}}}
# }}}

# Vimwiki; Outliner #{{{
[[plugins]]
repo = 'vim-voom/VOoM' #{{{
on_ft = ['vimwiki','org','markdown','tex','toml']
hook_post_source = 'runtime voom.vimrc'
# }}}

## Table-Mode #{{{
#[[plugins]]
#repo = 'dhruvasagar/vim-table-mode' #{{{
#hook_add = 'runtime table-mode.vimrc'
#on_ft = ['org', 'text', 'vimwiki', 'md']
# }}}
# }}}

## Org Mode
#[[plugins]]
#repo = 'jceb/vim-orgmode' #{{{
#on_ft = 'org'
#hook_post_source = 'runtime orgmode.vimrc'
##}}}
#### Hyperlink
#[[plugins]]
#repo = 'vim-scripts/utl.vim' #{{{
#on_ft = 'org'
#hook_post_source = 'runtime utl.vimrc'
##}}}
##[[plugins]]
##repo = 'tpope/vim-speeddating' #{{{
### <c-a/x> for dateing.
##on_ft = 'org'
##hook_post_source = 'runtime speeddating.vimrc'
##}}}
##}}}

# Twitter {{{
[[plugins]]
repo = 'basyura/TweetVim' #{{{
on_event = 'CmdlineEnter'
hook_post_source = 'runtime tweetvim.vimrc'
#}}}
[[plugins]]
repo = 'basyura/twibill.vim' # {{{
on_event = 'CmdlineEnter'
hook_post_source = 'runtime twibill.vimrc'
#}}}
#}}}

#[[plugins]]
#repo = 'inkarkat/vim-SyntaxRange' #{{{
## Multiple-Language Syntax in one buffer.
#on_ft = ['snippets','org']
#hook_post_source = 'runtime SyntaxRange.vimrc'
##}}}
#[[plugins]]
#repo = 'chrisbra/NrrwRgn' #{{{
#on_event = 'VimEnter'
#hook_post_source = 'runtime NrrwRgn.vimrc'
##}}}

# Template
#[[plugins]]
#repo = 'mattn/sonictemplate-vim' #{{{
#on_event = 'BufNew'
#hook_post_source = 'runtime sonictemplate.vimrc'
#}}}

### Operator #{{{
[[plugins]]
repo = 'machakann/vim-sandwich' #{{{
on_event = 'BufRead'
hook_post_source = 'runtime sandwich.vimrc'
#}}}
[[plugins]]
repo = 'junegunn/vim-easy-align' #{{{
on_event = 'BufRead'
hook_post_source = 'runtime easy-align.vimrc'
#}}}
#[[plugins]]
#repo = 'AndrewRadev/splitjoin.vim' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime splitjoin.vimrc'
#}}}
#[[plugins]]
#repo = 'tpope/vim-surround' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime surround.vimrc'
#}}}
#}}}

# Shell; Deol
[[plugins]]
repo = 'Shougo/deol.nvim' #{{{
on_if = 'has("python3")'
hook_post_source = 'runtime deol.vimrc'
#}}}
## Shell; Async Processor
[[plugins]]
repo = 'thinca/vim-quickrun' #{{{
on_map = 'QuickRun'
hook_post_source = 'runtime quickrun.vimrc'
#}}}
[[plugins]]
repo = 'neomake/neomake' #{{{
on_map = 'make'
hook_post_source = 'runtime neomake.vimrc'
#}}}
#[[plugins]]
#repo = 'skywind3000/asyncrun.vim' #{{{
## Only supports external shell to qf.
#on_map = 'AsyncRun'
#hook_post_source = 'runtime asyncrun.vimrc'
#}}}
#[[plugins]]
#repo = 'Shougo/vimproc.vim' #{{{
## run vim-plugins asynchronously, like openbrowser, quickrun.
#build = 'make'
#}}}

# UI
[[plugins]]
repo = 'wsdjeg/dein-ui.vim' #{{{
on_event = 'CmdlineEnter'
hook_post_source = '''
cnoreabbrev <expr> du (getcmdtype() == ':' && getcmdline() =~ '^du$')? 'DeinUpdate' : 'du'
augroup MyDeinUiAugroup "{{{
  au!
  au FileType SpaceVimPlugManager setlocal signcolumn=
augroup END
'''
#}}}

# Denite {{{
#[[plugins]]
#repo = 'Shougo/denite.nvim' #{{{
#if = 'has("python3")'
#hook_add = 'runtime denite.vimrc'
##}}}
#[[plugins]]
#repo = 'Shougo/neoyank.vim'
#on_source = 'denite.nvim'
#[[plugins]]
#repo = 'ozelentok/denite-gtags'
#on_source = 'denite.nvim'
#[[plugins]]
#repo = 'rafi/vim-denite-session'
#on_source = 'denite.nvim'
#[[plugins]]
#repo = 'neoclide/denite-git'
#on_source = 'denite.nvim'
#[[plugins]]
#repo = 'Shougo/neomru.vim'
#on_source = 'denite.nvim'
[[plugins]]
repo = 'neoclide/coc-denite' #{{{
## for Denite source
#on_source = 'denite.nvim'
#}}}
#[[plugins]]
#repo = 'raghur/fruzzy' #{{{
#on_source = 'denite.nvim'
#hook_post_source = 'runtime fruzzy.vimrc'
#}}}
#}}}

# Linux Command
#[[plugins]]
#repo = 'tpope/vim-eunuch' #{{{
## ERORR: Seems no utils provided by the plugin.
#on_event = 'CmdlineEnter'
#hook_post_source = 'runtime eunuch.vimrc'
#}}}
