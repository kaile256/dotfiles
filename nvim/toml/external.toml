# From: dein.vimrc

# LSP
[[plugins]]
repo = 'neoclide/coc.nvim' #{{{
# Note: Written in TypeScript.
rev = 'release'
on_event = 'VimEnter'
hook_post_source = 'runtime coc.vimrc'
#}}}
#[[plugins]]
#repo = 'prabirshrestha/vim-lsp' #{{{
## Written in Pure viml
#hook_post_source = 'runtime lsp.vimrc'
#[[plugins]]
#repo = 'prabirshrestha/async.vim'
#on_event = 'BufRead'
#hook_post_source = 'runtime async.vimrc'
#[[plugins]]
#repo = 'prabirshrestha/asyncomplete.vim'
#on_event = 'BufRead'
#hook_post_source = 'runtime asyncomplete.vimrc'
#[[plugins]]
#repo = 'prabirshrestha/asyncomplete-lsp.vim'
#on_event = 'BufRead'
#hook_post_source = 'runtime asyncomplete-lsp.vimrc'
##}}}
#[[plugins]]
#repo = 'autozimu/LanguageClient-neovim' #{{{
## Note: Written in Rust.
#rev = 'next'
#build = 'bash install.sh'
#on_event = 'BufRead'
#hook_add = 'runtime LanguageClient.vimrc'
##}}}

# Git;
[[plugins]]
repo = 'tpope/vim-fugitive' #{{{
type = 'git'
on_event = 'BufRead'
hook_post_source = 'runtime fugitive.vimrc'
# Fugitive; Branch Vier
[[plugins]]
repo = 'idanarye/vim-merginal' #{{{
# to view branches and to merge from vim!
type = 'git'
on_event = 'BufRead'
hook_add = 'runtime merginal.vimrc'
#}}}
# Fugitive; Local Log Viewer
[[plugins]]
repo = 'int3/vim-extradite' #{{{
# Also provides diff viewer.
on_event = ['BufRead']
hook_post_source = 'runtime extradite.vimrc'
#}}}
## Fugitive; Log Wrapper
#[[plugins]]
#repo = 'rbong/vim-flog' #{{{
#on_event = ['BufRead']
#hook_post_source = 'runtime flog.vimrc'
#}}}
## Fugitive; Diff Wrapper
#[[plugins]]
#repo = 'arkwright/vim-manhunt' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime manhunt.vimrc'
##}}}
#[[plugins]]
#repo = 'junegunn/gv.vim' #{{{
#type = 'git'
#on_ft = ['fugitive', 'gitcommit', 'git']
#hook_post_source = 'runtime gv.vimrc'
##}}}
#[[plugins]]
#repo = 'rhysd/committia.vim' #{{{{{{
#type = 'git'
#on_ft = ['fugitive', 'gitcommit', 'git']
##on_source = 'vim-fugitive'
#hook_post_source = 'runtime committia.vimrc'
##}}}}}}
#}}} End of Fugitive
[[plugins]]
repo = 'rhysd/git-messenger.vim' #{{{
type = 'git'
on_cmd = 'GitMessenger'
hook_add = 'runtime git-messenger.vimrc'
#on_event = 'BufRead'
#hook_post_source = 'runtime git-messenger.vimrc'
#}}}
#[[plugins]]
#repo = 'airblade/vim-gitgutter' #{{{
## enough only with coc.nvim & fugitive.vim?
#type = 'git'
#on_event = 'BufRead'
#hook_post_source = 'runtime gitgutter.vimrc'
##}}}
#[[plugins]]
#repo = 'lambdalisue/gina.vim' #{{{
#on_event = ['BufWritePost']
#hook_post_source = 'runtime gina.vimrc'
##}}}

# Enable Collaborative Editing
[[plugins]]
repo = 'Floobits/floobits-neovim'
# Need to create an account of floobits.
on_cmd = 'Floo'
hook_add = 'runtime floobits.vimrc'

# Shell; Wrapper
[[plugins]]
repo = 'kassio/neoterm' #{{{
on_event = 'BufAdd'
hook_post_source = 'runtime neoterm.vimrc'
#}}}
[[plugins]]
repo = 'Shougo/deol.nvim' #{{{
on_event = 'VimEnter'
hook_post_source = 'runtime deol.vimrc'
#}}}

# Shell; Async Processor
#[[plugins]]
#repo = 'thinca/vim-quickrun' #{{{
#on_map = 'QuickRun'
#hook_add = 'runtime quickrun.vimrc'
##}}}
#[[plugins]]
#repo = 'neomake/neomake' #{{{
#on_map = 'make'
#hook_add = 'runtime neomake.vimrc'
#}}}
#[[plugins]]
#repo = 'skywind3000/asyncrun.vim' #{{{
## Only supports external shell to qf.
#on_map = 'AsyncRun'
#hook_add = 'runtime asyncrun.vimrc'
#}}}

# i3-wm
#[[plugins]]
#repo = 'termhn/i3-vim-nav' #{{{
#on_if = 'isdirectory("~/go/src/github.com/termhn/i3-vim-nav")'
#hook_post_source = 'runtime i3-vim-nav.vimrc'
##}}}
