# From: dein/dein.vim

#[ Repeat ]
[[plugins]]
repo = 'tpope/vim-repeat'
# Note: has no doc/
on_func = 'repeat#'
# Notice: mapping under add/ fails to find the autoload/ of vim-repeat
hook_post_source = 'runtime post/repeat.vim'
[[plugins]]
repo = 'inkarkat/vim-visualrepeat'
# used by easy-align on Visual mode.
on_func = 'visualrepeat#'
[[plugins]]
repo = 'Houl/repmo-vim'
on_func = 'repmo#'
hook_add = 'runtime add/repmo.vim'
hook_post_source = 'runtime post/repmo.vim'
#[[plugins]]
#repo = 'vim-scripts/repeatable-motions.vim'

#[ Join ]
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_cmd = ['SplitjoinJoin', 'SplitjoinSplit']
on_map = ['<Plug>SplitjoinJoin', '<Plug>SplitjoinSplit']
hook_add = 'runtime add/splitjoin.vim'
# [[plugins]]
# # repo = 'sk1418/Join'
# # Join with input arguments as separator.
# on_cmd = ['J', 'Join']
# hook_add = 'runtime add/Join.vim'
# [[plugins]]
# repo = 'jeetsukumaran/vim-linearly'
# on_func = 'linearly#'
# hook_add = 'runtime add/linearly.vim'

#[ Split ]
# [[plugins]]
# repo = 'rhysd/clever-split.vim'
# on_cmd = 'Clever'
# hook_add = 'runtime add/clever-split.vim'

#[ Relative to Current File ]
[[plugins]]
repo = 'tpope/vim-eunuch'
on_cmd = [
  'Delete',         # Delete a buffer and the file on disk simultaneously.
  'Unlink',         # Like :Delete, but keeps the now empty buffer.

  'Move',           # Rename a buffer and the file on disk simultaneously.
  'Rename',         # Like :Move, but relative to parent directory of current file.
  'Mkdir',          # Create a directory, defaulting to the parent of current file.

  'Chmod',          # Change the permissions of current file.

  'Cfind',          # Run find and load the results into the quickfix list.
  'Clocate',        # Run locate and load the results into the quickfix list.

  'Lfind',
  'Llocate:',

  'Wall',           # Write every open window. Handy for kicking off tools like `guard`.

  'SudoWrite',
  'SudoEdit',
]

# [ Comment ]
[[plugins]]
repo = 'suy/vim-context-commentstring'
# modify &commentstring on CursorMoved as g:context#commentstring#table[&ft]
on_ft = [
  'php',
]
hook_source = 'runtime source/context-commentstring.vim'

#[ Paste ]
[[plugins]]
repo = 'inkarkat/vim-UnconditionalPaste'
on_source = 'asterisk'
on_map = {nx = ['<Plug>UnconditionalPaste']}
hook_add = 'runtime add/UnconditionalPaste.vim'
hook_source = 'runtime source/UnconditionalPaste.vim'

#[ Mapping ]
[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_func = 'which_key#register'
on_cmd = 'WhichKey'
hook_add = 'source $DEIN_RC_DIR/which-key/add.vim'
hook_source = 'source $DEIN_RC_DIR/which-key/sou.vim'
hook_post_source = 'source $DEIN_RC_DIR/which-key/pos.vim'
# [[plugins]]
# repo = 'hecal3/vim-leader-guide'
# # Inspired by emacs's kai2nenobu/guide-key.
# # if = '!has("nvim")'
# on_cmd = 'LeaderGuide'
# hook_add = 'runtime add/leader-guide.vim'
# [[plugins]]
# # repo = 'spinks/vim-leader-guide'
# Note: It seems to have no reason to view it on floating window.
# if = 'has("nvim")'
# on_cmd = 'LeaderGuide'
# hook_add = 'runtime add/leader-guide.vim'

#[ Mode ]
[[plugins]]
repo = 'kaile256/vim-submode'
#repo = 'kana/vim-submode'
# make another mode!
on_func = 'submode#'
hook_add = 'source $DEIN_RC_DIR/submode/add.vim'
#hook_done_update = '''
#e $DEIN_GITHUB_DIR/kana/vim-submode/autoload/submode.vim
#%s/submode-/sbm-/g
#write

#[ Inline Edit ]
[[plugins]]
repo = 'AndrewRadev/inline_edit.vim'
# Edit in another window, like markdown's fenced scripts
on_cmd = 'InlineEdit'

#[ Find Root ]
[[plugins]]
repo = 'airblade/vim-rooter'
on_cmd = 'Rooter'
on_func = 'FindRootDirectory'
hook_add = 'runtime add/rooter.vim'
hook_source = 'runtime source/rooter.vim'
hook_post_source = 'runtime post/rooter.vim'
# [[plugins]]
# repo = 'mattn/vim-findroot'
# on_cmd = 'FindRoot'
# hook_add = 'runtime add/findroot.vim'
# # To enable to :FindRoot w/ other commands through <bar>.
# hook_done_update = '''
# e $DEIN_GITHUB_DIR/mattn/vim-findroot/plugin/findroot.vim
# g/command!/norm! Ea -bar
# g/s:findroot(/s/1/0
# write
# '''

#[ Cmdline ]
[[plugins]]
repo = 'tyru/vim-altercmd'
on_event = ['CmdLineEnter', 'CmdWinEnter']
hook_post_source = 'runtime post/altercmd.vim'
[[plugins]]
repo = 'markonm/traces.vim'
# Pattern preview for :substitute, :global, :v and :sort.
if = 'has("patch-8.0.1206")'
on_event = 'CmdLineEnter'
hook_source = 'runtime source/traces.vim'
[[plugins]]
repo = 'vim-scripts/sherlock.vim'
# Completion mappings in Cmdline.
on_func = ['sherlock#']
hook_source = 'runtime source/sherlock.vim'

#[ Register ]
[[plugins]]
repo = 'svermeulen/vim-yoink'
on_map = {nx = ['<Plug>(Yoink']}
hook_add = 'runtime add/yoink.vim'
#hook_source = 'runtime source/yoink.vim'
#hook_post_source = 'call yoink#onVimEnter()'
#[[plugins]]
#repo = 'svermeulen/vim-easyclip'
#on_event = 'BufWinEnter'
#hook_add = 'runtime add/easyclip.vim'
#hook_source = 'runtime source/easyclip.vim'
[[plugins]]
repo = 'junegunn/vim-peekaboo'
on_map = {nxi = ['<Plug>(peekaboo']}
hook_add = 'runtime add/peekaboo.vim'
hook_source = 'runtime source/peekaboo.vim'
#hook_post_source = 'runtime post/peekaboo.vim'

#[ Increment ]
# [[plugins]]
# repo = 'tpope/vim-speeddating'
# # <C-a/x> for dating.
# on_func = 'speeddating#'
# on_map = {nx = '<Plug>SpeeDdating'}
# hook_add = 'runtime add/speeddating.vim'
# [[plugins]]
# repo = 'triglav/vim-visual-increment'
# on_map = {'x' = ['<Plug>VisualIncrement', '<Plug>VisualDecrement']}
#
#[ Mark ]
#[[plugins]]
#repo = 'Yilin-Yang/vim-markbar'
## peekaboo for marks
#on_map = {nx = ['<Plug>OpenMarkbar']}

#[ Undo ]
#[[plugins]]
#repo = 'machakann/vim-highlightedundo'
## TODO: Make it compatible with vim-repeat
#on_map = '<Plug>(highlightedundo-'
[[plugins]]
repo = 'simnalamburt/vim-mundo'
on_cmd = 'Mundo'
hook_add = 'runtime add/mundo.vim'
hook_source = 'runtime source/mundo.vim'
#[[plugins]]
#repo = 'jaxbot/selective-undo.vim'
#on_event = 'BufRead'
#hook_post_source = 'runtime add/selective-undo.vim'
#[[plugins]]
#repo = 'machakann/vim-highlightedundo'
#if = 'executable("diff")'
#on_event = 'BufRead'
#hook_post_source = 'runtime add/highlightedundo.vim'
#[[plugins]]
#repo = 'mbbill/undotree'
#on_map = 'Undotree'
#hook_add = 'runtime add/undotree.vim'
#[ Diff ]
[[plugins]]
repo = 'will133/vim-dirdiff'
# Compare a pair of directories recursively and start vimdiff.
on_cmd = 'DirDiff'
hook_add = 'runtime add/dirdiff.vim'

#[[plugins]]
#repo = 'rickhowe/diffchar.vim'
#on_if = '&diff'
## DiffUpdated for Internal diff
## FilterWritePost for External diff
#on_event = ['DiffUpdated', 'FilterWritePost']
#on_func = ['diffchar#']
#hook_source = 'runtime add/diffchar.vim'
[[plugins]]
repo = 'AndrewRadev/linediff.vim'
on_cmd = 'Linediff'
hook_add = 'runtime add/linediff.vim'
#[[plugins]]
#repo = 'chrisbra/vim-diff-enhanced'
#on_cmd = ['EnhancedDiff', 'PatienceDiff']
#hook_add = 'runtime diff-enhanced.vimrc'
# :norm <c-a>/<c-x>
#[[plugins]]
#repo = 'qwertologe/nextval.vim'
## has some errors; unintended deletion of words around the target numbers
#on_map = '<Plug>nextval'
#hook_add = 'runtime add/nextval.vim'

#[ Quickfix ]
[[plugins]]
repo = '$VIM_PACK_HOME/cfilter'
# Get matched named files from quickfix list by ':Cfilter /pat/'.
on_cmd = ['Cfilter', 'Lfilter']

#[ Help ]
[[plugins]]
repo = 'thinca/vim-ref'
on_cmd = ['Ref']
on_func = ['ref#']
on_map = {nx = '<Plug>(ref-'}
hook_source = 'runtime source/ref.vim'
[[plugins]]
repo = 'notomo/helpeek.vim'
# provides a wrapper command to show help in a floating/popup window.
on_cmd = ['Helpeek']

#[ Window ]
# [[plugins]]
# repo = 'gillyb/stable-windows'
# # Don't scroll windows above when a new window opened below.
# # Issue: It doesn't get along with floating window.
# on_event = 'WinNew'
[[plugins]]
repo = 'wesQ3/vim-windowswap'
on_func = ['WindowSwap#MarkWindowSwap', 'WindowSwap#EasyWindowSwap']
hook_add = 'source $DEIN_RC_DIR/windowswap/add.vim'
[[plugins]]
repo = 'yaronkh/vim-winmanip'
on_map = {n = [
  '<Plug>(MoveBuf',
  '<Plug>(MoveJumpBuf',
  '<Plug>(MoveWinTo',
  '<Plug>(CopyBuf',
  '<Plug>(CopyJump',
  '<Plug>(MaximizeWin)',
  '<Plug>(ClearAllWindows)',
  '<Plug>(ClearBufferList)',
]}
hook_add = 'runtime add/winmanip.vim'
[[plugins]]
repo = 'AndrewRadev/undoquit.vim'
on_func = ['undoquit#SaveWindowQuitHistory']
on_cmd = ['Undoquit', 'UndoquitTab', 'UndoableTabclose']
on_event = 'QuitPre'
hook_add = 'runtime add/undoquit.vim'
#[[plugins]]
#repo = 'tyru/undoclosewin.vim'
## Doesn't seem to work.
#on_cmd = ['UcwRestoreWindow', 'UcwOpenHistoryBuffer']
#on_map = {n = ['<Plug>(ucw-restore-window)']}
#[[plugins]]
#repo = 'camspiers/lens.vim'
#on_func = ['lens#']
#hook_source = 'runtime source/lens.vim'
#[[plugins]]
#repo = 'camspiers/animate.vim'
#on_source = ['lens.vim']
#on_func = ['animate#']

#[ Floating Window ]
#[[plugins]]
#repo = 'ncm2/float-preview.nvim'
#on_source = ['denite.nvim', 'deolplete.nvim', 'coc.nvim']
#hook_source = 'runtime source/float-preview.vim'
#hook_done_update = '''
#e $DEIN_GITHUB_DIR/ncm2/float-preview.nvim/plugin/float_preview.vim
#g/au/Complete/norm! i"
#g/au/InsertLeave/norm! i"
#write
#'''
#[[plugins]]
#repo = 'voldikss/vim-floaterm'
#on_cmd = 'FloatermToggle'
#on_map = '<Plug>(floaterm-'
#hook_add = 'runtime add/floaterm.vim'
#[ Session ]
#[[plugins]]
#repo = 'xolox/vim-session'
#depend = 'xolox/vim-misc'
#on_cmd = ['SessionOpen', 'SessionSave']
#hook_done_update = '''
#e $DEIN_GITHUB_DIRxolox/vim-session/plugin/session.vim
#g/command!/g/Session /norm! ndeBP
#g/command!/s/RestartVim/SessionVimRestart
#write
#'''
#[[plugins]]
#repo = 'thaerkh/vim-workspace'
#
#[ Startpage ]
#[[plugins]]
#repo = 'mhinz/vim-startify'

#[ Menu ]
# [[plugins]]
# # repo = 'skywind3000/quickmenu.vim'
# on_func = ['quickmenu#toggle']
# hook_add = 'runtime add/quickmenu.vim'
# hook_post_source = 'runtime post/quickmenu.vim'
