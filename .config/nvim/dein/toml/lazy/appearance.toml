# From: dein/dein.vim

# [[plugins]]
# repo = 'wellle/context.vim'
# # Note: irritative, though very useful plugin.
# # Show the begining line of block where cursor is, when hidden over window.
# on_event = 'BufWinEnter'
# hook_source = 'runtime source/context.vim'
# hook_post_source = 'runtime post/context.vim'

#[ Indent ]
# [[plugins]]
# repo = 'nathanaelkane/vim-indent-guides'
# # Fill indent by colors
# on_ft = 'snippets'
# hook_source = 'runtime source/indent-guides.vim'
[[plugins]]
repo = 'Yggdroot/indentLine'
on_event = 'BufRead'
hook_source = 'runtime source/indentLine.vim'
#[[plugins]]
#repo = 'thaerkh/vim-indentguides'
#on_event = 'BufRead'

#[ Resonance ]
[[plugins]]
repo = 'itchyny/vim-cursorword'
# Underlines appear on every word under the cursor.
on_event = 'BufAdd'
# Error: no such Event CursorWord0
#hook_add = 'let g:cursorword_highlight = 0'
hook_post_source = 'runtime add/cursorword.vim'
[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
if = 'has("nvim")'
on_event = 'BufRead'
hook_add = 'source $DEIN_RC_DIR/hlslens/add.vim'
hook_source = 'lua $DEIN_RC_DIR/hlslens/sou.lua'
#[ Emphasize ]
#[[plugins]]
#repo = 't9md/vim-quickhl'
#on_map = {
#  nx = '<Plug>(quickhl-',
#  n  = '<Plug>(operator-quickhl-',
#}
#hook_add = 'runtime add/quickhl.vim'
#hook_post_source = 'runtime post/quickhl.vim'
[[plugins]]
repo = 'junegunn/goyo.vim'
on_cmd = 'Goyo'
[[plugins]]
repo = 'junegunn/limelight.vim'
# Note: requires &termguicolors = 1
on_map = {nx = '<Plug>(Limelight'}
on_cmd = 'Limelight'
hook_add = 'runtime add/limelight.vim'
hook_source = 'runtime source/limelight.vim'
hook_post_source = 'runtime post/limelight.vim'
[[plugins]]
repo = 'machakann/vim-highlightedyank'
# coc's highlight on yank sometimes leaves the highlight after the role.
on_event = ['TextYankPost']
hook_source = 'runtime source/highlightedyank.vim'

#[ Rainbow ]
[[plugins]]
repo = 'luochen1990/rainbow'
if = 'has("nvim")'
# Notice: to activate, either g:rainbow_active or g:rainbow_conf must exists.
on_func = 'rainbow_main#load'
hook_add = 'runtime add/rainbow.vim'
hook_source = 'runtime source/rainbow.vim'
#[[plugins]]
#repo = 'kien/rainbow_parentheses.vim'
# less scripts than 'frazrepo/vim-rainbow'
#on_func = ['rainbow_parentheses#']
#on_ft = [
#  'c',
#  'cpp',
#  'objc',
#  'objcpp',
#  'go',
#  'java',
#  'rust',
#]
#hook_source = 'runtime source/rainbow_parentheses.vim'
#[[plugins]]
#repo = 'frazrepo/vim-rainbow'
## customizable up to filetypes
#on_func = ['rainbow#']
#on_cmd = ['RainbowLoad']
#hook_add = 'runtime add/rainbow-frazrepo.vim'
#hook_source = 'runtime source/rainbow-frazrepo.vim'
#[[plugins]]
#repo = 'thiagoalessio/rainbow_levels.vim'
## changes highlight as the indent, *not* up to parentheses
#on_cmd = ['RainbowLevelsOn', 'RainbowLevelsToggle']

#[ Icons ]
# [[plugins]]
# repo = 'ryanoasis/vim-devicons'
# on_source = ['denite.nvim', 'vim-airline', 'lightline.vim']
#
#[ Statusline ]
#[[plugins]]
#repo = 'vim-airline/vim-airline'
## to use extentions, it check by exists('*foo'); surely loaded after all the
## plugin are loaded before vim-airline is loaded.
## on_source is slower to be set.
#on_if = "exists('*FugitiveHead') && exists(':CocCommand')"
#on_event = ['Syntax']
## Uncompatible with nyaovim?
## Better to be sourced earlier than colorschemes
##hook_add = '''
##" make sure extention to work
##if !exists('*FugitiveHead')
##  function! FugitiveHead(...) abort
##    call fugitive#head(join(a:000, ','))
##  endfunction
##endif
##'''
#hook_source = 'runtime source/airline.vim'
#hook_post_source = 'set noshowmode noruler'
#[[plugins]]
#repo = 'vim-airline/vim-airline-themes'
## Note: original only has 'dark'
#on_source = ['vim-airline']
#[[plugins]]
#repo = 'renyard/vim-git-flow-format'
#type = 'git'
#depends = 'vim-airline'
#on_event = ['BufRead']

[[plugins]]
repo = 'itchyny/lightline.vim'
on_event = 'Syntax'
hook_source = 'runtime source/lightline.vim'
hook_post_source = 'runtime post/lightline.vim'
[[plugins]]
repo = 'josa42/vim-lightline-coc'
on_source = 'lightline.vim'
#[[plugins]]
#repo = 'albertomontesg/lightline-asyncrun'
## provides an indicator to tell async jobs running in background.
#on_source = 'vim-airline'
#depends = 'asyncrun.vim'
#hook_post_source = 'runtime add/lightline-asyncrun.vim'
#[[plugins]]
#repo = 'taohexxx/lightline-buffer'
#on_source = 'lightline.vim'
#hook_post_source = 'runtime add/lightline-buffer.vim'

#[[plugins]]
#repo = 'edkolev/promptline.vim'
#on_event = ['TermOpen']
## Note: this plugin is for shell
## TODO: necessary to config for bash/zsh/fish to use this plugin
#hook_post_source = 'runtime post/promptline.vim'
[[plugins]]
repo = 'gcavallanti/vim-noscrollbar'
# Visualize relational cursor position in statusline/tabline.
# You can use it in lightline.
on_func = 'noscrollbar#statusline'
# [[plugins]]
# # repo = 'Xuyuanp/scrollbar.nvim'
# if = 'has("nvim")'
# on_event = ['WinEnter']
# hook_add = 'runtime add/scrollbar.vim'
#
#[ Color Picker ]
[[plugins]]
repo = 'naquad/vim-picker'
lazy = 0
[[plugins]]
repo = 'DougBeney/pickachu'
on_cmd = 'Pickachu'
hook_add = 'runtime add/pickachu.vim'

