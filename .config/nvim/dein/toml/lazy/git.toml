# From: dein/dein.vim
# Ref: fugitive.toml

[[plugins]]
repo = 'ruanyl/vim-gh-line'
# open github in browser at the current line
on_cmd = ['GHInteractive', 'GBInteractive']
#[[plugins]]
#repo = 'whatyouhide/vim-lengthmatters'
## change highlight &tw
#on_event = 'Colorscheme'
#[ Workflow ]
# [[plugins]]
# repo = 'kdheepak/lazygit.nvim'
# # on_cmd = 'LazyGit'
# [[plugins]]
# repo = 'iberianpig/tig-explorer.vim'
# # Neovim seems to have no problems with nvr.
# if = '!has("nvim")'
# # no nest of vim-tig-vim-tig-... using host vim process
# on_cmd = [
#   'TigOpenCurrentFile',
#   'TigOpenProjectRootDir',
#   'TigGrep',
#   'TigBlame',
# ]
# hook_source = 'runtime source/tig-explorer.vim'
# [[plugins]]
# repo = 'rbgrouleff/bclose.vim'
# if = 'has("nvim")'
# on_source = ['tig-explorer.vim', 'ranger.vim']
# [[plugins]]
# repo = 'jreybert/vimagit'
# on_cmd =  'Magit'
#[ Commit ]
[[plugins]]
repo = 'johngrib/vim-git-msg-wheel'
# Line Completion from recent commit messages on gitcommit.
on_ft = ['gitcommit']
hook_source = 'runtime source/git-msg-wheel.vim'
# [[plugins]]
# repo = 'rhysd/git-messenger.vim'
# # Use coc-git instead.
# # Show commit message in popup.
# on_cmd = 'GitMessenger'
# hook_add = 'runtime add/git-messenger.vim'
#
#[ Blame ]
#[[plugins]]
#repo = 'rhysd/ghpr-blame.vim'
## Note: Dominant behavior on a tab
#on_cmd =  'GHPRBlame'
#hook_source = 'runtime source/ghpr-blame.vim'
[[plugins]]
repo = 'APZelos/blamer.nvim'
# On Visual mode, show blames on every lines at once.
# Without virtualtext, it will show in popup.
on_cmd = 'BlamerShow'
hook_source = 'runtime source/blamer.vim'
#[[plugins]]
#repo = 'tveskag/nvim-blame-line'
# Note: seems to have some bugs
## shows blames in virtual line
#if = 'has("nvim")'
#on_cmd =  ['ToggleBlameLine', 'SingleBlameLine', 'EnableBlameLine']
#[[plugins]]
#repo = 'iamcco/sran.nvim'
#if = 'has("nvim") || v:version >= 801'
#hook_done_update = 'call sran#util#install()'
#on_func  = ['sran#rpc#']
#hook_add = 'runtime add/sran.vim'
#[[plugins]]
#repo = 'iamcco/git-p.nvim'
## shows blames in virtual line
#depend = 'sran.nvim'
#type     = 'git'
#on_event = 'BufRead'
#hook_source = 'runtime source/git-p.vim'
#[[plugins]]
#repo = 'zivyangll/git-blame.vim'
## Ref: zivyangll/git-blame.vim/issues/18
##  causes an error on 'cd' with vimproc
#on_cmd = ['GitBlame']
#on_func = ['gitblame#echo']
#hook_add = '''
#source $DEIN_GITHUB_DIR/zivyangll/git-blame.vim/plugin/gitblame.vim
#'''

#[[plugins]]
#repo = 'RobertAudi/git-blame.vim'
#on_func = ['gitblame#blame']

#[ Log ]
#[[plugins]]
#repo = 'junkblocker/git-time-lapse'
## use map to <Left>/<Right> and <S-Left>/<S-Right>
#on_cmd = ['GitTimeLapse']
[[plugins]]
repo = 'cohama/agit.vim'
# git log viewer; faster than the others presently
# TODO: set each colors on different branch's flow like vim-gitv
on_cmd = 'Agit'
hook_source = 'runtime source/agit.vim'
[[plugins]]
repo = 'lambdalisue/gina.vim'
on_cmd = ['Gina']
hook_add = 'runtime add/gina.vim'
hook_post_source = 'runtime post/gina.vim'

#[ Hunk ]
[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = 'BufRead'
hook_add = 'source $DEIN_RC_DIR/gitgutter/add.vim'
hook_source = 'source $DEIN_RC_DIR/gitgutter/sou.vim'
hook_post_source = 'source $DEIN_RC_DIR/gitgutter/pos.vim'
#[[plugins]]
#repo = 'mhinz/vim-signify'
## works without 'git'
#on_event = ['BufRead']
##hook_source = 'runtime source/signify.vim'
#[[plugins]]
#repo = 'chrisbra/changesPlugin'
## works without 'git'
#on_event = ['BufRead']
#[ Rebase ]
# [[plugins]]
# repo = 'hotwatermorning/auto-git-diff'
# on_ft = ['gitrebase', 'git-rebase-todo']
# # on_map = {nx = '<Plug>(auto-git-diff-'}
# # hook_source = 'source $DEIN_RC_DIR/auto-git-diff/sou.vim'
#[[plugins]]
#repo = 'salcode/vim-interactive-rebase-reverse'
## reverse commit order from top-to-bottom to bottom-to-top
#on_ft = ['gitrebase']
#[[plugins]]
#repo = 'piersy/vim-rebase-view'
#lazy = 0

#[ Stash ]
#[[plugins]]
#repo = 'tweekmonster/gitbusy.vim'
## automatic stash on checkout, via :GitBusy
#on_cmd =  ['GitBusy']

#[ Git Ignore ]
# [[plugins]]
# repo = 'iwataka/gitignore.vim'
# on_cmd = 'Gitignore'

#[ Resolve Conflict ]
[[plugins]]
repo = 'rhysd/conflict-marker.vim'
# Highlight conflict markers like '<<<<<<<'.
# Provide mappings to jump among Conflict markers.
# Extend matchit.vim
on_event = 'BufRead'
hook_source = 'runtime source/conflict-marker.vim'
# # [[plugins]]
# # repo = 'samoshkin/vim-mergetool'
# on_cmd = 'MergetoolStart'
# hook_add = 'runtime add/mergetool.vim'
# hook_source = 'runtime source/mergetool.vim'
[[plugins]]
repo = 'christoomey/vim-conflicted'
depends = 'vim-fugitive'
on_cmd = 'Conflicted'
hook_source = 'runtime source/conflicted.vim'
[[plugins]]
repo = 'whiteinge/diffconflicts'
# Keep $LOCAL and $REMOTE as resolving conflictions, and only affects the
# buffer that contains conflict-markers.
# This plugin doesn't treat three-way diffs which doesn't work well with Vim's
# syntax highlighting to diff.
on_cmd = ['DiffConflicts', 'DiffConflictsWithHistory']

#[ GitHub ]
[[plugins]]
repo = 'skanehira/gh.vim'
# browse repositories in Vim
if = '!has("nvim")'
on_path = '^gh://'
hook_source = 'runtime source/gh.vim'
