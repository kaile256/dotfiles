# From: rc/dein.vim

#[ Vim ]
[[plugins]]
repo = 'mhinz/vim-lookup'
# Enable to jump to definition as &runtimepath.
on_ft = 'vim'
#on_map = '<Cmd>lookup#'
hook_source = 'runtime source/lookup.vim'

#[ Help ]
[[plugins]]
repo = 'thinca/vim-ft-help_fold'
# Note: conflicted with `set modeline`
on_ft = 'help'
hook_source = 'runtime source/ft-help_fold.vim'

#[[plugins]]
#repo = 'LeafCage/vimhelpgenerator'
#on_cmd =  ['VimHelpGenerator']
#hook_source = 'runtime source/vimhelpgenerator.vim'

#[ Checker ]
[[plugins]]
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'
hook_add = 'runtime add/helpful.vim'
[[plugins]]
repo = 'tpope/vim-scriptease'
on_cmd = 'scriptease#'
hook_add = 'runtime add/scriptease.vim'

[[plugins]]
repo = 'thinca/vim-scouter'
on_cmd = 'Scouter'
hook_add = 'runtime add/scouter.vim'
[[plugins]]
repo = 'AndrewRadev/bufferize.vim'
on_cmd = ['Bufferize']
hook_add = 'runtime add/bufferize.vim'

#[ Library ]
[[plugins]]
repo = 'vim-jp/vital.vim'
# a lib/ for vimscript
on_cmd = 'Vitalize'
hook_source = 'runtime add/vital.vim'

#[ Profile/Benchmark ]
#[[plugins]]
#repo = 'LeafCage/laptime.vim'
## no use?
#on_func =  ['laptime#new']
#
#[[plugins]]
#repo = 'hyiltiz/vim-plugins-profile'
## Not a vim plugin; run by one of python/ruby/bash
## To run for nvim, specify 'nvim' as the argument.
#
[[plugins]]
repo = 'mattn/benchvimrc-vim'
if = "!has('nvim')"
on_cmd = ['BenchVimrc']
[[plugins]]
repo = 'junegunn/vim-startuptime-benchmark'
# how to use it?

#[ Test Framework ]
[[plugins]]
repo = 'thinca/vim-themis'
# A library of vim-script for test-making.
on_path = '.themisrc'
hook_post_source = 'runtime add/themis.vim'

[[plugins]]
repo = 'junegunn/vader.vim'
# a test-framework for vimscript.
on_cmd = 'Vader'
on_path = '*.vader'

#[ Local ]
#[[plugins]]
#repo = 'embear/vim-localvimrc'

[[plugins]]
repo = 'thinca/vim-localrc'
# add ".local.vimrc"
#on_if = "expand('%:p') =~# fnamemodify($MYVIMRC, ':h')"
on_event = ['VimEnter']
