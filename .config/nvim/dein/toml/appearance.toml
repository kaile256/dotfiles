# From: rc/dein.vim

#[ Indent ]
[[plugins]]
repo = 'Yggdroot/indentLine'
on_ft = ['python']
hook_source = 'runtime source/indentLine.vim'

#[ Resonance ]
[[plugins]]
repo = 'itchyny/vim-cursorword'
# Underlines appear on every word under the cursor.
on_event = 'BufAdd'
# Error: no such Event CursorWord0
#hook_add = 'let g:cursorword_highlight = 0'
hook_post_source = 'runtime add/cursorword.vim'

[[plugins]]
repo = 't9md/vim-quickhl'
on_map = {
  nx = '<Plug>(quickhl-',
  n  = '<Plug>(operator-quickhl-',
}
hook_add = 'runtime add/quickhl.vim'

#[[plugins]]
#repo = 'wellle/context.vim'
## shows function/if/while and so on in a preview
## Note: too slow
#on_event = ['BufWinEnter']
#hook_source = 'runtime source/context.vim'
#[[plugins]]
#repo = 'junegunn/limelight.vim'
#on_cmd = 'Limelight'
#hook_add = 'runtime add/limelight.vim'

[[plugins]]
repo = 'machakann/vim-highlightedyank'
# coc's highlight on yank sometimes leaves the highlight after the role.
on_event = ['TextYankPost']
hook_source = 'runtime source/highlightedyank.vim'

#[ Rainbow ]
[[plugins]]
repo = 'luochen1990/rainbow'
# Notice: to activate, either g:rainbow_active or g:rainbow_conf must exists.
on_event = ['BufAdd']
#hook_add = 'runtime add/rainbow-luochen1990.vim'
hook_source = 'runtime source/rainbow-luochen1990.vim'
#[[plugins]]
#repo = 'kien/rainbow_parentheses.vim'
# less scripts than 'frazrepo/vim-rainbow'
#on_func = ['rainbow_parentheses#']
#on_ft = [
#  'c',
#  'cpp',
#  'objc',
#  'objcpp',
#  'go',
#  'java',
#  'rust',
#]
#hook_source = 'runtime source/rainbow_parentheses.vim'
#[[plugins]]
#repo = 'frazrepo/vim-rainbow'
## customizable up to filetypes
#on_func = ['rainbow#']
#on_cmd = ['RainbowLoad']
#hook_add = 'runtime add/rainbow-frazrepo.vim'
#hook_source = 'runtime source/rainbow-frazrepo.vim'
#[[plugins]]
#repo = 'thiagoalessio/rainbow_levels.vim'
## changes highlight as the indent, *not* up to parentheses
#on_cmd = ['RainbowLevelsOn', 'RainbowLevelsToggle']

#[ Icons ]
[[plugins]]
repo = 'ryanoasis/vim-devicons'
on_event = 'BufRead'

#[ Statusline ]
[[plugins]]
repo = 'vim-airline/vim-airline'
# to use extentions, it check by exists('*foo'); surely loaded after all the
# plugin are loaded before vim-airline is loaded.
# on_source is slower to be set.
on_if = "exists('*FugitiveHead') && exists(':CocCommand')"
on_event = ['Syntax']
# Uncompatible with nyaovim?
# Better to be sourced earlier than colorschemes
#hook_add = '''
#" make sure extention to work
#if !exists('*FugitiveHead')
#  function! FugitiveHead(...) abort
#    call fugitive#head(join(a:000, ','))
#  endfunction
#endif
#'''
hook_source = 'runtime source/airline.vim'
hook_post_source = 'set noshowmode noruler'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
# Note: original only has 'dark'
on_source = ['vim-airline']

[[plugins]]
repo = 'renyard/vim-git-flow-format'
type = 'git'
depends = 'vim-airline'
on_event = ['BufRead']

[[plugins]]
repo = 'mg979/vim-xtabline'
on_event = ['VimEnter']
#hook_add = 'runtime add/xtabline.vim'
hook_source = 'runtime source/xtabline.vim'
hook_done_update = '''
exe 'e' g:dein_github_dir .'/mg979/vim-xtabline/autoload/xtabline/maps.vim'
g/<Plug>(XT-Select-Buffer)/s/<unique>//e
write
'''

#[[plugins]]
#repo = 'liuchengxu/eleline.vim'
#on_event = 'VimEnter'
#hook_source = 'runtime source/eleline.vim'

#[[plugins]]
#repo = 'hardcoreplayers/spaceline.vim'
## Not good w/ neovim-qt
#on_event = 'BufRead'
#hook_source = 'runtime rc/spaceline.vim'

#[[plugins]] # has extentions
#repo = 'itchyny/lightline.vim'
#on_event = 'BufAdd'
#hook_post_source = 'runtime add/lightline.vim'

#[[plugins]]
#repo = 'albertomontesg/lightline-asyncrun'
## provides an indicator to tell async jobs running in background.
#on_source = 'vim-airline'
#depends = 'asyncrun.vim'
#hook_post_source = 'runtime add/lightline-asyncrun.vim'
#[[plugins]]
#repo = 'taohexxx/lightline-buffer'
#on_source = 'lightline.vim'
#hook_post_source = 'runtime add/lightline-buffer.vim'

#[[plugins]]
#repo = 'edkolev/promptline.vim'
#on_event = ['TermOpen']
## Note: this plugin is for shell
## TODO: necessary to config for bash/zsh/fish to use this plugin
#hook_post_source = 'runtime post/promptline.vim'
#
#[ Colorscheme ]
#[[plugins]]
#repo = 'KeitaNakamura/neodark.vim'
#on_event = 'VimEnter'
#hook_source = 'runtime add/neodark.vim'

#[[plugins]]
#repo = 'flrnprz/candid.vim'
## Looks like dracula scheme.
#on_event = 'VimEnter'
#hook_post_source = 'runtime add/candid.vim'
[[plugins]]
repo = 'joshdick/onedark.vim'
on_func = ['onedark#']
#on_event = ['VimEnter']
#[ Colorscheme.monokai ]
#[[plugins]]
#repo = 'phanviet/vim-monokai-pro'
## purple-base monokai.
#on_event = ['VimEnter']
#[[plugins]]
#repo = 'patstockwell/vim-monokai-tasty'
## the colorscheme name is 'vim-monokai-tasty'.
#on_event = ['VimEnter']
#[[plugins]]
#repo = 'ErichDonGubler/vim-sublime-monokai'
#on_event = ['VimEnter']
[[plugins]]
repo = 'sainnhe/sonokai'
on_event = ['VimEnter']
hook_source = 'runtime source/sonokai.vim'
hook_post_source = 'runtime post/sonokai.vim'

#[ Colorscheme.Collection ]
[[plugins]]
repo = 'flazz/vim-colorschemes'
# Note: not include airline/lightline's
# some colorschemes like onedark need another repo to call autoload-functions
on_event = 'VimEnter'
hook_post_source = 'runtime post/colorschemes.vim'
# Note: no use to ':au Colorscheme' at start even in /source
#hook_source      = 'runtime source/colorschemes.vim'

#[[plugins]]
#repo = 'rafi/awesome-vim-colorschemes'
#on_event = ['VimEnter']
#
[[plugins]]
repo = 'rhysd/try-colorscheme.vim'
# try colorscheme via URL/Repo
on_func =  ['try_colorscheme#try']
hook_add = 'runtime add/try-colorscheme.vim'

#[ Colorscheme.Edit ]
[[plugins]]
repo = 'cocopon/inspecthi.vim'
# Generates a beautiful color swatch from the current buffer
on_cmd = ['Inspecthi']
hook_add = 'runtime add/inspecthi.vim'
hook_done_update = '''
exe 'e' g:dein_github_dir .'/cocopon/inspecthi.vim/plugin/inspecthi.vim'
%s/\<Inspecthi\>/ColoLinks
write
'''

#[[plugins]]
#repo = 'cocopon/colorswatch.vim'
## Inspects a link structure of highlighting groups
#on_cmd = 'ColorSwatchGenerate'
#hook_add = 'runtime add/colorswatch.vim'

#[[plugins]]
#repo = 'rbtnn/vim-coloredit'
## no support for neovim
#if = '!has("nvim")'
#on_cmd =  ['ColorEdit']

#[[plugins]]
#repo = 'cocopon/pgmnt.vim'
## Template engine for colorschemes, in pure Vim script
## e.g., if g:colors_name ==# 'iceberg' | call pgmnt#foo#bar('foobar', 'foofoo') ...
#on_event = 'VimEnter'
#hook_post_source = 'runtime add/pgmnt.vim'

#[[plugins]]
#repo = 'norcalli/nvim-terminal.lua'
#on_cmd = "lua require 'terminal'.setup"
#hook_add = 'runtime add/terminal.lua.vim'

#[[plugins]]
#repo = 'norcalli/nvim-colorizer.lua'
##on_cmd = 'ColorizerAttachToBuffer'
#on_cmd = "lua require'colorizer'.setup()"
#hook_add = 'runtime add/colorizer.lua.vim'
[[plugins]]
repo = 'RRethy/vim-hexokinase'
build = 'make hexokinase'
on_cmd = ['HexokinaseToggle', 'HexokinaseTurnOn']
hook_add = 'runtime add/hexokinase.vim'
hook_source = 'runtime source/hexokinase.vim'
