# From: dein/dein.vim

#[ Charater's Case ]
# [[plugins]]
# repo = 'chaoren/vim-wordmotion'
# # Treat preset chars as spaces
# on_map = {nox = '<Plug>WordMotion_'}
# hook_add = 'runtime add/wordmotion.vim'
# hook_source = 'runtime source/wordmotion.vim'
[[plugins]]
repo = 'bkad/CamelCaseMotion'
# PR-Merged: bkad/CamelCaseMotion/pull/41
on_map = {nxo = '<Plug>CamelCaseMotion_'}
#on_event = 'BufRead'
hook_add = 'runtime add/CamelCaseMotion.vim'
#hook_post_source = '''
#call add(g:camelcasemotion#forward_to_end_list, "%(\a|\d)+\ze#")
#'''
[[plugins]]
repo = 'arthurxavierx/vim-caser'
on_map = {nx = '<Plug>Caser'}
hook_add = 'runtime add/caser.vim'

#[ Search ]
[[plugins]]
repo = 'andymass/vim-matchup'
# Better `%`
# Note: should be source post/ after :colo from other plugin,
# which :colo after event-ColorScheme.
on_event = 'Syntax'
hook_add = 'runtime add/matchup.vim'
hook_source = 'runtime source/matchup.vim'
[[plugins]]
repo = 'haya14busa/vim-asterisk'
# Keep the cursor on `*` or `#`, even on visual mode.
# Note: autload-function always fails on vertical x/s.
on_map = {nx = '<Plug>(asterisk-'}
on_func = ['asterisk#do', 'asterisk#gn#']
hook_add = 'runtime add/asterisk.vim'
hook_source = 'runtime source/asterisk.vim'
#[[plugins]]
#repo = 'haya14busa/vim-metarepeat'
#on_map = {nx = '<Plug>(metarepeat'}
#hook_add = 'runtime add/metarepeat.vim'
#[[plugins]]
#repo = 'thinca/vim-visualstar'
#on_map = '<Plug>(visualstar-'
#hook_add = 'runtime add/visualstar.vim'

#[ Multiple Area ]
#[[plugins]]
#repo = 'mg979/vim-visual-multi'
#on_map = {nx = '<Plug>(VM-Find-'}
#hook_add = 'runtime add/visual-multi.vim'
#[[plugins]]
#repo = 'terryma/vim-multiple-cursors'
## if no mappings on add/, should use on_event.
#on_event = 'BufWinEnter'
##on_cmd = 'MultipleCursors'
##on_cmd = 'multiple_cursors#'
##on_map = {nx = '<Plug>(multiple-cursors'}
#hook_add = 'runtime add/multiple-cursors.vim'
#[[plugins]]
#repo = 'matze/vim-move'
## xmap's block-wise isn't work well.
#on_map = {nx = '<Plug>Move'}
#hook_add = 'runtime add/move.vim'
#[[plugins]]
#repo = 't9md/vim-textmanip'
## use vim-exchange instead
## Note: best move area plugin
#on_map = {x = '<Plug>(textmanip-'}
#hook_add = 'runtime add/textmanip.vim'
#[ Easy Motion ]
[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = {nox = '<Plug>(easymotion-'}
on_func = ['EasyMotion#S', 'EasyMotion#T']
hook_add = 'runtime add/easymotion.vim'
hook_source = 'runtime source/easymotion.vim'
hook_post_source = 'runtime post/easymotion.vim'

#[[plugins]]
#repo = 'haya14busa/vim-easyoperator-phrase'
#on_map = '<plug>(easyoperator-'
#hook_add = 'runtime add/easyoperator.vim'
#[[plugins]]
#repo = 'haya14busa/incsearch.vim'
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch.vim'
#[[plugins]]
#repo = 'haya14busa/incsearch-easymotion.vim'
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch-easymotion.vim'
#[[plugins]]
#repo = 'haya14busa/incsearch-fuzzy.vim'
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch-fuzzy.vim'

#[ Sort of EasyMotion ]
[[plugins]]
repo = 'deris/vim-shot-f'
# Highlight chars which you get directly.
on_map = {nox = ['<Plug>(shot-f-']}
hook_add = 'runtime add/shot-f.vim'
hook_source = 'runtime source/shot-f.vim'
# [[plugins]]
# repo = 'justinmk/vim-sneak'
# # repo = 'kaile256/vim-sneak'
# # Open PR: justinmk/vim-sneak/pull/248
# on_map = {nox = '<Plug>Sneak_'}
# on_func = 'sneak#'
# hook_add = 'runtime add/sneak.vim'
# hook_source = 'runtime source/sneak.vim'
# hook_post_source = 'runtime post/sneak.vim'
# #hook_done_update = '''
# e $DEIN_GITHUB_DIR/justinmk/vim-sneak/plugin/sneak.vim
# #g/g:sneak#opt.prompt/d_
# #g/<Plug>Sneak_s/norm! "_dap
# #g/<Plug>Sneak_S/norm! "_dap
# #write
# #'''
#[[plugins]]
#repo = 'unblevable/quick-scope'
## show a spot light on less frequently used characters.
#on_event = ['Syntax']
#hook_source = 'runtime source/quick-scope.vim'
#hook_post_source = 'runtime post/quick-scope.vim'
# [[plugins]]
# repo = 'dahu/vim-fanfingtastic'
# on_map = {nox = ['<Plug>(fanfingtastic_']}
# [[plugins]]
# repo = 'svermeulen/vim-extended-ft'
# # Note: highlight only characters in current line
# on_map = '<Plug>ExtendedFt'
# hook_add = 'runtime add/extended-ft.vim'
#[[plugins]]
#repo = 'tbo/notion'
## Note: written in typescript & javascript
## no highlight, so confising.
#on_cmd = 'NotionJump'
#hook_add = 'runtime add/notion.vim'

#[[plugins]]
#repo = 'ripxorip/aerojump.nvim'
## seems buggy.
#on_map = {nox = '<Plug>(Aerojump'}
#hook_add = 'runtime add/aerojump.vim'
[[plugins]]
repo = 'tyru/columnskip.vim'
on_map = {nox = ['<Plug>(columnskip:']}
hook_add = 'runtime add/columnskip.vim'

#[ Mouse ]
#[[plugins]]
#repo = 'notomo/gesture.nvim'
#if = 'executable("xinput")'
#build = 'npm run setup'
#on_cmd = ['GestureDraw']
#hook_add = 'runtime add/gesture.vim'
#hook_post_source = 'runtime post/gesture.vim'

#[ Command Line ]
# [[plugins]]
# repo = 'ryvnf/readline.vim'
# # UNIX traditional navigation in commandline.
# # <C-w> rubouts entire path.
# on_cmd = 'CmdlineEnter'

# #[ Misc ]
# [[plugins]]
# repo = 'tpope/vim-unimpaired'
# on_map = {nox = '<Plug>unimpaired'}
# hook_add = 'runtime add/unimpaired.vim'

#[ Scroll ]
[[plugins]]
repo = 'yuttie/comfortable-motion.vim'
# cause error on opening a terminal while the internal timer is ticking.
on_func = 'comfortable_motion#flick'
hook_add = 'runtime add/comfortable-motion.vim'
hook_source = 'runtime source/comfortable-motion.vim'
[[plugins]]
repo = 'psliwka/vim-smoothie'
on_map = {n = '<Plug>(Smoothie'}
hook_add = 'runtime add/smoothie.vim'
[[plugins]]
repo = 'joeytwiddle/sexy_scroller.vim'
# Using autocmd-CursorMoved etc., sexy_scroll works even with n/N.
# Neither mappings nor functions are public.
on_event = 'BufRead'
hook_source = 'runtime source/sexy_scroller.vim'
