# From: dein/dein.vim

#[ Browser ]
[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = {nx = '<Plug>(openbrowser-'}
on_cmd = 'OpenBrowser'
on_func = 'openbrowser#'
hook_add = 'runtime add/open-browser.vim'
hook_source = 'runtime source/open-browser.vim'

[[plugins]]
repo = 'tyru/open-browser-github.vim'
depends = 'open-browser.vim'
on_cmd = [
  'OpenGithubFile',
  'OpenGithubIssue',
  'OpenGithubPullReq',
  'OpenGithubProject',
  'OpenGithubCommit',
]

[[plugins]]
repo = 'aiya000/vim-webpage'
on_cmd =  ['WebpageShow']
on_func =  ['webpage#']
hook_add = 'runtime add/webpage.vim'
hook_source = 'runtime source/webpage.vim'
#[[plugins]]
#repo = 'notomo/ctrlb.nvim'
## let Vim control a browser in remote.
## Note: only supports firefox?
#build = 'npm run setup'
#on_cmd = ['Ctrlb']

#[ On Browser ]
[[plugins]]
repo = 'glacambre/firenvim'
on_func = 'firenvim#'
build = '''
npm install
npm run build
npm run install_manifests # do firenvim#install(0) inside.
'''
hook_source = 'runtime source/firenvim.vim'

#[[plugins]]
#repo = 'raghur/vim-ghost'
## depends on chrome's extention or firefox's addon.
#hook_done_update = 'GhostInstall'
#on_cmd = 'Ghost'
#
[[plugins]]
repo = 'mattn/qiita-vim'
on_cmd = ['Qiita']

#[[plugins]]
#repo = 'aiya000/vim-webpage'
#on_cmd =  ['WebpageShow']

#[ APIs ]
[[plugins]]
repo = 'wakatime/vim-wakatime'
# tracking service for coding activity.
# Note: visit https://wakatime.com/settings/api-key before using this plugin.
#on_cmd = 'WakaTime' # has to start in background
on_event = ['VimEnter']

#[ Google ]
[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = 'Calendar'
hook_source = 'runtime source/calendar.vim'
# Note: hook_add fails on VimEnter, BufEnter and so on.
hook_source = 'runtime add/wakatime.vim'
# [[plugins]]
# repo = 'mattn/googletasks-vim'
# # Only interactive at once in echo style.
# on_cmd = 'GoogleTasks'
[[plugins]]
repo = 'mbsperry/done.vim'
# Interact with GoogleTasks asynchronously.
on_cmd = ['Tasks', 'AddTask']

#[ Collaborative Editing ]
[[plugins]]
repo = 'Floobits/floobits-neovim'
on_cmd = ['FlooShareDirPublic', 'FlooShareDirPrivate', 'FlooJoinWorkspace']
#[[plugins]]
#repo = 'basyura/twibill.vim'
#on_cmd = 'TweetVim'

#[ WebAPI ]
[[plugins]]
repo = 'mattn/webapi-vim'
# an interface
lazy = 0
[[plugins]]
repo = 'soramugi/pocket.vim'
on_cmd = ['PocketList', 'PocketArchive', 'PocketFavorite']
hook_add = 'runtime add/pocket.vim'

# API; Twitter
#[[plugins]]
#repo = 'basyura/TweetVim'
#depends = 'twibill.vim'
#on_cmd = 'TweetVim'
#hook_post_source = 'runtime add/tweet.vim'

#[[plugins]]
#repo = 'ankokumoyashi/weblio_vim'
## TODO: make it work
#script_type = 'plugin'
#on_cmd = ['Weblio']
#hook_add = 'runtime add/weblio.vim'

#[ Slack ]
#[[plugins]]
#repo = 'higashi000/sarahck.vim'
## nvim is partially unsupported
#on_cmd = [
#  'SarahckChannelList',
#  'SarahckCreateChannel',
#  'SarahckDM',
#  'SarahckDispChannel',
#  'SarahckJoinChannel',
#  'SarahckLeaveChannel',
#  'SarahckPostMessage',
#]
#hook_source = 'runtime source/sarahck.vim'
#
[[plugins]]
repo = 'yaasita/edit-slack.vim'
# get the binary in yaasita/edit-slack
on_path = 'slack:\/\/'
on_func = [
  'edit_slack#open#buffer',
  'edit_slack#open#sidebar',
]
hook_add = 'runtime add/edit-slack.vim'
hook_source = 'runtime source/edit-slack.vim'
[[plugins]]
repo = 'yaasita/edit-slack'
build = '''
go build
mv edit-slack ../edit-slack.vim/edit-slack
'''

#[ Gist ]
[[plugins]]
repo = 'mattn/gist-vim'
on_cmd = 'Gist'
hook_source = 'runtime source/gist.vim'

#[ AtCoder ]
[[plugins]]
repo = 'ka-tsu-mo/at-vim-coder'
on_cmd = 'AtVimCoder'
hook_source = 'runtime source/at-vim-coder.vim'
[[plugins]]
repo = 'cannot-fly-pig/vim-atcoder'
if = '!has("nvim")'
on_cmd = 'Atcoder'
