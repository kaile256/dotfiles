snippet func
alias f fu fn fun
	func ${1:main}(${2:len int}) (${3:nums []int}) {
		${0:TARGET}
		return
	}

snippet Println
alias fmt fm Pr P Pri Pl
	fmt.Println(${1:res})

snippet {}
alias {
	{
		${0:TARGET}
	}

snippet } else {
alias el els
	`` else${1: if }${2:#:cond } {
	${0:TARGET}

snippet scan
abbr var N int; fmt.Scan(&N)
alias in
options head word indent
	var ${1:N} ${2:int}
	fmt.Scan(&$1)

snippet slice
abbr func scanNums(len int) (nums []int)
options head word indent
	func scanNums(len int) (${1:nums} []${2:int}) {
		var ${3:num} int
		for i := 0; i < len; i++ {
		fmt.Scan(&$3)
		fmt.Scanf("%s", &$3)
		$1 = append($1, $3)
		}
		return
	}

snippet pow
abbr pow() for int
options head word indent
	func pow(p, q int) int {
		return int(math.Pow(float64(p), float64(q)))
	}

snippet abs
abbr abs() for int
options head word indent
	func abs(a int) int {
		return int(math.Abs(float64(a)))
	}

snippet match
abbr Does 'a' contains 'b'?
options head word indent
	match(a []string, b string) bool {
		for i := 0; i < len(a); i++ {
			if a[i] == b {
				return true
			}
		}
		return false
	}

# vim:noet:ts=4:sw=4
