# From: rc/dein.vim

[[plugins]]
repo = 'bkad/CamelCaseMotion' #{{{
on_map = {nox = '<Plug>CamelCaseMotion_'}
#on_event = 'BufRead'
hook_add = 'runtime add/CamelCaseMotion.vim'
#}}}

# Search
[[plugins]]
repo = 'haya14busa/vim-asterisk' #{{{
# Keep the cursor on `*` or `#`, even on visual mode.
# Note: autload-function always fails on vertical x/s.
on_map = {xn = '<Plug>(asterisk-'}
hook_add = 'runtime add/asterisk.vim'
#}}}
#[[plugins]]
#repo = 'haya14busa/vim-metarepeat' #{{{
#on_map = {nx = '<Plug>(metarepeat'}
#hook_add = 'runtime add/metarepeat.vim'
##}}}
#[[plugins]]
#repo = 'thinca/vim-visualstar' #{{{
#on_map = '<Plug>(visualstar-'
#hook_add = 'runtime add/visualstar.vim'
##}}}

# Jump to Target
#[[plugins]]
#repo = 'justinmk/vim-sneak' #{{{
## Note: just for comparison to easymotion
##on_map = {nox = '<Plug>Sneak_'}
##hook_add = 'runtime add/sneak.vim'
##hook_done_update = '''
##exe 'e'. g:dein_cache_dir .'/repos/github.com/justinmk/vim-sneak/plugin/sneak.vim'
##g/<Plug>Sneak_s/d
##g/<Plug>Sneak_S/d
##write
##'''
###}}}
# Jump; Easy Motion
[[plugins]] # has extentions
repo = 'kaile256/vim-easymotion' #{{{
# TODO: get the target w/o keys.
#repo = 'easymotion/vim-easymotion' #{{{0
on_map = {nox = '<Plug>(easymotion-'}
hook_add = 'runtime add/easymotion.vim'
hook_post_source = 'runtime post/easymotion.vim'
hook_done_update = '''
exe 'e' g:dein_cache_dir .'/repos/github.com/easymotion/vim-easymotion/autoload/EasyMotion.vim
g/\Vlen(group_values) == 1/norm! A || (g:EasyMotion_always_jump_first == 1)
write
'''
#[[plugins]]
#repo = 'haya14busa/vim-easyoperator-phrase' #{{{
#on_map = '<plug>(easyoperator-'
#hook_add = 'runtime add/easyoperator.vim'
##}}}
#[[plugins]]
#repo = 'haya14busa/incsearch.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch.vim'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-easymotion.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch-easymotion.vim'
#}}}
#[[plugins]]
#repo = 'haya14busa/incsearch-fuzzy.vim' #{{{
#on_event = 'ColorScheme'
#hook_post_source = 'runtime add/incsearch-fuzzy.vim'
#}}}
#}}}
#[[plugins]]
#repo = 'tbo/notion' #{{{
## Note: written in typescript & javascript
## no highlight, so confising.
#on_cmd = 'NotionJump'
#hook_add = 'runtime add/notion.vim'
##}}}
#[[plugins]]
#repo = 'ripxorip/aerojump.nvim' #{{{
## seems buggy.
#on_map = {nox = '<Plug>(Aerojump'}
#hook_add = 'runtime add/aerojump.vim'
##}}}

# Operater; Comment out
#[[plugins]]
#repo = 'tomtom/tcomment_vim' #{{{
## Memo: complex named <Plug>-mappings
#on_map = '<Plug>TComment'
#on_cmd = ':TComment'
#hook_add = 'runtime add/tcomment.vim'
##}}}
[[plugins]]
repo = 'tyru/caw.vim' #{{{
# operater to comment out
on_map = '<Plug>(caw:'
hook_add = 'runtime add/caw.vim'
#}}}
#[[plugins]]
#repo = 'scrooloose/nerdcommenter' #{{{
## Reason: has no operater
#on_map = '<Plug>NERDCommenter'
#hook_add = 'runtime add/nerdcommenter.vim'
##}}}
#[[plugins]]
#repo = 'tpope/vim-commentary' #{{{
## Simplest
#on_map = '<Cmd>Commentary'
#hook_add = 'runtime add/plugin.vim'
##}}}

# Operater; Arrangement
[[plugins]]
repo = 'machakann/vim-swap'
on_map = '<Plug>(swap-'
hook_add = 'runtime add/swap.vim'
[[plugins]]
repo = 'junegunn/vim-easy-align' #{{{
on_map = ['<Plug>(EasyAlign)', '<Plug>(LiveEasyAlign)']
#on_cmd = 'EasyAlign'
hook_add = 'runtime add/easy-align.vim'
#}}}
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim' #{{{
on_cmd = 'BufRead'
hook_add = 'runtime add/splitjoin.vim'
#}}}

# Operater; Simultaneous
[[plugins]]
repo = 'andymass/vim-matchup' #{{{
# Better `%`
# Note: should be source post/ after :colo from other plugin,
# which :colo after event-ColorScheme.
on_event = ['BufNewFile', 'BufRead']
hook_add = 'runtime add/matchup.vim'
hook_post_source = 'runtime post/matchup.vim'
#}}}
[[plugins]]
repo = 'machakann/vim-sandwich' #{{{
on_map = {ni = '<Plug>(operator-sandwich-'} # too late via <c-o>
hook_add = 'runtime add/sandwich.vim'
#}}}
#[[plugins]]
#repo = 'tpope/vim-surround' #{{{
#on_event = 'BufRead'
#hook_post_source = 'runtime add/surround.vim'
#}}}
[[plugins]]
repo = 'mg979/vim-visual-multi'
on_map = {x = '<Plug>(VM-Find-'}
hook_add = 'runtime add/visual-multi.vim'
#[[plugins]]
#repo = 'terryma/vim-multiple-cursors' #{{{
## if no mappings on add/, should use on_event.
#on_event = 'BufWinEnter'
##on_cmd = 'MultipleCursors'
##on_cmd = 'multiple_cursors#'
##on_map = {nx = '<Plug>(multiple-cursors'}
#hook_add = 'runtime add/multiple-cursors.vim'
##}}}
#[[plugins]]
#repo = 'matze/vim-move' #{{{
## xmap's block-wise isn't work well.
#on_map = {nx = '<Plug>Move'}
#hook_add = 'runtime add/move.vim'
##}}}
[[plugins]]
repo = 't9md/vim-textmanip' #{{{
# Note: has copy feature
on_map = {x = '<Plug>(textmanip-'}
hook_add = 'runtime add/textmanip.vim'
#}}}

#[[plugins]]
#repo = 'tommcdo/vim-express' #{{{
#on_event = 'VimEnter'
#hook_post_source = 'runtime add/express.vim'
##}}}
