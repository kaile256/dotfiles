# From: rc/dein.vim

# Multiple FileType;
[[plugins]]
repo = 'editorconfig/editorconfig-vim' #{{{
# Note: coc-prettier doesn't use editorconfig if prettier is either unavailable.
# Note: vim-prettier is unnecessary, though it also covers editorconfig.
on_event = 'BufWinEnter'
hook_source = 'runtime source/editorconfig.vim'
#}}}
#[[plugins]]
#repo = 'prettier/vim-prettier' #{{{
## Note: also read .editorconfig
#on_event = 'BufWinEnter'
#hook_add = 'runtime add/prettier.vim'
##}}}
#[[plugins]]
#repo = 'tpope/vim-sleuth' #{{{
## Note: Sleuth means a detective.
## Enough with coc-prettier?
## Automatically adjusts 'shiftwidth' and 'expandtab'
#on_event = ['BufNewFile','BufRead']
#hook_add = 'runtime add/sleuth.vim'
##}}}
#[[plugins]]
#repo = 'Shougo/context_filetype.vim' #{{{
#on_ft = ['vimwiki','markdown','html','php','neosnippet','snippets']
##}}}
#[[plugins]]
#repo = 'vim-syntastic/syntastic' #{{{
#on_ft = ['toml']
#hook_post_source = 'runtime add/syntastic.vim'
##}}}

# Vim
[[plugins]]
repo = 'mhinz/vim-lookup' #{{{
# Enable to jump to definition as &runtimepath.
#on_ft = 'vim'
on_map = '<Cmd>lookup#'
hook_add = 'runtime add/lookup.vim'
#}}}

# Rust
#[[plugins]]
#repo = 'rhysd/rust-doc.vim' #{{{
#on_cmd = 'RustDoc'
#hook_source = 'runtime add/rust-doc.vim'
##}}}

# Python
[[plugins]]
repo = 'plytophogy/vim-virtualenv' #{{{
# supports pip-packages, independently installed in shell, to work on vim
on_ft = 'python'
#}}}
#[[plugins]]
#repo = 'python-mode/python-mode' #{{{
#on_ft = 'python'
#hook_post_update = '!git submodule update --init --recursive'
#hook_source = 'runtime source/python-mode.vim'
##}}}
[[plugins]]
repo = 'tweekmonster/braceless.vim'
# fold up to syntax of python.
on_ft = 'python'
hook_source = 'runtime add/braceless.vim'

# Markdown
[[plugins]]
repo = 'iamcco/markdown-preview.nvim' #{{{
on_ft = 'markdown'
build = 'cd app & yarn install'
hook_source = 'runtime add/markdown-preview.vim'
#}}}
#[[plugins]]
#repo = 'suan/vim-instant-markdown' #{{{
#on_ft = 'markdown'
#hook_source = 'runtime add/instant-markdown.vim'
##}}}

# for Document;
[[plugins]]
repo = 'thinca/vim-ft-help_fold' #{{{
# Note: conflicted with `set modeline`
on_ft = 'help'
hook_source = 'runtime source/ft-help_fold.vim'
#}}}
[[plugins]]
repo = 'Konfekt/vim-office' #{{{
# no need any config.
on_ft = ['pdf', 'doc', 'docx', 'els', 'xlsx', 'ppt', 'pptx', 'odt', 'epub']
#}}}
[[plugins]]
repo = 'itchyny/vim-pdf' #{{{
on_ft = ['pdf']
#}}}

