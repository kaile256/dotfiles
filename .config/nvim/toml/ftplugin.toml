# From: rc/dein.vim
# Ref: syntax.toml

#[ Multiple FileType ]
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
# Note: coc-prettier doesn't use editorconfig if prettier is either unavailable.
# Note: vim-prettier is unnecessary, though it also covers editorconfig.
on_event = 'BufWinEnter'
hook_source = 'runtime source/editorconfig.vim'

#[[plugins]]
#repo = 'prettier/vim-prettier'
## Note: also read .editorconfig
#on_event = 'BufWinEnter'
#hook_add = 'runtime add/prettier.vim'

#[[plugins]]
#repo = 'tpope/vim-sleuth'
## Note: Sleuth means a detective.
## Enough with coc-prettier?
## Automatically adjusts 'shiftwidth' and 'expandtab'
#on_event = ['BufNewFile','BufRead']
#hook_add = 'runtime add/sleuth.vim'

#[[plugins]]
#repo = 'vim-syntastic/syntastic'
#on_ft = ['toml']
#hook_post_source = 'runtime add/syntastic.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
# tell Vim it is another filetype other than &ft on the context
on_source = ['ultisnips', 'neosnippet.vim']
on_ft = [
  'html',
  'javascript',
  'markdown',
  'neosnippet',
  'php',
  'snippets',
  'vimwiki',
]

#[ Rust ]
[[plugins]]
repo = 'martskins/vim-cargo-search'
if = '&ft ==# "rust"'
on_cmd =  ['CargoSearch']

#[[plugins]]
#repo = 'rust-lang/rust.vim'
#on_ft = 'rust'

#[[plugins]]
#repo = 'rhysd/rust-doc.vim'
#on_cmd = 'RustDoc'
#hook_source = 'runtime add/rust-doc.vim'

#[ Python ]
[[plugins]]
repo = 'plytophogy/vim-virtualenv'
# supports pip-packages, independently installed in shell, to work on vim
on_ft = 'python'
#[[plugins]]
#repo = 'python-rope/ropevim'
#on_ft = ['python']
#
#[[plugins]]
#repo = 'python-mode/python-mode'
#on_ft = 'python'
#hook_post_update = '!git submodule update --init --recursive'
#hook_source = 'runtime source/python-mode.vim'
#
#[[plugins]]
#repo = 'tweekmonster/braceless.vim'
## To: fold up to syntax of python.
## not work so good
#on_ft = ['python']
#on_cmd =  ['BracelessEnable']
#hook_add = 'runtime add/braceless.vim'
#
#[[plugins]]
#repo = 'heavenshell/vim-pydocstring'
#on_ft = ['python']
#[ Python.Jupyter ]
[[plugins]]
repo = 'goerz/jupytext.vim'
on_ft = ['ipynb']
hook_source = 'runtime source/jupytext.vim'

[[plugins]]
repo = 'szymonmaszke/vimpyter'
on_ft = ['ipynb']
hook_source = 'runtime source/vimpyter.vim'
[[plugins]]
repo = 'williamjameshandley/vimteractive'
on_ft = [
  'ipython',
  'julia',
  'maple',
  'bash',
  'zsh',
  'python',
  'clojure',
  'apl',
]
hook_source = 'runtime source/vimteractive.vim'

#[ Ryby ]
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = [
  #'javascript',
  'coffee',
  'css',
  'eruby',
  'haml',
  'less',
  'railslog'
  'ruby',
  'sass',
  'scss',
]
#[ Java ]
#[[plugins]]
#repo = 'dansomething/vim-eclim'
#on_ft = ['java']

#[ Clojure ]
[[plugins]]
repo = 'clojure-vim/async-clj-omni'
on_ft = ['clojure']
#[ Html ]
[[plugins]]
repo = 'mattn/emmet-vim'
on_cmd = ['Emmet', 'EmmetIntall']
on_ft = ['html', 'xml', 'xsl']
[[plugins]]
repo = 'alvan/vim-closetag'
# Html; Auto Close for html-tags
on_ft = ['html']
hook_add = 'runtime! add/closetag.vim'
on_ft = ['html', 'javascript']
hook_add = '''
let g:cloesetag_filenames = '*.html,*.vue'
'''
[[plugins]]
repo = 'lyokha/vim-publish-helper'
on_ft = 'pandoc'
#[[plugins]]
#repo = 'lervag/vimtex'
#on_ft = 'tex'
#hook_post_source = 'runtime add/vimtex.vim'

#[ Document ]
[[plugins]]
repo = 'rafaqz/citation.vim'
on_ft = ['zotero', 'pybtex']
hook_source = 'runtime source/citation.vim'

[[plugins]]
repo = 'Konfekt/vim-office'
# no need any config.
on_ft = ['pdf', 'doc', 'docx', 'els', 'xlsx', 'ppt', 'pptx', 'odt', 'epub']

[[plugins]]
repo = 'itchyny/vim-pdf'
on_ft = ['pdf']

#[ Config ]
[[plugins]]
repo = 'tpope/vim-jdaddy'
# provides omap/xmap for json and gq/gw, which formats lines
on_ft = 'json'

[[plugins]]
repo = 'danishprakash/vim-docker'
on_cmd =  ['DockerDocBrowser', 'DockerHubBrowser',]

#[ CSV ]
[[plugins]]
repo = 'mechatroner/rainbow_csv'
on_ft = ['csv', 'sql']
[[plugins]]
repo = 'chrisbra/csv.vim'
on_ft = ['vsv']
#[ DB ]
[[plugins]]
repo = 'alcesleo/vim-uppercase-sql'
on_ft = ['sql']
[[plugins]]
repo = 'mattn/vim-sqlfmt'
build = 'pip3 install --upgrade sqlparse'
on_ft = ['sql']
[[plugins]]
repo = 'cosminadrianpopescu/vim-sql-workbench'
on_ft = ['sql']
#[ Quickfix ]
#[[plugins]]
#repo = 'lambdalisue/qfloc.vim'
## provies some local keymaps
#on_ft = ['qf', 'loc']
#hook_source = 'runtime source/qfloc.vim'
#
#[[plugins]]
#repo = 'infokiller/vim-errorlist'
#on_cmd = ['errorlist#Navigate']
#on_event = ['BufRead']
#hook_source = 'runtime source/errorlist.vim'
#
#[ Android ]
[[plugins]]
repo = 'hsanson/vim-android'
# especially for gradle
on_ft = [
  'groovy',
  'java',
  'kotlin',
  'xml'
]

#[[plugins]]
#repo = 'AndroidMarv/android-dev.vim'
## unimplemented yet and the development stopped
#on_ft = ['java', 'kotlin', 'xml']

#[ iOS ]
#[[plugins]]
#repo = 'keith/swift.vim'
## vim-polyglot has also a syntax for swift
#on_ft = ['swift']

