# Sample: /home/kaile256/.cache/dein/repos/github.com/honza/vim-snippets/snippets/vim.snippets

snippet scriptencoding utf-8
alias sc ut s u scr script
options head
  scriptencoding utf-8

# Begining of Plugin
snippet mit
options head
  " License: MIT license {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}

snippet init
alias ini
options head
  " ============================================================================
  " File: `expand('%:p:.')`
  " Author: kaile256
  " License: MIT license  {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}
  " ============================================================================

  if exists('g:loaded_${1:`substitute(matchstr(expand('%:p'), 'github.com/.*/\zs.*\ze/.*/'), 'vim-', '', '')`}')  | finish | endif
  let g:loaded_$1 = 1

  " save 'cpoptions' {{{
  let s:save_cpo = &cpo
  set cpo&vim
  "}}}

  ${0:#:plugin's contents}

  " restore 'cpoptions' {{{
  let &cpo = s:save_cpo
  unlet s:save_cpo
  "}}}

snippet header
alias head hea
options head
  " ============================================================================
  " File: `expand('%:p:.')`
  " Author: kaile256
  " License: MIT license {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}
  " ============================================================================

snippet loaded
alias load loa
    if exists('g:loaded_${1:`substitute(matchstr(expand('%:p'), 'github.com/.*/\zs.*\ze/.*/'), 'vim-', '', '')`}') | finish | endif
      let g:loaded_$1 = 1

snippet cpoptions
alias cpo
options head
  " save 'cpoptions' {{{
  let s:save_cpo = &cpo
  set cpo&vim
  "}}}

  ${0:#:plugin's contents}

  " restore 'cpoptions' {{{
  let &cpo = s:save_cpo
  "}}}

snippet mode
alias mod
  " vim: ts=2 sts=2 sw=2 et fdm=marker

# End of Plugin's

# Declare {{{
delete au augroup ... autocmd block
snippet augroup
abbr au aug augr
  augroup ${1:#:Augroup}
  au!
  au ${3:BufNewFile,BufRead} ${4:*} ${5:#:command}
  augroup END
delete f function
snippet function
alias f fu fun func function
  function! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\zs.*\ze.vim'),'[/\\]','#','g').'#' : ''`}${2:#:do}(${3:#:{{name\}[, {arglist\}] [, {dict\}]}) abort ${4:#:range}
    ${0:#:Ex-commands}
  endfunction
snippet redir
alias r re red
options head
  redir ${1:=>} ${2:#: =>: var | >: file | @a: register a}
  ${4:#:commands}
  redir END
#}}}

# Abbr {{{
snippet abbriviation
alias ab abb abr abbr
  ${3:c}noreabbr <expr> '${1:#:key}' (getcmdtype() == ':' && getcmdline() =~ '^$1$')? '${2:#:expand}' : '$1'
snippet abbr for cmdline
alias cn cno cna cnore cnoreab cnoreabbr
  cnoreabbr <expr> ${1:#:key} (getcmdtype() == ':' && getcmdline() =~ '^$1$')? '${2:#:expand}' : '$1'
#}}}

snippet noremap
alias no
  ${0:n}noremap ${1:<silent>} ${2:#:key} ${4::<c-u>}${3:#:mapping}${4:<cr>}

# Fold {{{
snippet {{{ beginning of fold
alias  { pp {{ {{{ {} {{}} {{{}}}
  {{{
snippet "{{{ beginning of fold
alias  "{ "pp "{{ "{{{ "{}" "{{}}" "{{{}}}" "|
  "{{{
snippet "}}} end of fold
alias " "}} "} } }} "}" "}}" "}}}"
  "}}}
snippet ""}}} end of fold
alias "" ""}} ""
  ""}}}
#}}}

snippet <c-\><c-n> into Normal Mode
alias < <c <c- <c-\ <c-\>
  <c-\><c-n>
snippet tnoremap prewritten '<c-\><c-n>'
alias tn tno tnor tnore tnorem tnorema tnoremap
  tnoremap ${1:<silent>} ${2:#:key} <c-\><c-n>:${0:#:command} <cr>

#snippet if
#alias i
#  if ${1:exists('}${2:g:loaded_~~_plugin')}
#    ${0:#:Ex-commands}
#  endif
