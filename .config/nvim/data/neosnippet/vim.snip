# Sample: /home/kaile256/.cache/dein/repos/github.com/honza/vim-snippets/snippets/vim.snippets

snippet guifg
alias fg gui
  guifg=#000000
snippet guibg
alias bg
  guibg=#000000

snippet scriptencoding utf-8
alias sc ut s u scr script utf 8
options head
  scriptencoding utf-8

# for Vimrc {{{1
snippet Address
alias From Fr Fro fr fro from
  " From: ${1:toml}
  " ${2:Repo:} ${3:`expand($USER)`/}${4:repo}.vim

  ${0:#:start}

# for Plugin {{{1
snippet patch for func-abort
alias abo abor abort
  if !has('patch-7.4.156') | finish | endif
  " v:7.4.156: for func-abort

snippet mit
options head
  " License: MIT license {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}

snippet header
alias head hea
options head
  " ============================================================================
  " Repo: kaile256/`matchstr(expand('%:p'), '[^/]\+\ze/\(autoload\|plugin\)/')`
  " File: `matchstr(expand('%:p:.'), '\(autoload\|plugin\)/.*')`
  " Author: kaile256
  " License: MIT license {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}
  " ============================================================================

  ${0:TARGET}

snippet loaded
alias load loa
  if exists('g:loaded_${1:`substitute(substitute(matchstr(expand('%:p'), 'autoload/\|plugin\/*\.vim'), 'autoload\|plugin/\(.*\).vim', '\1', ''), '/', '_', 'g')`}') | finish | endif "{{{1
  let g:loaded_$1 = 1

  " save 'cpoptions'
  let s:save_cpo = &cpo
  set cpo&vim
  "}}}1

snippet cpoptions
alias cpo pop save
options head
  " save 'cpoptions' {{{
  let s:save_cpo = &cpo
  set cpo&vim
  "}}}1
  ${0}

snippet end of plugin
alias restore res end tail tai ta
  " restore 'cpoptions' {{{1
  let &cpo = s:save_cpo
  unlet s:save_cpo

  " modeline {{{1
  " vim: et ts=2 sts=2 sw=2 fdm=marker tw=79

snippet mode
alias mod vim
  " modeline {{{1
  " vim: et ts=2 sts=2 sw=2 fdm=marker tw=79

snippet mode with hardtab
alias tab noet noe
  " modeline {{{1
  " vim: noet ts=2 sts=2 sw=2 fdm=marker tw=79

snippet init
alias ini
  " ============================================================================
  " Repo: kaile256/`matchstr(expand('%:p'), '[^/]\+\ze/\(autoload\|plugin\)/')`
  " File: `matchstr(expand('%:p:.'), '\(autoload\|plugin\)/.*')`
  " Author: kaile256
  " License: MIT license {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}
  " ============================================================================

  if exists('g:loaded_${1:`substitute(substitute(expand('%:p'), '.*/autoload/\|plugin\/\(*\)\.vim', '\1', ''), '/', '_', 'g')`}') | finish | endif
  let g:loaded_$1 = 1

  " save 'cpoptions' {{{
  let s:save_cpo = &cpo
  set cpo&vim
  "}}}

  ${0}

  " restore 'cpoptions' {{{1
  let &cpo = s:save_cpo
  unlet s:save_cpo

  " modeline {{{1
  " vim: expandtab tabstop=2 softtabstop=2 shiftwidth=2
  " vim: foldmethod=marker textwidth=79

snippet autoload
alias aut auto al aul aulo
  `substitute(substitute(expand('%:p'), '.*/autoload/\(.*\).vim', '\1', ''), '/', '#', 'g') .'#'`

#}}}

# Excmds {{{1
snippet command
alias com cmd comm co
  command! -bar ${1:-nargs=*} ${2:#:Command Name} :${3:#:Commands}

snippet augroup
abbr au aug augr
  augroup ${1}
  au!
  au ${3:BufNewFile,BufRead} ${4:*} ${5}
  augroup END

snippet function
alias f fu fun func function
  function! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\zs.*\ze.vim'),'[/\\]','#','g').'#' : ''`}${2:#:do}(${3:#:{{name\}[, {arglist\}] [, {dict\}]}) ${4:#:range }abort "{{{${0}
  endfunction

snippet redir
alias r re red
options head
  redir ${1:=>} ${2:#: =>: var | >: file | @a: register a}
  ${4}
  redir END

snippet noremap
alias no
  ${0:n}noremap ${1:<silent>} ${2} ${4::<c-u>}${3}${4:<cr>}

# Abbr {{{2
snippet abbriviation
alias ab abb abr abbr
  ${3:c}noreabbr <expr> '${1}' (getcmdtype() == ':' && getcmdline() =~# '^$1$')? '${2}' : '$1'
snippet abbr for cmdline
alias cn cno cna cnore cnoreab cnoreabbr
  cnoreabbr <expr> ${1} (getcmdtype() == ':' && getcmdline() =~# '^$1$')? '${2}' : '$1'

# Fold {{{2
snippet {{{ beginning of fold
alias  { pp {{ {{{ {} {{}} {{{}}}
  {{{
snippet "{{{ beginning of fold
alias  "{ "pp "{{ "{{{ "{}" "{{}}" "{{{}}}" "|
  "{{{
snippet "}}} end of fold
alias " "}} "} } }} "}" "}}" "}}}"
  "}}}
snippet ""}}} end of fold
alias "" ""}} ""
  ""}}}

# Terminal {{{2
snippet <c-\><c-n> from Terminal-Job mode
alias < <c <c- <c-\ <c-\>
  <c-\><c-n>
snippet tnoremap prewritten '<c-\><c-n>'
alias tn tno tnor tnore tnorem tnorema tnoremap
  tnoremap ${1:<silent>} ${2} <c-\><c-n>:${0} <cr>

# vim: fdm=marker
