snippet vim "for dein.toml" bA
[[plugins]]
repo = '`!v matchstr(@+, 'https://github.com/\zs[^/]\+/[^/]\+')`'
$0
endsnippet

snippet hook_add "hook_add = 'runtime add/foo.vim'" b
hook_add = 'runtime add/${1:`!v snip#vim#name_of_plugin()`}.vim'
endsnippet

snippet hook_source "hook_source = 'runtime source/foo.vim" b
hook_source = 'runtime source/${1:`!v snip#vim#name_of_plugin()`}.vim'
endsnippet

snippet hook_post_source "hook_post_source = 'runtime post/foo.vim'" b
hook_post_source = 'runtime post/${1:`!v snip#vim#name_of_plugin()`}.vim'
endsnippet

snippet hook_done_update "hook_done_update = 'UpdateRemotePlugins'" b
hook_done_update = '${1:call remote#host#UpdateRemotePlugins()}'
endsnippet

snippet on_event "on_event" b
on_event = '${1:BufRead}'
endsnippet

snippet on_ft "on_ft" b
on_ft = '${1:vim}'
endsnippet

snippet on_map "on_map" b
on_map = {${1:nox} = '<Plug>(${2:`!v snip#vim#name_of_plugin()`}'}
endsnippet

snippet on_func "on_func" b
on_func = '${1:`!v snip#vim#prefix_for_function()`}'
endsnippet

snippet on_cmd "on_cmd" b
on_cmd = '${1:`!v snip#vim#name_of_plugin()`}'
endsnippet

snippet on_path "on_path" b
on_path = '${0:#:\.ext (conpared in "=~#"}'
endsnippet

snippet on_source
on_source = '${1:vim-fugitive}'
endsnippet

snippet build
build = '${1:./install.sh}'
endsnippet

snippet type
alias ty typ
type = 'git${0}'
endsnippet

snippet depend "depend = 'other plugins'" bA
depend = '${1:vim-fugitive}'

endsnippet

snippet 'sudo|trusted' "trusted = 1 (load plugin as in 'sudo'" rb
trusted = 1
endsnippet

snippet timeout "timeout = (second)" bA
timeout = ${1:#:1(sec)}
endsnippet

snippet 's(cript_type)?p(lugin)?' "set the repo under plugin/" rb
script_type = 'plugin'
endsnippet

snippet 's(cript_type)?i(ndent)?' "set the repo under indent/" rb
script_type = 'indent'
endsnippet

snippet 's(cript_type)?ft(plugn)?' "set the repo under ftplugin/" rb
script_type = 'plugin'
endsnippet

snippet 's(cript_type)?c((o)?(l)?ors)?' "set the repo under colors/" rb
script_type = 'colors'
endsnippet

snippet 's(cript_type)?syn(tax)?' "set the repo under syntax/" rb
script_type = 'syntax'
endsnippet

