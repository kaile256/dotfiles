snippet %) "Regex: %($1) not to count it as a sub-expr" i
`# only expand '%($1)'; for '\%($1)', escaped one, insert a backslash at first.
`%(${1:${VISUAL}})
endsnippet

snippet '\%(\))?' "Regex: \%($1\) not to count it as a sub-expr" ir
`# only expand '%($1)'; for '\%($1)', escaped one, insert a backslash at first.
`\%(${1:${VISUAL}}\)
endsnippet

snippet undo_ftplugin "template for b:undo_ftplugin" b
if exists('b:undo_ftplugin')
  let b:undo_ftplugin .= ' | '
else
  let b:undo_ftplugin = ''
endif
let b:undo_ftplugin .= 'setl ${1:fdm< fde<}'
endsnippet

snippet '#(\d)' "fold up commands with foldmarkers" br
${VISUAL:/\n(.*)//} "{{{`!p snip.rv = match.group(1)`
${VISUAL:/(.+?)\n//m}
"}}}`!p snip.rv = match.group(1)`
endsnippet

