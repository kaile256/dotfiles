# Help: https://i3wm.org/docs/userguide.html
# Ref: .xinitrc

# Font {{{1
# Note: do NOT insert size before commas; the following fonts will be ignored
# Ref: https://wiki.archlinux.jp/index.php/I3
font pango:Icons 14
font pango:SF Mono, Hack Nerd Font, DejaVu Sans Mono 11

# Variables {{{1
# Var; Keyname {{{2
set $Super  Mod4
set $SuperS Mod4+Shift
set $SuperC Mod4+Control
set $SuperA Mod4+Mod1
set $Alt    Mod1
set $AltC   Mod1+Control
set $AltS   Mod1+Shift

# TODO: make middle click available to bind in i3wm
set $ClickLeft   button1
set $ClickMiddle button2
set $ClickRight  button3
set $ScrollUp    button4
set $ScrollDown  button5

# Var: Command {{{2
# `--no-startup-id` disables startup-notification;
# the notification brings cursor to the new window.
# Ref: [exec] in i3 User's Guide
set $noid   exec --no-startup-id
set $always exec_always --no-startup-id

set $locker ~/.config/i3/lock.sh
set $browser qutebrowser
set $chrome google-chrome-stable
set $menu alacritty --title fzf-menu --config-file $XDG_CONFIG_HOME/alacritty/dmenu.yml -e i3-dmenu-desktop --dmenu=fzf
for_window [title=fzf-menu] floating enable border normal
set $termporal alacritty --title termporal --config-file $XDG_CONFIG_HOME/alacritty/floating.yml -e fish
for_window [title=termporal] floating enable border hide_edge_borders vertical
#set $terminal urxvt

set $notify exec --no-startup-id notify-send --expire-time 1100
set $alert  exec --no-startup-id notify-send --expire-time 1100 --urgency critical

# Var; Workspace {{{2
workspace_layout tabbed

set $ws1 "1:vim"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0:main"

workspace 0 output eDP1
#workspace "0" output HDMI2

# Apps in Floating Window {{{1
# Note: must be in double-quotes, not in single

# If Urgent, switch to the workspace immediately.
# Note: (?i) means case-Insensitive
#for_window [urgent=latest] focus

for_window [title="^TMP"]  floating enable border normal
for_window [title="^Toggle"]  floating enable border normal
for_window [title="^Package"] floating enable border normal
#for_window [class="calamares"] floating enable border normal
#for_window [class="Clipgrab"] floating enable
#for_window [title="File Transfer*"] floating enable
#for_window [class="Galculator"] floating enable border pixel 1
#for_window [class="GParted"] floating enable border normal
#for_window [title="i3_help"] floating enable sticky enable border normal
#for_window [class="Lightdm-settings"] floating enable
#for_window [class="Lxappearance"] floating enable border normal
#for_window [class="Manjaro Settings Manager"] floating enable border normal
#for_window [title="MuseScore: Play Panel"] floating enable
#for_window [class="Nitrogen"] floating enable sticky enable border normal
#for_window [class="Oblogout"] fullscreen enable
#for_window [class="octopi"] floating enable
#for_window [title="About Pale Moon"] floating enable
#for_window [class="Pamac-manager"] floating enable
#for_window [class="Pamac-updater"] floating enable
#for_window [class="Pavucontrol"] floating enable
#for_window [class="Qtconfig-qt4"] floating enable border normal
#for_window [class="qt5ct"] floating enable sticky enable border normal
#for_window [title="sudo"] floating enable border normal
#for_window [class="Simple-scan"] floating enable border normal
#for_window [class="(?i)System-config-printer.py"] floating enable border normal
#for_window [class="Skype"] floating enable border normal
#for_window [class="Timeset-gui"] floating enable border normal
#for_window [class="(?i)virtualbox"] floating enable border normal
#for_window [class="Xfburn"] floating enable

# Border Style {{{1
## <normal|1pixel|pixel xx|none|pixel>
#default_border pixel 1
#default_floating_border normal
## Hide borders
#hide_edge_borders none

## Status Bar; use polybar instead {{{1
## Note: use polybar instead
## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
#bar {
## Use pyi3status instead (status_command python ~/.config/i3/i3status/config.py)
#i3bar_command ${XDG_CONFIG_HOME}/polybar/launch.sh
#status_command i3status
##status_command i3blocks -c ~/.config/i3/i3bar/i3blocks/config
#output            eDP1
#output            HDMI1
#output            HDMI2
#output            LVDS1
#position          bottom
#mode              dock
#workspace_buttons yes
#tray_output       both
#font pango:Icons, SF Mono 12
#colors {
#background #000000
#statusline #ffffff
#focused_workspace  #ffffff #285577
#active_workspace   #ffffff #333333
#inactive_workspace #888888 #222222
#urgent_workspace   #ffffff #900000
#}
#}

# Auto Start {{{1
# Note: exec_always to reload on a restart i3 itself
$always $MYSCRIPTS/polybar-launch.sh
#exec_always --no-startup-id xfce4-panel --disable-wm-check

# Wallpaper
# xrandr: control monitor
$always $MYSCRIPTS/monitor-try.sh
# xautolock: a timer to lock screen of PC
$noid xautolock -time 5 -locker $locker
# nitrogen: a wallpaper manager
$noid nitrogen --restore; sleep 1; compton -b
## TODO: i3-cheat sheet on desktop.
#$noid "feh --bg-scale $HOME/.config/i3/~~.jpg"

$noid sudo tlp start

$noid alsactl daemon
# pulseaudio: deamon to control via keyboard.
$noid pulseaudio --start
# pa-applet (pulseaudio):
#$noid pa-applet
#$noid volumeicon

# nm-applet: WiFi Network Manager; use nmcli instead
#$noid nm-applet

$noid fcitx
# dunst: Light Notification Daemon
#$noid dunst

# parcellite: Clipboard Manager
#$noid parcellite
$noid clipit

# Show the CP's status on the wallpaper.
#exec --no-startup-id start_conky_live_maia
#exec --no-startup-id blueman # use bluetoothctl
#exec --no-startup-id pamac-tray
#exec --no-startup-id desktop-items
#exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec_always --no-startup-id sbxkb
#exec --no-startup-id xfce4-power-manager
#exec_always --no-startup-id ff-theme-util
#exec_always --no-startup-id setcursor
#bindsym $mod+Ctrl+m exec pavucontrol

# urxvtd: Daemon of rxvt-unicode. Use urxvtc as a client.
#exec "urxvtd -o -f"

# Ref: specifiy workspace to start in
#    @ https://ayageman.blogspot.com/2017/02/t510-2.html
#exec --no-startup-id i3-msg 'workspace 1'; exec qutebrowser &
#exec --no-startup-id nvim-qt

# Keybind of i3 {{{1
# Note: check keyname, or keycode, by $ xmodmap -pke

# Keybind; i3's command {{{2
## Kill Focused Window
#bindsym $Super+z  kill
# reload the configuration file
bindsym $SuperS+space reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $Super+space  restart

# Keybind; Focus Window {{{2
bindsym $Super+h focus left
bindsym $Super+j focus down
bindsym $Super+k focus up
bindsym $Super+l focus right
### Focus; by Cursor Keys
#bindsym $Super+Left focus left
#bindsym $Super+Down focus down
#bindsym $Super+Up focus up
#bindsym $Super+Right focus right
### Focus; by Vim-Additional
#bindsym $AltC+h focus left
#bindsym $AltC+j focus down
#bindsym $AltC+k focus up
#bindsym $AltC+l focus right
# Keybind; Move Window {{{2
# Note: $SuperC+h fails without error-msg
bindsym $SuperS+h move left
bindsym $SuperS+j move down
bindsym $SuperS+k move up
bindsym $SuperS+l move right
### Move; by Vim-Additional
#bindsym $AltS+h move left
#bindsym $AltS+j move down
#bindsym $AltS+k move up
#bindsym $AltS+l move right
## Move; by Cursor Keys
#bindsym $SuperS+Left move left
#bindsym $SuperS+Down move down
#bindsym $SuperS+Up move up
#bindsym $SuperS+Right move right

# Toggle
bindsym --release $Super+comma        $noid $MYSCRIPTS/touchpad-toggle.sh
bindsym --release $Super+semicolon    $noid $MYSCRIPTS/touchpad-toggle.sh
bindsym --release $Super+$ClickMiddle $noid $MYSCRIPTS/touchpad-toggle.sh

# Mouse #{{{2
bindsym $SuperC+w mode "$ws_style"
set $ws_style Workspace: (F)loating, f(U)llscreen, (T)ab, (S)tacking, (H)orizontal, (V)ertical or (N)othing
mode "$ws_style" {
# No use?
bindsym f $noid floating toggle, mode "default"
bindsym u $noid fullscreen toggle, mode "default"
bindsym t $noid layout tabbed, mode "default"
bindsym s $noid layout stacking, mode "default"
#bindsym s $noid layout stacked, mode "default"
bindsym h $noid layout splith, mode "default"
bindsym v $noid layout splitv, mode "default"

bindsym Escape       mode "default"
bindsym Ctrl+squarebrace mode "default"
bindsym Return       mode "default"
bindsym space        mode "default"
bindsym $SuperC+s  mode "default"
bindsym Ctrl+c       mode "default"
bindsym $Super+space mode "default"
}

# Use Mouse+$Super to drag floating windows to their wanted position
floating_modifier $Super
focus_follows_mouse no
# mouse_warping: output|none
mouse_warping none
# Window; Layout {{{2
bindsym F11 fullscreen toggle
bindsym $SuperS+f fullscreen toggle
# in case, cannot move window into tabbed position.
bindsym $SuperS+t layout tabbed
bindsym $Super+$Alt+t layout tabbed
#bindsym $SuperS+s split h;exec notify-send 'tile horizontally'
#bindsym $SuperS+v split v;exec notify-send 'tile vertically'
#bindsym $SuperS+t layout tabbed; exec notify-send 'tile tabbed'
# stacking: like tabbed, but switch windows up & down.
#bindsym $SuperS+s layout stacking
#bindsym $SuperS+e layout toggle split
#bindsym $SuperS+f floating toggle
## on Floating; Change Focus
# change focus between tiling / floating windows
#bindsym $SuperS+o focus mode_toggle
#bindsym $Super+a focus parent
#bindsym $Super+u focus child

## Borders between Windows {{{2
#bindsym $mod+u border none
#bindsym $mod+y border pixel 1
#bindsym $mod+n border normal

# Keybind of Mode on i3 {{{1
# Mode; Window {{{2
set $Window Window: (C)lose or (Q)uit to kill current window
bindsym $Super+w mode "$Window"; $notify 'Window'

mode "$Window" {
bindsym --release c kill; mode "default"
bindsym --release q kill; mode "default"
#bindsym --release z kil; mode "default"

bindsym Escape           mode "default"
bindsym Ctrl+bracketleft mode "default"
bindsym bracketleft      mode "default"

bindsym space  mode "default"
bindsym Return mode "default"
bindsym Ctrl+c mode "default"
}

# Mode; Systemctl {{{2
## If use i3-nagbar {{{3
#bindsym $Super+x  exec "i3-nagbar -t warning -f SF Mono 12 -m  'Do you really want to exit i3?' -b 'q:poweroff' 'systemctl poweroff' -b 'r:reboot' 'systemctl reboot' -b 'l:logout' 'i3-msg exit'", mode "$system"
#bindsym $SuperS+x exec "i3-nagbar -t warning -f SF Mono 12 -m  'Do you really want to exit i3?' -b 'q:poweroff' 'systemctl poweroff' -b 'r:reboot' 'systemctl reboot' -b 'l:logout' 'i3-msg exit'", mode "$system"
#}}}
set $Systemctl Poweroff? (Y)es, (N)o, (H)ybernate (S)uspend, (R)eboot or (L)ock?
bindsym $Super+x mode "$Systemctl"; $alert 'systemctl'

mode "$Systemctl" {
#bindsym s $noid $locker && systemctl suspend, mode "default"
#bindsym l $noid i3-msg exit, mode "default"
#bindsym k $noid i3-msg exit, mode "default"
bindsym --release h $noid $locker && systemctl hibernate, mode "default"
bindsym --release l $noid $locker, mode "default"
bindsym --release k $noid $locker, mode "default"
bindsym --release s $noid $locker && systemctl suspend, mode "default"

bindsym --release r $noid systemctl reboot,   mode "default"
bindsym --release p $noid systemctl poweroff, mode "default"
bindsym --release q $noid systemctl poweroff, mode "default"
bindsym --release y $noid systemctl poweroff, mode "default"
bindsym --release u $noid systemctl poweroff, mode "default"

bindsym Escape           mode "default"
bindsym bracketleft      mode "default"
bindsym Ctrl+bracketleft mode "default"

bindsym space  mode "default"
bindsym Return mode "default"
bindsym Ctrl+c mode "default"
}

# Mode; Resize Window {{{2
set $Resize Resize as you want: (H) shrink  (J) grow  (K) shrink  (L) grow  | <Ctrl-C>: Cancel
bindsym $Super+Ctrl+r mode "$Resize"
# you can also use the mouse for that
mode "$Resize" {
# These bindings trigger as soon as you enter the resize mode
#bindsym j resize shrink width 25 px or 25 ppt
#bindsym k resize grow width 25 px or 25 ppt
#bindsym n resize shrink width 25 px or 25 ppt
#bindsym w resize grow width 25 px or 25 ppt
#bindsym h resize grow height 25 px or 25 ppt
#bindsym l resize shrink height 25 px or 25 ppt

# same bindings, but for the arrow keys
bindsym h resize shrink width 25 px or 25 ppt
bindsym j resize grow height 25 px or 25 ppt
bindsym k resize shrink height 25 px or 25 ppt
bindsym l resize grow width 25 px or 25 ppt

# back to normal: Enter or Escape or $Super+r
bindsym Escape           mode "default"
bindsym Ctrl+bracketleft mode "default"
bindsym bracketleft      mode "default"

bindsym space  mode "default"
bindsym Return mode "default"
bindsym Ctrl+c mode "default"
}

# Mode; Backlight {{{2
set $Backlight Backlight Control: H:100, M:50, L:5
bindsym $Super+Ctrl+b mode "$Backlight"

mode "$Backlight" {
bindsym Shift+h $alert 'Brightness: 100'; $noid xbacklight -set 100
bindsym h       $alert 'Brightness: 100'; $noid xbacklight -set 100
bindsym Shift+m $alert 'Brightness: 50';  $noid xbacklight -set 50
bindsym m       $alert 'Brightness: 50';  $noid xbacklight -set 50
bindsym Shift+l $alert 'Brightness: 5'; $noid sleep 1; $noid xbacklight -set 5
bindsym l       $alert 'Brightness: 5'; $noid sleep 1; $noid xbacklight -set 5

bindsym k $notify 'Brightness: +1';  $noid xbacklight -inc 1
bindsym j $notify 'Brightness: -1';  $noid xbacklight -dec 1
bindsym u $notify 'Brightness: +5';  $noid xbacklight -inc 5
bindsym d $notify 'Brightness: -5';  $noid xbacklight -dec 5
bindsym b $notify 'Brightness: +10'; $noid xbacklight -inc 10
bindsym f $notify 'Brightness: -10'; $noid xbacklight -dec 10

bindsym Escape           mode "default"
bindsym bracketleft      mode "default"
bindsym Ctrl+bracketleft mode "default"

bindsym space         mode "default"
bindsym Return        mode "default"
bindsym Ctrl+c        mode "default"
}

# Mode; Sound Volume {{{2
# Ref: Relation of Alsa & PluseAudio
# [https://qiita.com/propella/items/4699eda71cd742cba8d3]
# `pacmd list-sinks` to get list to control
## Depends: pulseaudio & pavucontrol
# Depends: pulseaudio-ctl
# Recommend: pamixer (a frontend)
# Recommend: pulseaudio-alsa (for flash)
set $Sound Sound Volume: (M)ute
bindsym $Super+s mode "$Sound"

set $mute $noid pacmd set-sink-mute @DEFAULT_SINK@ true; mode default
set $unmute      $noid pacmd set-sink-mute @DEFAULT_SINK@ false
set $mute_toggle $noid pacmd set-sink-mute @DEFAULT_SINK@ toggle
# Note: failed to use $unmute in $volume; cannot nest variable?
set $volume $noid pacmd set-sink-mute @DEFAULT_SINK@ false; $noid pactl set-sink-volume @DEFAULT_SINK@

mode "$Sound" {
#bindsym m $mute_toggle; $alert 'Sound: mute/unmute'
bindsym m $mute; $alert 'Sound: Mute'
# Mnemonic: Quiet
bindsym q $mute; $alert 'Sound: Mute'

bindsym k $volume +1%;  $notify 'Sound +1%'
bindsym j $volume -1%;  $notify 'Sound -1%'
bindsym u $volume +5%;  $notify 'Sound +5%'
bindsym d $volume -5%;  $notify 'Sound -5%'
bindsym b $volume +10%; $notify 'Sound +10%'
bindsym f $volume -10%; $notify 'Sound -10%'

bindsym Escape           mode "default"
bindsym bracketleft      mode "default"
bindsym Ctrl+bracketleft mode "default"

bindsym Return mode "default"
bindsym space  mode "default"
bindsym Ctrl+c mode "default"
}

# Keybind of Mode for apps {{{1
# Mode; Terminal {{{2
set $Terminal Terminal: (A)lacritty (U)rxvt (X)term
bindsym $Super+t mode "$Terminal"; $notify 'Select Terminal'

mode "$Terminal" {
bindsym a exec alacritty; mode "default"
bindsym u exec urxvt;     mode "default"
bindsym x exec xterm;     mode "default"

bindsym t        exec $termporal; mode "default"
bindsym $Super+t exec $termporal; mode "default"

bindsym Escape           mode "default"
bindsym Ctrl+bracketleft mode "default"
bindsym bracketleft      mode "default"

bindsym Return mode "default"
bindsym space  mode "default"
bindsym Ctrl+c mode "default"
}

# Mode; Editor {{{2
set $Editor Editor: (C)ode (E)macs | nvim: (Q)t (G)o (R)ust (T)ypescript (A)lacritty

bindsym $Super+e  mode "$Editor"; $notify 'Select Editor'
bindsym $SuperS+e mode "$Editor"; $notify 'Select Editor'
bindsym $SuperS+v mode "$Editor"; $notify 'Select Editor'
bindsym $SuperS+n mode "$Editor"; $notify 'Select Editor'

mode "$Editor" {
bindsym c $noid code;  mode "default"
bindsym e $noid emacs; mode "default"

# Vim
bindsym q $noid nvim-qt; mode "default"
bindsym g $noid gonvim;  mode "default"
bindsym r $noid gnvim;   mode "default"
bindsym t $noid nyaovim; mode "default"
#bindsym a $noid glrnvim; mode "default"
bindsym a $noid alacritty -e nvim; mode "default"

bindsym Escape           mode "default"
bindsym bracketleft      mode "default"
bindsym Ctrl+bracketleft mode "default"

bindsym Ctrl+c mode "default"
bindsym space  mode "default"
bindsym Return mode "default"
}

# Mode; Browser {{{2
set $Browser Browser: (S)ervo (F)irefox (C)hrome (Q)utebrowser

bindsym $SuperS+b  mode "$Browser"; $notify 'Select Browser'

mode "$Browser" {
bindsym --release c $noid $chrome;     mode "default"
bindsym --release q $noid qutebrowser; mode "default"
bindsym --release f $noid firefox;     mode "default"
bindsym --release s $noid servo;       mode "default"

bindsym b        $noid $browser; mode "default"
bindsym $Super+b $noid $browser; mode "default"

bindsym Escape           mode "default"
bindsym bracketleft      mode "default"
bindsym Ctrl+bracketleft mode "default"

bindsym Ctrl+c mode "default"
bindsym space  mode "default"
bindsym Return mode "default"
}

# Mode; Terminal {{{2
# Mnemonic: Finder or File explorer
set $Finder Finder: (R)anger (H)unter (P)acman-file-manager
bindsym $Super+f  mode "$Finder"; $notify 'Select Finder'

mode "$Finder" {
bindsym --release p exec pcmanfm; mode "default"
bindsym --release m exec pcmanfm; mode "default"
bindsym --release r exec alacritty -e ranger; mode "default"
bindsym --release h exec alacritty -e hunter; mode "default"

bindsym Escape           mode "default"
bindsym Ctrl+bracketleft mode "default"
bindsym bracketleft      mode "default"

bindsym Return mode "default"
bindsym space  mode "default"
bindsym Ctrl+c mode "default"
}

# Keybind for Workspace {{{1
# Workspace; Focus Switch {{{2
workspace_auto_back_and_forth yes
#bindsym $SuperS+6 workspace back_and_forth
#bindsym $SuperC+6 move container to workspace back_and_forth; workspace back_and_forth

bindsym $Super+minus workspace prev
bindsym $Super+equal workspace next
bindsym $Super+o workspace prev
bindsym $Super+i workspace next

bindsym $Super+1 workspace $ws1
bindsym $Super+2 workspace $ws2
bindsym $Super+3 workspace $ws3
bindsym $Super+4 workspace $ws4
bindsym $Super+5 workspace $ws5
bindsym $Super+6 workspace $ws6
bindsym $Super+7 workspace $ws7
bindsym $Super+8 workspace $ws8
bindsym $Super+9 workspace $ws9
bindsym $Super+0 workspace $ws0

# Workspace; Move {{{2
bindsym $SuperS+1 move container to workspace $ws1
bindsym $SuperS+2 move container to workspace $ws2
bindsym $SuperS+3 move container to workspace $ws3
bindsym $SuperS+4 move container to workspace $ws4
bindsym $SuperS+5 move container to workspace $ws5
bindsym $SuperS+6 move container to workspace $ws6
bindsym $SuperS+7 move container to workspace $ws7
bindsym $SuperS+8 move container to workspace $ws8
bindsym $SuperS+9 move container to workspace $ws9
bindsym $SuperS+0 move container to workspace $ws0

# Keybind for Apps {{{1
# Keybind; Notification {{{2
## dunst; a notification-daemon
bindsym $Super+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"

# Keybind; open Menu {{{2
#bindsym $Super+Return $noid i3-dmenu-desktop
#bindsym $SuperS+Return exec terminal -e 'bmenu'
bindsym $Super+Ctrl+Return $noid $menu
#bindsym $Super+d exec dmenu_run
# # TODO: convert this bash-script into fish's
# Ref: dmenu with fzf https://github.com/junegunn/fzf/wiki/Examples
bindsym $Super+Return $noid $menu

# Keybind; open Terminal {{{2
# urxvtc; add `-k` to kill daemon, too.
#bindsym $Super+u exec urxvtc
#bindsym $Super+u exec urxvt
#bindsym $Super+t exec alacritty
# Keybind; open Editor {{{2
# the numbar is RAM by htop in terminal of the editor
# nvim on alacritty: 448M
bindsym $Super+n $noid nvim-qt
##bindsym $Super+q $noid nvim-qt
#bindsym $Super+v $noid alacritty -e 'vim'
#bindsym $Super+a $noid alacritty -e 'nvim'
## nvim-qt: 418M
## TODO: start nvim-qt sharing the buffer-list w/ another nvim-qt which is already started.
##bindsym $SuperS+n $noid i3-sensible-terminal -e "nvim-qt --server $NVIM_LISTEN_ADDRESS"
##bindsym $Super+r $noid nvim-gtk # font decayed
#bindsym $SuperS+g $noid glrnvim
##bindsym $SuperS+g $noid gonvim
## gnvim: 612M, but firstest startup in 3 sec
#bindsym $Super+g $noid gnvim
##bindsym $Super+y $noid nyaovim
## oni: 718M
#bindsym $Super+o $noid oni
#bindsym $Super+e $noid emacs
## code: 847M
#bindsym $SuperS+v $noid code
#bindsym $SuperS+c $noid code
# Keybind; open Browser {{{2
bindsym $Super+b exec qutebrowser
bindsym $Super+q exec qutebrowser
#bindsym $Super+f exec firefox
#bindsym $Super+c exec google-chrome-stable
#bindsym $Super+p exec palemoon

# Keybind; Sound Volume {{{2
#bindsym $Super+Ctrl+m exec terminal -e 'alsamixer'
# Keybind; Music Player {{{2
bindsym $SuperS+m exec terminal -e 'mocp'

# Keybind on Fn {{{1
# Fn; Backlight {{{2
bindsym XF86MonBrightnessUp   exec xbacklight -inc 5
bindsym XF86MonBrightnessDown exec xbacklight -dec 5
# Fn; Audio Volume {{{2
# Depends: pulseaudio & pavucontrol
# Recommend: pamixer (a frontend)
# Recommend: pulseaudio-alsa (for flash)
bindsym XF86AudioRaiseVolume $noid pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume $noid pactl set-sink-volume 0 -5%
bindsym XF86AudioMute        $noid pactl set-sink-mute 0 toggle
# Fn; Screen Shot {{{2
# depend: imagemagick
#bindsym $Super+Print $noid import -window root ~/Pictures/screenshot
bindsym $Super+Print $noid i3-scrot
bindsym Print $noid exec ${MYSCRIPTS}/recording-toggle.sh

# Keybind of Default {{{1
#bindsym $Super+Shift+minus move scratchpad
#bindsym $Super+$Alt+h exec xdg-open /usr/share/doc/manjaro/i3_help_live.pdf
#bindsym $Super+Shift+F3 exec gksu pcmanfm
#bindsym $SuperS+i exec calamares_polkit
#bindsym $Super+Ctrl+a exec terminal -e 'setup'
#bindsym $mod+t $noid pkill compton
#bindsym $mod+Ctrl+t $noid compton -b
#bindsym $mod+Ctrl+x --release $noid xkill

## Config for i3-gaps: {{{1
#
## Set inner/outer gaps
#gaps inner 14
#gaps outer -2
#
## Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
## gaps inner|outer current|all set|plus|minus <px>
## gaps inner all set 10
## gaps outer all plus 5
#
## Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on
#
## Smart borders (draw borders around container only if it is not the only container on this workspace)
## on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on
#
## Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"
#
#mode "$mode_gaps" {
#        bindsym o      mode "$mode_gaps_outer"
#        bindsym i      mode "$mode_gaps_inner"
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
