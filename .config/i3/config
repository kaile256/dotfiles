# Help: https://i3wm.org/docs/userguide.html
# Ref: .xinitrc

# Variables {{{1
# Var; Font {{{2
# Note: do NOT insert size-number before commas
#   because the following fonts will be ignored;
#   thus, write different-sized fonts in another line
# Ref: https://wiki.archlinux.jp/index.php/I3
font pango:Icons 14
font pango:SF Mono, Hack Nerd Font, DejaVu Sans Mono 11

# Var; Keyname {{{2
set $Super  Mod4
set $SuperS Mod4+Shift
set $SuperC Mod4+Control
set $SuperA Mod4+Mod1
set $Alt    Mod1
set $AltC   Mod1+Control
set $AltS   Mod1+Shift

# TODO: make middle click available to bind in i3wm
set $ClickLeft   button1
set $ClickMiddle button2
set $ClickRight  button3
set $ScrollUp    button4
set $ScrollDown  button5

# Var: Command {{{2
# `--no-startup-id` disables startup-notification;
# the notification takes focus to the new window.
# Ref: [exec] in i3 User's Guide
set $release bindsym --release

set $noid   exec --no-startup-id
set $always exec_always --no-startup-id

set $locker ~/.config/i3/lock.sh

set $menu alacritty --title fzf-menu --config-file $XDG_CONFIG_HOME/alacritty/dmenu.yml -e i3-dmenu-desktop --dmenu=fzf
for_window [title=^fzf-menu$] floating enable border normal

set $notify exec --no-startup-id notify-send --expire-time 1100
set $alert  exec --no-startup-id notify-send --expire-time 1100 --urgency critical

# TODO: make $bindesc available
#set $bindesc bindsym Escape mode default; bindsym Ctrl+bracketleft mode default; bindsym bracketleft mode default; bindsym space mode default; bindsym Return mode default; bindsym Ctrl+C mode default

# Var; Apps {{{2
set $browser qutebrowser
set $chrome google-chrome-stable

set $nvim nvim-qt
set $vim vim
set $vi alacritty --title vi -e vi

set $urxvt urxvt
# urxvtc; add `-k` to kill daemon, too.
#set $urxvt urxvtc

set $termporal alacritty --title termporal --config-file $XDG_CONFIG_HOME/alacritty/floating.yml -e fish
#set $termporal alacritty --title termporal -e nvim -u $XDG_CONFIG_HOME/nvim/rc/termporal.vim
for_window [title=^termporal$] floating enable border hide_edge_borders vertical
#set $terminal urxvt

# Var; i3 Workspace {{{2
workspace_layout tabbed

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0:main"

workspace 0 output eDP1
#workspace "0" output HDMI2

# Var; i3 Window {{{2
# Use Mouse+$Super to drag floating windows to their wanted position
floating_modifier $Super
floating_maximum_size 1200 x 900
focus_follows_mouse no
# mouse_warping: output|none
mouse_warping none

## <normal|1pixel|pixel xx|none|pixel>
#default_border pixel 1
#default_floating_border normal
## Hide borders
#hide_edge_borders none

# Var; i3 Criteria {{{2
# Note: must be in double-quotes, not in single

# If Urgent, switch to the workspace immediately.
# Note: (?i) means case-Insensitive
#for_window [urgent=latest] focus

no_focus [title="qutebrowser$"]

#assign [class="^URxvt$"] → 2
#assign [class="^URxvt$"] → output primary

for_window [title="^TMPi3"]   floating enable border normal
for_window [title="^Toggle"]  floating enable border normal
for_window [title="^Package"] floating enable border normal
#for_window [class="calamares"] floating enable border normal
#for_window [class="Clipgrab"] floating enable
#for_window [title="File Transfer*"] floating enable
#for_window [class="Galculator"] floating enable border pixel 1
#for_window [class="GParted"] floating enable border normal
#for_window [title="i3_help"] floating enable sticky enable border normal
#for_window [class="Lightdm-settings"] floating enable
#for_window [class="Lxappearance"] floating enable border normal
#for_window [class="Manjaro Settings Manager"] floating enable border normal
#for_window [title="MuseScore: Play Panel"] floating enable
#for_window [class="Nitrogen"] floating enable sticky enable border normal
#for_window [class="Oblogout"] fullscreen enable
#for_window [class="octopi"] floating enable
#for_window [title="About Pale Moon"] floating enable
#for_window [class="Pamac-manager"] floating enable
#for_window [class="Pamac-updater"] floating enable
#for_window [class="Pavucontrol"] floating enable
#for_window [class="Qtconfig-qt4"] floating enable border normal
#for_window [class="qt5ct"] floating enable sticky enable border normal
#for_window [title="sudo"] floating enable border normal
#for_window [class="Simple-scan"] floating enable border normal
#for_window [class="(?i)System-config-printer.py"] floating enable border normal
#for_window [class="Skype"] floating enable border normal
#for_window [class="Timeset-gui"] floating enable border normal
#for_window [class="(?i)virtualbox"] floating enable border normal
#for_window [class="Xfburn"] floating enable

## Status Bar; use polybar instead {{{1
## Note: use polybar instead
## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
#bar {
## Use pyi3status instead (status_command python ~/.config/i3/i3status/config.py)
#i3bar_command ${XDG_CONFIG_HOME}/polybar/launch.sh
#status_command i3status
##status_command i3blocks -c ~/.config/i3/i3bar/i3blocks/config
#output            eDP1
#output            HDMI1
#output            HDMI2
#output            LVDS1
#position          bottom
#mode              dock
#workspace_buttons yes
#tray_output       both
#font pango:Icons, SF Mono 12
#colors {
#background #000000
#statusline #ffffff
#focused_workspace  #ffffff #285577
#active_workspace   #ffffff #333333
#inactive_workspace #888888 #222222
#urgent_workspace   #ffffff #900000
#}
#}

# Auto Start {{{1
# Note: exec_always to reload on a restart i3 itself
$always $MYSCRIPTS/polybar-launch.sh
#exec_always --no-startup-id xfce4-panel --disable-wm-check

# Wallpaper
# xrandr: control monitor
$always $MYSCRIPTS/monitor-try.sh
# xautolock: a timer to lock screen of PC
$noid xautolock -time 5 -locker $locker
# nitrogen: a wallpaper manager
# picom: compton is deprecated name
$noid nitrogen --restore; sleep 1; picom -b
## TODO: i3-cheat sheet on desktop.
#$noid "feh --bg-scale $HOME/.config/i3/~~.jpg"

# necessary?
$noid sudo tlp start

$noid alsactl daemon
# pulseaudio: deamon to control via keyboard.
$noid pulseaudio --start
# pa-applet (pulseaudio):
#$noid pa-applet
#$noid volumeicon

# nm-applet: WiFi Network Manager; use nmcli instead
#$noid nm-applet

$noid fcitx

# dunst: Light Notification Daemon
# FAQ: https://dunst-project.org/faq/
# Conf: dunst/dunstrc
# dunst works on `notify-send`
$always killall --quiet dunst; sleep 1; dunst

# parcellite: Clipboard Manager
#$noid parcellite
$noid clipit

# Show the CP's status on the wallpaper.
#exec --no-startup-id start_conky_live_maia
#exec --no-startup-id blueman # use bluetoothctl
#exec --no-startup-id pamac-tray
#exec --no-startup-id desktop-items
#exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec_always --no-startup-id sbxkb
#exec --no-startup-id xfce4-power-manager
#exec_always --no-startup-id ff-theme-util
#exec_always --no-startup-id setcursor
#bindsym $mod+Ctrl+M exec pavucontrol

# urxvtd: Daemon of rxvt-unicode. Use urxvtc as a client.
#$noid "urxvtd -o -f"

# Ref: specifiy workspace to start in
#    @ https://ayageman.blogspot.com/2017/02/t510-2.html
# TODO: open qutebrowser in background
#$noid i3-msg 'workspace 1' | exec qutebrowser; 'workspace 0'
#$noid nvim-qt

# Keybind; i3 {{{1
# Note: check keyname, or keycode, by $ xmodmap -pke
# Note: `--release` disturbs continuous actions while pressed

# Note: `;` chains commands; `,` only applys former command to applied window
# Sample: bindsym $mod+X move container to workspace 3; workspace 3
# Sample: for_window [class="^foo$"] floating enable, move container to workspace 4
# Keybind; i3's Reload/Restart {{{2
# reload the configuration file
$release $SuperS+space reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
$release $Super+space restart

# Keybind; Workspace {{{2
# Workspace; Focus Switch {{{3
workspace_auto_back_and_forth yes
# [smart|urgent|focus|none]
focus_on_window_activation smart
#bindsym $SuperS+6 workspace back_and_forth
#bindsym $SuperC+6 move container to workspace back_and_forth; workspace back_and_forth

bindsym $Super+minus workspace prev
bindsym $Super+equal workspace next

bindsym $Super+O workspace prev
bindsym $Super+I workspace next

bindsym $Super+1 workspace $ws1
bindsym $Super+2 workspace $ws2
bindsym $Super+3 workspace $ws3
bindsym $Super+4 workspace $ws4
bindsym $Super+5 workspace $ws5
bindsym $Super+6 workspace $ws6
bindsym $Super+7 workspace $ws7
bindsym $Super+8 workspace $ws8
bindsym $Super+9 workspace $ws9
bindsym $Super+0 workspace $ws0

# Workspace; Move {{{3
bindsym $SuperS+1 move container to workspace $ws1; workspace $ws1
bindsym $SuperS+2 move container to workspace $ws2; workspace $ws2
bindsym $SuperS+3 move container to workspace $ws3; workspace $ws3
bindsym $SuperS+4 move container to workspace $ws4; workspace $ws4
bindsym $SuperS+5 move container to workspace $ws5; workspace $ws5
bindsym $SuperS+6 move container to workspace $ws6; workspace $ws6
bindsym $SuperS+7 move container to workspace $ws7; workspace $ws7
bindsym $SuperS+8 move container to workspace $ws8; workspace $ws8
bindsym $SuperS+9 move container to workspace $ws9; workspace $ws9
bindsym $SuperS+0 move container to workspace $ws0; workspace $ws0

# Keybind; Window {{{2
bindsym $Super+H focus left
bindsym $Super+J focus down
bindsym $Super+K focus up
bindsym $Super+L focus right

# Note: $SuperC+H fails without error-msg
bindsym $SuperS+H move left
bindsym $SuperS+J move down
bindsym $SuperS+K move up
bindsym $SuperS+L move right

bindsym Shift+F11 fullscreen toggle ; $alert 'Layout: fullscreen toggle'

# Keybind; Touchpad Toggle {{{2
$release $Super+comma        $noid $MYSCRIPTS/touchpad-toggle.sh
$release $Super+semicolon    $noid $MYSCRIPTS/touchpad-toggle.sh
$release $Super+$ClickMiddle $noid $MYSCRIPTS/touchpad-toggle.sh

# Keybind; Mode on i3 {{{1
# WARNING: use double quotes for either in `set` or `mode`
# Mode; Layout {{{2
set $Layout " Layout: (T)abbed (H)orizontal (V)ertical stac(K)ing (F)loating f(U)llscreen | (W) for Window mode"
$release $SuperS+W mode $Layout; $alert 'Layout mode'

mode $Layout {
$release W       mode $Window; $notify 'Window mode'
$release Shift+W mode $Window; $notify 'Window mode'

bindsym H split h; mode default; $alert 'Layout: horizontal'
bindsym V split v; mode default; $alert 'Layout: vertical'

bindsym T layout tabbed;   mode default; $alert 'Layout: tabbed'
bindsym K layout stacking; mode default; $alert 'Layout: stacking'

# Note: Fullscreen/Floating could be irritative;
#       window sometimes hides on the status-bar
bindsym F floating   toggle; mode default; $alert 'Layout: floating toggle'
bindsym U fullscreen toggle; mode default; $alert 'Layout: fullscreen toggle'

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Window {{{2
set $Window " Window: (C)lose or (Q)uit to kill current window | HJKL to move | Shift- to resize | (W) for Layout mode "
$release $Super+W mode $Window; $notify 'Window mode'

mode $Window {
$release W       mode $Layout; $alert 'Layout mode'
$release Shift+W mode $Layout; $alert 'Layout mode'

$release C kill; mode default
$release Q kill; mode default
#$release z kil; mode default

bindsym plus $noid picom -cbm 0.75
bindsym minus $noid picom -cbm 0.75

bindsym Shift+H resize shrink width  25 px or 25 ppt
bindsym Shift+K resize shrink height 25 px or 25 ppt
bindsym Shift+J resize grow   height 25 px or 25 ppt
bindsym Shift+L resize grow   width  25 px or 25 ppt

bindsym Shift+F resize grow   width  50 px or 50 ppt
bindsym Shift+B resize shrink width  50 px or 50 ppt
bindsym Shift+D resize grow   height 50 px or 50 ppt
bindsym Shift+U resize shrink height 50 px or 50 ppt

# especially for floating window
bindsym H move left  25 px
bindsym J move down  25 px
bindsym K move up    25 px
bindsym L move right 25 px

bindsym B move left  50 px
bindsym F move right 50 px
bindsym D move down  50 px
bindsym U move up    50 px

## Mnemonic: parent is older, <c-o>; child is newer, <c-i> in vim
bindsym Ctrl+O focus parent; mode default
bindsym Ctrl+I focus child;  mode default

## Mnemonic: undo in vi or U in vim
# mode_toggle: toggle between floating and tiling
#bindsym Shift+U focus mode_toggle
#bindsym Shift+T focus tiling
#bindsym Shift+F floating toggle
#bindsym Shift+U floating toggle

#bindsym U fullscreen toggle,   mode default
#bindsym T layout     tabbed,   mode default
#bindsym S layout     stacking, mode default
##bindsym S layout stacked, mode default
#bindsym H layout     splith,   mode default
#bindsym V layout     splitv,   mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Systemctl {{{2
set $Systemctl " Poweroff? (Y)es, (N)o, (H)ybernate (S)uspend, (R)eboot or (L)ock? "
$release $Super+X mode $Systemctl; $alert 'Systemctl mode'

mode $Systemctl {
#bindsym S $noid $locker && systemctl suspend, mode default
#bindsym L $noid i3-msg exit, mode default
#bindsym K $noid i3-msg exit, mode default
$release h $noid $locker && systemctl hibernate, mode default
$release l $noid $locker, mode default
$release k $noid $locker, mode default
$release s $noid $locker && systemctl suspend, mode default

$release r $noid systemctl reboot,   mode default
$release p $noid systemctl poweroff, mode default
$release q $noid systemctl poweroff, mode default
$release y $noid systemctl poweroff, mode default
$release u $noid systemctl poweroff, mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Backlight {{{2
set $Backlight " Backlight: H:100, M:50, L:5 "
$release $Super+Ctrl+B mode $Backlight; $notify 'Backlight mode'

mode $Backlight {
bindsym Shift+H $alert 'Brightness: 100'; $noid xbacklight -set 100
bindsym H       $alert 'Brightness: 100'; $noid xbacklight -set 100
bindsym Shift+M $alert 'Brightness: 50';  $noid xbacklight -set 50
bindsym M       $alert 'Brightness: 50';  $noid xbacklight -set 50
bindsym Shift+L $alert 'Brightness: 5'; $noid sleep 1; $noid xbacklight -set 5
bindsym L       $alert 'Brightness: 5'; $noid sleep 1; $noid xbacklight -set 5

bindsym K $notify 'Brightness: +1';  $noid xbacklight -inc 1
bindsym J $notify 'Brightness: -1';  $noid xbacklight -dec 1
bindsym U $notify 'Brightness: +5';  $noid xbacklight -inc 5
bindsym D $notify 'Brightness: -5';  $noid xbacklight -dec 5
bindsym B $notify 'Brightness: +10'; $noid xbacklight -inc 10
bindsym F $notify 'Brightness: -10'; $noid xbacklight -dec 10

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Sound Volume {{{2
# Ref: Relation of Alsa & PluseAudio
# [https://qiita.com/propella/items/4699eda71cd742cba8d3]
# `pacmd list-sinks` to get list to control
## Depends: pulseaudio & pavucontrol
# Depends: pulseaudio-ctl
# Recommend: pamixer (a frontend)
# Recommend: pulseaudio-alsa (for flash)
set $Sound " Sound Volume: (M)ute "
$release $Super+S mode $Sound; $notify 'Sound mode'

set $mute exec pacmd set-sink-mute @DEFAULT_SINK@ true; mode default
set $unmute      exec pacmd set-sink-mute @DEFAULT_SINK@ false
set $mute_toggle exec pacmd set-sink-mute @DEFAULT_SINK@ toggle
# Note: failed to use $unmute in $volume; cannot nest variable?
set $volume exec --no-startup-id pacmd set-sink-mute @DEFAULT_SINK@ false; exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@

mode $Sound {
#bindsym M $mute_toggle; $alert 'Sound: mute/unmute'
bindsym M $mute; $alert 'Sound: Mute'
# Mnemonic: Quiet
bindsym Q $mute; $alert 'Sound: Mute'

bindsym Shift+H $volume 100; $notify 'Sound: 100'
bindsym Shift+M $volume 50;  $notify 'Sound: 50'
bindsym Shift+L $volume 0;   $notify 'Sound: 0'

bindsym K $volume +1%;  $notify 'Sound: +1%'
bindsym J $volume -1%;  $notify 'Sound: -1%'
bindsym U $volume +5%;  $notify 'Sound: +5%'
bindsym D $volume -5%;  $notify 'Sound: -5%'
bindsym B $volume +10%; $notify 'Sound: +10%'
bindsym F $volume -10%; $notify 'Sound: -10%'

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Keybind; Mode for apps {{{1
# Mode; Terminal {{{2
bindsym $Super+T exec $termporal

set $Console " Console: (A)lacritty (U)rxvt (X)term "
bindsym $Super+C mode $Console; $notify 'Consoles'

mode $Console {
bindsym A exec alacritty; mode default
bindsym U exec $urxvt;    mode default
bindsym X exec xterm;     mode default

bindsym T        exec $termporal; mode default
bindsym $Super+T exec $termporal; mode default
bindsym C        exec $termporal; mode default
bindsym $Super+C exec $termporal; mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Neovim {{{2
set $Neovim " Neovim: (Q)t (G)o (R)ust (T)ypescript (A)lacritty "
$release $Super+N mode $Neovim; $notify 'Neovim: backends'

mode $Neovim {
# Vim
bindsym Q $noid nvim-qt; mode default
bindsym G $noid gonvim;  mode default
bindsym R $noid gnvim;   mode default
bindsym T $noid nyaovim; mode default
#bindsym A $noid glrnvim; mode default
bindsym A $noid alacritty -e nvim; mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Editor {{{2
set $Editor " Editor: (C)ode (E)macs (V)im (N)eovim "

$release $Super+E mode $Editor; $notify 'Editors'

mode $Editor {
bindsym C $noid code;  mode default; $notify 'Editor: vscode'
bindsym E $noid emacs; mode default; $notify 'Editor: emacs'
bindsym V $noid $vim;  mode default; $notify 'Editor: vim'
bindsym N $noid $nvim; mode default; $notify 'Editor: neovim'

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Browser
set $Browser " Browser: (S)ervo (F)irefox (C)hrome (Q)utebrowser "

$release $Super+B mode $Browser; $notify 'Browsers'

mode $Browser {
$release c $noid $chrome;     mode default
$release q $noid qutebrowser; mode default
$release f $noid firefox;     mode default
$release s $noid servo;       mode default

$release B        $noid $browser; mode default
$release $Super+B $noid $browser; mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Mode; Terminal {{{2
# Mnemonic: Finder or File explorer
set $Finder " Finder: (R)anger (H)unter (P)acman-file-manager "
$release $Super+F  mode $Finder; $notify 'Finders'

mode $Finder {
$release p exec pcmanfm; mode default
$release m exec pcmanfm; mode default
$release r exec alacritty -e ranger; mode default
$release h exec alacritty -e hunter; mode default

bindsym Ctrl+C           mode default
bindsym bracketleft      mode default
bindsym Ctrl+bracketleft mode default
}

# Keybind for Apps {{{1
# Keybind; open Menu {{{2
# # TODO: convert this bash-script into fish's
# Ref: dmenu with fzf https://github.com/junegunn/fzf/wiki/Examples
bindsym $Super+Return $noid $menu

# Keybind; open Editor {{{2
# the numbar is RAM by htop in terminal of the editor
# nvim on alacritty: 448M
#bindsym $Super+N $noid nvim-qt
##bindsym $Super+Q $noid nvim-qt
#bindsym $Super+V $noid alacritty -e 'vim'
#bindsym $Super+A $noid alacritty -e 'nvim'
## nvim-qt: 418M
## TODO: start nvim-qt sharing the buffer-list w/ another nvim-qt which is already started.
##bindsym $SuperS+N $noid i3-sensible-terminal -e "nvim-qt --server $NVIM_LISTEN_ADDRESS"
##bindsym $Super+R $noid nvim-gtk # font decayed
#bindsym $SuperS+G $noid glrnvim
##bindsym $SuperS+G $noid gonvim
## gnvim: 612M, but firstest startup in 3 sec
#bindsym $Super+G $noid gnvim
##bindsym $Super+Y $noid nyaovim
## oni: 718M
#bindsym $Super+O $noid oni
#bindsym $Super+E $noid emacs
## code: 847M
#bindsym $SuperS+V $noid code
#bindsym $SuperS+C $noid code

# Keybind; open Browser {{{2
$release $Super+Q $noid qutebrowser

# Keybind; Sound Volume {{{2
#bindsym $Super+Ctrl+M exec terminal -e 'alsamixer'

# Keybind; Music Player {{{2
$release $SuperS+M exec terminal -e 'mocp'

# Keybind on Fn {{{1
# Fn; Backlight {{{2
bindsym XF86MonBrightnessUp   $noid xbacklight -inc 5; $notify 'Brightness: +5'
bindsym XF86MonBrightnessDown $noid xbacklight -dec 5; $notify 'Brightness: +5'

# Fn; Audio Volume {{{2
# Depends: pulseaudio & pavucontrol
# Recommend: pamixer (a frontend)
# Recommend: pulseaudio-alsa (for flash)
bindsym XF86AudioRaiseVolume $noid pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume $noid pactl set-sink-volume 0 -5%
bindsym XF86AudioMute        $noid pactl set-sink-mute 0 toggle

# Fn; Screen Shot {{{2
# depend: imagemagick
#bindsym $Super+Print $noid import -window root ~/Pictures/screenshot
bindsym $Super+Print $noid i3-scrot
bindsym Print $noid exec $MYSCRIPTS/recording-toggle.sh

# Keybind of Default {{{1
#bindsym $Super+Shift+minus move scratchpad
#bindsym $Super+$Alt+H exec xdg-open /usr/share/doc/manjaro/i3_help_live.pdf
#bindsym $Super+Shift+F3 exec gksu pcmanfm
#bindsym $SuperS+I exec calamares_polkit
#bindsym $Super+Ctrl+A exec terminal -e 'setup'
#bindsym $mod+T $noid pkill picom
#bindsym $mod+Ctrl+T $noid picom -b
#bindsym $mod+Ctrl+X --release $noid xkill

## Config for i3-gaps: {{{1
#
## Set inner/outer gaps
#gaps inner 14
#gaps outer -2
#
## Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
## gaps inner|outer current|all set|plus|minus <px>
## gaps inner all set 10
## gaps outer all plus 5
#
## Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on
#
## Smart borders (draw borders around container only if it is not the only container on this workspace)
## on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on
#
## Press $mod+Shift+G to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+G mode "$mode_gaps"
#
#mode "$mode_gaps" {
#        bindsym O      mode "$mode_gaps_outer"
#        bindsym I      mode "$mode_gaps_inner"
#}
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#}
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#}
